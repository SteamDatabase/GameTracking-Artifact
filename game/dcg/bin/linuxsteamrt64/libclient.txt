 A __bss_start
 A _edata
 A _end
 AssertMsg_ConditionFailed
 B pcre_callout
 B pcre_stack_guard
 B pcrecpp::RE::no_arg
 CBufferString::AppendConcat(int, char const* const*, int const*, bool)
 CBufferString::AppendFormat(char const*, ...)
 CBufferString::ComposeFileName(char const*, char const*, char)
 CBufferString::Concat(char const*, char const*, ...)
 CBufferString::ExtendPath(char const*, char)
 CBufferString::ExtractFileBase(char const*)
 CBufferString::ExtractFileExtension(char const*)
 CBufferString::ExtractFilePath(char const*)
 CBufferString::ExtractFirstDir(char const*)
 CBufferString::FixSlashes(char)
 CBufferString::FixupPathName()
 CBufferString::Format(char const*, ...)
 CBufferString::Insert(int, char const*, int, bool)
 CBufferString::MakeAbsolutePath(char const*, char const*)
 CBufferString::MakeRelativePath(char const*, char const*)
 CBufferString::Purge(int)
 CBufferString::Relinquish(CBufferString::EAllocationOption_t)
 CBufferString::RemoveAt(int, int)
 CBufferString::RemoveDotSlashes(char)
 CBufferString::RemoveFirstDir(CBufferString*)
 CBufferString::SetExtension(char const*)
 CBufferString::SetLength(int, bool, int*)
 CBufferString::SetPtr(char*, int, int, bool, bool)
 CBufferString::ShortenPath()
 CBufferString::StripExtension()
 CBufferString::StripTrailingSlash()
 CBufferString::Swap(CBufferString&)
 CBufferString::ToLowerFast(int)
 CFiber::ReachedZeroReferences()
 CGaussianRandomStream::AttachToStream(IUniformRandomStream*)
 CGaussianRandomStream::CGaussianRandomStream(IUniformRandomStream*)
 CMemAllocSystemInitialize
 COM_TimestampedLog
 CThread::CThread()
 CThread::GetName()
 CThread::Init()
 CThread::IsThreadRunning()
 CThread::Join(unsigned int)
 CThread::SetName(char const*)
 CThread::Start(unsigned int, ThreadPriorityEnum_t)
 CThread::WaitForCreateComplete(CThreadEvent*)
 CThread::~CThread()
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Reset()
 CThreadEvent::Set()
 CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
 CThreadFiber::CThreadFiber(unsigned long)
 CThreadMultiWaitEvent::CThreadMultiWaitEvent(bool)
 CThreadMultiWaitEvent::Reset()
 CThreadMultiWaitEvent::Set()
 CThreadMultiWaitEvent::~CThreadMultiWaitEvent()
 CThreadMutex::TryLock()
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadRWLock_FastRead::CThreadRWLock_FastRead()
 CThreadRWLock_FastRead::HandleFirstWriteLockTransition()
 CThreadRWLock_FastRead::UnlockReadAccounting(unsigned int)
 CThreadRWLock_FastRead::UnlockRead_LockForWrite()
 CThreadRWLock_FastRead::WaitForReadLockTransition(unsigned int)
 CThreadSemaphore::Release(int, int*)
 CThreadSemaphore::~CThreadSemaphore()
 CThreadSpinRWLock::LockForRead()
 CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
 CThreadSpinRWLock::UnlockRead()
 CThreadSpinRWLock::UnlockWrite()
 CThreadSyncObject::Wait(unsigned int)
 CThreadSyncObject::WaitImpl(unsigned int)
 CThreadSyncObject::~CThreadSyncObject()
 CUniformRandomStream::CUniformRandomStream()
 CUniformRandomStream::RandomFloat(float, float)
 CUniformRandomStream::RandomInt(int, int)
 CUniformRandomStream::SetSeed(int)
 CVProfNode::EnterScope()
 CVProfNode::ExitScope()
 CVProfNode::GetSubNode(char const*, int, char const*, int)
 CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
 CommandLine
 ConColorMsg(Color const&, char const*, ...)
 ConDMsg
 ConMsg(char const*, ...)
 Coroutine_Continue
 Coroutine_Create
 Coroutine_DebugBreak
 Coroutine_YieldToMain
 CreateSimpleThread
 CreateVideoPlayer
 D Etc::Block4x4Encoding_ETC1::s_aafCwTable
 D Etc::Block4x4Encoding_R11::s_aafModifierTable
 D Etc::Block4x4Encoding_RGB8::s_afTHDistanceTable
 D Etc::Block4x4Encoding_RGB8A1::s_aafCwOpaqueUnsetTable
 D Etc::Block4x4Encoding_RGBA8::s_aafModifierTable
 D pcre_free
 D pcre_malloc
 D pcre_stack_free
 D pcre_stack_malloc
 DeleteVideoPlayer
 DestroyThreadPool
 DevMsg
 DevMsg(char const*, ...)
 DevWarning
 DevWarning(char const*, ...)
 EarlyInit_Tier0
 FindOrCreateQuantizedFloatEncoder
 GetCPUFrequencyResults
 GetCPUInformation
 GetHSteamPipe
 GetQuantizedFloatEncoderByIndex
 HangWatchdogInternal_BeginScope
 HangWatchdogInternal_EndScope
 HangWatchdog_IndicateActivity
 KeyValuesSystem
 LOG_GENERAL
 LoggingSystem_AddTagToChannel
 LoggingSystem_CurrentStateIndex
 LoggingSystem_GetChannel
 LoggingSystem_GetChannelVerbosity
 LoggingSystem_IsChannelEnabled
 LoggingSystem_Log
 LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
 LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, LoggingMetaData_t const*, char const*, ...)
 LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
 LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, Color, char const*, ...)
 LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
 LoggingSystem_PopLoggingState
 LoggingSystem_PushLoggingState
 LoggingSystem_RegisterBackdoorLoggingListener
 LoggingSystem_RegisterLoggingChannel
 LoggingSystem_RegisterLoggingListener
 LoggingSystem_ResetBackdoorLoggingState
 LoggingSystem_ResetCurrentLoggingState
 LoggingSystem_SetChannelVerbosity
 MemAllocScratch
 MemAlloc_AllocFunc
 MemAlloc_FreeFunc
 MemFreeScratch
 MinidumpUserStreamInfoSetHeader
 Msg
 Plat_AppendMiniDumpErrorString
 Plat_CheckSDL
 Plat_CreateUUIDImpl
 Plat_CreateWindow
 Plat_DebugPrint
 Plat_DebugString
 Plat_DisableIOBuffering
 Plat_EnableHeadlessMode
 Plat_ExitProcess
 Plat_FileExists
 Plat_FileSize
 Plat_FloatTime
 Plat_GetCPUFrequency
 Plat_GetClipboardText
 Plat_GetClockStart
 Plat_GetCurrentDirectory
 Plat_GetDPI
 Plat_GetDefaultMonitorIndex
 Plat_GetDesktopBounds
 Plat_GetEnv
 Plat_GetLocalTime
 Plat_GetModuleFilename
 Plat_GetModuleInterfaceFactory
 Plat_GetModuleProcAddress
 Plat_GetMonitorContentsScale
 Plat_GetOSType
 Plat_GetPlatformError
 Plat_GetThreadIndex
 Plat_GetTime
 Plat_GetTimeString
 Plat_GetWindowClientSize
 Plat_IgnoreContentAsserts
 Plat_InitializeCOM
 Plat_IsDirectory
 Plat_IsHighDPI
 Plat_IsInDebugSessionRaw
 Plat_IsInTestMode
 Plat_IsRunningOnCustomerMachine
 Plat_LoadModule
 Plat_LoadModuleRaw
 Plat_LoadSDL
 Plat_MSTime
 Plat_MSTime64
 Plat_MessageBox
 Plat_Printf
 Plat_RelativeTicks
 Plat_RemoveFile
 Plat_ScreenToWindowCoords
 Plat_SetActiveWindow
 Plat_SetClipboardText
 Plat_ShouldCollectMiniDumpsForFatalErrors
 Plat_ShutdownCOM
 Plat_TickDiffMilliSecF
 Plat_TicksAfterMicroSecs
 Plat_TranslateSymbolicLinks
 Plat_USTime
 Plat_UUIDFromString
 Plat_UUIDToString
 Plat_UnloadModule
 Plat_UnloadSDL
 Plat_VirtualAlloc
 Plat_VirtualFree
 Plat_WindowToScreenCoords
 Plat_ctime
 Plat_gmtime
 Plat_localtime
 Plat_timegm
 R Etc::Block4x4::s_auiPixelOrderHScan
 R Etc::Block4x4Encoding::CHROMA_BLUE_WEIGHT
 R Etc::Block4x4Encoding::LUMA_WEIGHT
 R Etc::Block4x4Encoding_ETC1::s_auiBottomPixelMapping
 R Etc::Block4x4Encoding_ETC1::s_auiLeftPixelMapping
 R Etc::Block4x4Encoding_ETC1::s_auiPixelOrderFlip0
 R Etc::Block4x4Encoding_ETC1::s_auiPixelOrderFlip1
 R Etc::Block4x4Encoding_ETC1::s_auiPixelOrderHScan
 R Etc::Block4x4Encoding_ETC1::s_auiRightPixelMapping
 R Etc::Block4x4Encoding_ETC1::s_auiTopPixelMapping
 RandomFloat
 RandomInt
 RandomSeed
 RegisterAssertionFailureListener
 RegisterGlobalObject
 RegisterStringToken
 ReleaseThreadHandle
 RequireKeyValuesSystem
 SetAssertionCallback
 SetAssertionPrompt
 SteamAPI_GetHSteamPipe
 SteamAPI_GetHSteamUser
 SteamAPI_Init
 SteamAPI_RegisterCallResult
 SteamAPI_RegisterCallback
 SteamAPI_RunCallbacks
 SteamAPI_SetTryCatchCallbacks
 SteamAPI_UnregisterCallResult
 SteamAPI_UnregisterCallback
 SteamInternal_ContextInit
 SteamInternal_CreateInterface
 SteamNetworkingSockets
 SteamNetworkingUtils
 T BinaryProperties_GetValue
 T CreateInterface
 T Etc::Block4x4::Block4x4()
 T Etc::Block4x4::GetEncodingModeName()
 T Etc::Block4x4::InitFromEtcEncodingBits(Etc::Image::Format, unsigned int, unsigned int, unsigned char*, Etc::Image*, Etc::ErrorMetric)
 T Etc::Block4x4::InitFromSource(Etc::Image*, unsigned int, unsigned int, unsigned char*, Etc::ErrorMetric)
 T Etc::Block4x4::SetSourcePixels()
 T Etc::Block4x4::~Block4x4()
 T Etc::Block4x4Encoding::Block4x4Encoding()
 T Etc::Block4x4Encoding::CalcBlockError()
 T Etc::Block4x4Encoding::CalcPixelError(Etc::ColorFloatRGBA, float, Etc::ColorFloatRGBA)
 T Etc::Block4x4Encoding::Init(Etc::Block4x4*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_ETC1::Block4x4Encoding_ETC1()
 T Etc::Block4x4Encoding_ETC1::CalculateHalfOfTheSelectors(unsigned int, unsigned int const*)
 T Etc::Block4x4Encoding_ETC1::CalculateMostLikelyFlip()
 T Etc::Block4x4Encoding_ETC1::CalculateSelectors()
 T Etc::Block4x4Encoding_ETC1::CalculateSourceAverages()
 T Etc::Block4x4Encoding_ETC1::Decode()
 T Etc::Block4x4Encoding_ETC1::InitFromEncodingBits(Etc::Block4x4*, unsigned char*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_ETC1::InitFromEncodingBits_Selectors()
 T Etc::Block4x4Encoding_ETC1::InitFromSource(Etc::Block4x4*, Etc::ColorFloatRGBA*, unsigned char*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_ETC1::PerformFirstIteration()
 T Etc::Block4x4Encoding_ETC1::PerformIteration(float)
 T Etc::Block4x4Encoding_ETC1::SetEncodingBits()
 T Etc::Block4x4Encoding_ETC1::SetEncodingBits_Selectors()
 T Etc::Block4x4Encoding_ETC1::TryDegenerates1()
 T Etc::Block4x4Encoding_ETC1::TryDegenerates2()
 T Etc::Block4x4Encoding_ETC1::TryDegenerates3()
 T Etc::Block4x4Encoding_ETC1::TryDegenerates4()
 T Etc::Block4x4Encoding_ETC1::TryDifferential(bool, unsigned int, int, int)
 T Etc::Block4x4Encoding_ETC1::TryDifferentialHalf(Etc::DifferentialTrys::Half*)
 T Etc::Block4x4Encoding_ETC1::TryIndividual(bool, unsigned int)
 T Etc::Block4x4Encoding_ETC1::TryIndividualHalf(Etc::IndividualTrys::Half*)
 T Etc::Block4x4Encoding_ETC1::~Block4x4Encoding_ETC1()
 T Etc::Block4x4Encoding_R11::Block4x4Encoding_R11()
 T Etc::Block4x4Encoding_R11::CalculateR11(unsigned int, float, float)
 T Etc::Block4x4Encoding_R11::InitFromEncodingBits(Etc::Block4x4*, unsigned char*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_R11::InitFromSource(Etc::Block4x4*, Etc::ColorFloatRGBA*, unsigned char*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_R11::PerformIteration(float)
 T Etc::Block4x4Encoding_R11::SetEncodingBits()
 T Etc::Block4x4Encoding_R11::~Block4x4Encoding_R11()
 T Etc::Block4x4Encoding_RG11::Block4x4Encoding_RG11()
 T Etc::Block4x4Encoding_RG11::CalculateG11(unsigned int, float, float)
 T Etc::Block4x4Encoding_RG11::InitFromEncodingBits(Etc::Block4x4*, unsigned char*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RG11::InitFromSource(Etc::Block4x4*, Etc::ColorFloatRGBA*, unsigned char*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RG11::PerformIteration(float)
 T Etc::Block4x4Encoding_RG11::SetEncodingBits()
 T Etc::Block4x4Encoding_RG11::~Block4x4Encoding_RG11()
 T Etc::Block4x4Encoding_RGB8::Block4x4Encoding_RGB8()
 T Etc::Block4x4Encoding_RGB8::CalculateBaseColorsForTAndH()
 T Etc::Block4x4Encoding_RGB8::CalculatePlanarCornerColors()
 T Etc::Block4x4Encoding_RGB8::ColorRegression(Etc::ColorFloatRGBA*, unsigned int, Etc::ColorFloatRGBA*, Etc::ColorFloatRGBA*)
 T Etc::Block4x4Encoding_RGB8::DecodePixels_H()
 T Etc::Block4x4Encoding_RGB8::DecodePixels_Planar()
 T Etc::Block4x4Encoding_RGB8::DecodePixels_T()
 T Etc::Block4x4Encoding_RGB8::InitFromEncodingBits(Etc::Block4x4*, unsigned char*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RGB8::InitFromEncodingBits_H()
 T Etc::Block4x4Encoding_RGB8::InitFromEncodingBits_Planar()
 T Etc::Block4x4Encoding_RGB8::InitFromEncodingBits_T()
 T Etc::Block4x4Encoding_RGB8::PerformIteration(float)
 T Etc::Block4x4Encoding_RGB8::SetEncodingBits()
 T Etc::Block4x4Encoding_RGB8::SetEncodingBits_H()
 T Etc::Block4x4Encoding_RGB8::SetEncodingBits_Planar()
 T Etc::Block4x4Encoding_RGB8::SetEncodingBits_T()
 T Etc::Block4x4Encoding_RGB8::TryH(unsigned int)
 T Etc::Block4x4Encoding_RGB8::TryH_BestSelectorCombination()
 T Etc::Block4x4Encoding_RGB8::TryPlanar(unsigned int)
 T Etc::Block4x4Encoding_RGB8::TryT(unsigned int)
 T Etc::Block4x4Encoding_RGB8::TryTAndH(unsigned int)
 T Etc::Block4x4Encoding_RGB8::TryT_BestSelectorCombination()
 T Etc::Block4x4Encoding_RGB8::TwiddlePlanar()
 T Etc::Block4x4Encoding_RGB8::TwiddlePlanarB()
 T Etc::Block4x4Encoding_RGB8::TwiddlePlanarG()
 T Etc::Block4x4Encoding_RGB8::TwiddlePlanarR()
 T Etc::Block4x4Encoding_RGB8::~Block4x4Encoding_RGB8()
 T Etc::Block4x4Encoding_RGB8A1::Block4x4Encoding_RGB8A1()
 T Etc::Block4x4Encoding_RGB8A1::DecodePixels_H()
 T Etc::Block4x4Encoding_RGB8A1::DecodePixels_T()
 T Etc::Block4x4Encoding_RGB8A1::Decode_ETC1()
 T Etc::Block4x4Encoding_RGB8A1::InitFromEncodingBits(Etc::Block4x4*, unsigned char*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RGB8A1::InitFromEncodingBits_ETC1(Etc::Block4x4*, unsigned char*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RGB8A1::InitFromEncodingBits_H()
 T Etc::Block4x4Encoding_RGB8A1::InitFromEncodingBits_T()
 T Etc::Block4x4Encoding_RGB8A1::InitFromSource(Etc::Block4x4*, Etc::ColorFloatRGBA*, unsigned char*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RGB8A1::PerformFirstIteration()
 T Etc::Block4x4Encoding_RGB8A1::PerformIteration(float)
 T Etc::Block4x4Encoding_RGB8A1::SetEncodingBits()
 T Etc::Block4x4Encoding_RGB8A1::SetEncodingBits_ETC1()
 T Etc::Block4x4Encoding_RGB8A1::SetEncodingBits_H()
 T Etc::Block4x4Encoding_RGB8A1::SetEncodingBits_T()
 T Etc::Block4x4Encoding_RGB8A1::TryDegenerates1()
 T Etc::Block4x4Encoding_RGB8A1::TryDegenerates2()
 T Etc::Block4x4Encoding_RGB8A1::TryDegenerates3()
 T Etc::Block4x4Encoding_RGB8A1::TryDegenerates4()
 T Etc::Block4x4Encoding_RGB8A1::TryDifferential(bool, unsigned int, int, int)
 T Etc::Block4x4Encoding_RGB8A1::TryDifferentialHalf(Etc::DifferentialTrys::Half*)
 T Etc::Block4x4Encoding_RGB8A1::TryH(unsigned int)
 T Etc::Block4x4Encoding_RGB8A1::TryH_BestSelectorCombination()
 T Etc::Block4x4Encoding_RGB8A1::TryT(unsigned int)
 T Etc::Block4x4Encoding_RGB8A1::TryT_BestSelectorCombination()
 T Etc::Block4x4Encoding_RGB8A1::~Block4x4Encoding_RGB8A1()
 T Etc::Block4x4Encoding_RGB8A1_Opaque::PerformFirstIteration()
 T Etc::Block4x4Encoding_RGB8A1_Opaque::PerformIteration(float)
 T Etc::Block4x4Encoding_RGB8A1_Transparent::PerformIteration(float)
 T Etc::Block4x4Encoding_RGBA8::Block4x4Encoding_RGBA8()
 T Etc::Block4x4Encoding_RGBA8::CalculateA8(float)
 T Etc::Block4x4Encoding_RGBA8::InitFromEncodingBits(Etc::Block4x4*, unsigned char*, Etc::ColorFloatRGBA*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RGBA8::InitFromSource(Etc::Block4x4*, Etc::ColorFloatRGBA*, unsigned char*, Etc::ErrorMetric)
 T Etc::Block4x4Encoding_RGBA8::PerformIteration(float)
 T Etc::Block4x4Encoding_RGBA8::SetEncodingBits()
 T Etc::Block4x4Encoding_RGBA8::~Block4x4Encoding_RGBA8()
 T Etc::Block4x4Encoding_RGBA8_Opaque::PerformIteration(float)
 T Etc::Block4x4Encoding_RGBA8_Opaque::SetEncodingBits()
 T Etc::Block4x4Encoding_RGBA8_Transparent::PerformIteration(float)
 T Etc::Block4x4Encoding_RGBA8_Transparent::SetEncodingBits()
 T Etc::CalcContributions(int, int, double, bool, double (*)(double), Etc::tagFilterWeights*)
 T Etc::DifferentialTrys::DifferentialTrys(Etc::ColorFloatRGBA, Etc::ColorFloatRGBA, unsigned int const*, unsigned int const*, unsigned int, int, int)
 T Etc::DifferentialTrys::Half::Init(int, int, int, unsigned int const*, unsigned int)
 T Etc::Encode(float*, unsigned int, unsigned int, Etc::Image::Format, Etc::ErrorMetric, float, unsigned int, unsigned int, unsigned char**, unsigned int*, unsigned int*, unsigned int*, int*, bool)
 T Etc::EncodeMipmaps(float*, unsigned int, unsigned int, Etc::Image::Format, Etc::ErrorMetric, float, unsigned int, unsigned int, unsigned int, unsigned int, Etc::RawImage*, int*, bool)
 T Etc::FilterBox(double)
 T Etc::FilterLanczos3(double)
 T Etc::FilterLinear(double)
 T Etc::FilterResample(Etc::tagRGBCOLOR*, int, int, Etc::tagRGBCOLOR*, int, int)
 T Etc::FilterTwoPass(Etc::tagRGBCOLOR*, int, int, Etc::tagRGBCOLOR*, int, int, unsigned int, double (*)(double))
 T Etc::Image::DetermineEncodingBitsFormat(Etc::Image::Format)
 T Etc::Image::Encode(Etc::Image::Format, Etc::ErrorMetric, float, unsigned int, unsigned int)
 T Etc::Image::EncodingFormatToString()
 T Etc::Image::EncodingFormatToString(Etc::Image::Format)
 T Etc::Image::FindAndSetEncodingWarnings()
 T Etc::Image::FindEncodingWarningTypesForCurFormat()
 T Etc::Image::GetError()
 T Etc::Image::Image()
 T Etc::Image::Image(Etc::Image::Format, unsigned int, unsigned int, unsigned char*, unsigned int, Etc::Image*, Etc::ErrorMetric)
 T Etc::Image::Image(float*, unsigned int, unsigned int, Etc::ErrorMetric)
 T Etc::Image::InitBlocksAndBlockSorter()
 T Etc::Image::IterateThroughWorstBlocks(unsigned int, unsigned int, unsigned int)
 T Etc::Image::RunFirstPass(unsigned int, unsigned int)
 T Etc::Image::SetEncodingBits(unsigned int, unsigned int)
 T Etc::Image::~Image()
 T Etc::IndividualTrys::Half::Init(int, int, int, unsigned int const*, unsigned int)
 T Etc::IndividualTrys::IndividualTrys(Etc::ColorFloatRGBA, Etc::ColorFloatRGBA, unsigned int const*, unsigned int const*, unsigned int)
 T Etc::Regression(float*, float*, unsigned int, float*, float*)
 T Etc::SortedBlockList::AddBlock(Etc::Block4x4*)
 T Etc::SortedBlockList::InitBuckets()
 T Etc::SortedBlockList::Print()
 T Etc::SortedBlockList::Sort()
 T Etc::SortedBlockList::SortedBlockList(unsigned int, unsigned int)
 T Etc::SortedBlockList::~SortedBlockList()
 T GetResourceManifestCount
 T GetResourceManifests
 T InstallSchemaBindings
 T _fini
 T _init
 T operator delete(void*)
 T operator delete[](void*)
 T operator new(unsigned long)
 T operator new[](unsigned long)
 T pcre_compile
 T pcre_compile2
 T pcre_config
 T pcre_exec
 T pcre_free_study
 T pcre_fullinfo
 T pcre_study
 T pcrecpp::Arg::parse_char(char const*, int, void*)
 T pcrecpp::Arg::parse_double(char const*, int, void*)
 T pcrecpp::Arg::parse_float(char const*, int, void*)
 T pcrecpp::Arg::parse_int(char const*, int, void*)
 T pcrecpp::Arg::parse_int_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_int_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_int_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_int_radix(char const*, int, void*, int)
 T pcrecpp::Arg::parse_long(char const*, int, void*)
 T pcrecpp::Arg::parse_long_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_long_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_long_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_long_radix(char const*, int, void*, int)
 T pcrecpp::Arg::parse_longlong(char const*, int, void*)
 T pcrecpp::Arg::parse_longlong_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_longlong_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_longlong_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_longlong_radix(char const*, int, void*, int)
 T pcrecpp::Arg::parse_null(char const*, int, void*)
 T pcrecpp::Arg::parse_short(char const*, int, void*)
 T pcrecpp::Arg::parse_short_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_short_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_short_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_short_radix(char const*, int, void*, int)
 T pcrecpp::Arg::parse_string(char const*, int, void*)
 T pcrecpp::Arg::parse_stringpiece(char const*, int, void*)
 T pcrecpp::Arg::parse_uchar(char const*, int, void*)
 T pcrecpp::Arg::parse_uint(char const*, int, void*)
 T pcrecpp::Arg::parse_uint_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_uint_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_uint_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_uint_radix(char const*, int, void*, int)
 T pcrecpp::Arg::parse_ulong(char const*, int, void*)
 T pcrecpp::Arg::parse_ulong_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_ulong_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_ulong_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_ulong_radix(char const*, int, void*, int)
 T pcrecpp::Arg::parse_ulonglong(char const*, int, void*)
 T pcrecpp::Arg::parse_ulonglong_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_ulonglong_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_ulonglong_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_ulonglong_radix(char const*, int, void*, int)
 T pcrecpp::Arg::parse_ushort(char const*, int, void*)
 T pcrecpp::Arg::parse_ushort_cradix(char const*, int, void*)
 T pcrecpp::Arg::parse_ushort_hex(char const*, int, void*)
 T pcrecpp::Arg::parse_ushort_octal(char const*, int, void*)
 T pcrecpp::Arg::parse_ushort_radix(char const*, int, void*, int)
 T pcrecpp::RE::Cleanup()
 T pcrecpp::RE::Compile(pcrecpp::RE::Anchor)
 T pcrecpp::RE::Consume(pcrecpp::StringPiece*, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
 T pcrecpp::RE::DoMatch(pcrecpp::StringPiece const&, pcrecpp::RE::Anchor, int*, pcrecpp::Arg const* const*, int) const
 T pcrecpp::RE::DoMatchImpl(pcrecpp::StringPiece const&, pcrecpp::RE::Anchor, int*, pcrecpp::Arg const* const*, int, int*, int) const
 T pcrecpp::RE::Extract(pcrecpp::StringPiece const&, pcrecpp::StringPiece const&, std::string*) const
 T pcrecpp::RE::FindAndConsume(pcrecpp::StringPiece*, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
 T pcrecpp::RE::FullMatch(pcrecpp::StringPiece const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
 T pcrecpp::RE::GlobalReplace(pcrecpp::StringPiece const&, std::string*) const
 T pcrecpp::RE::Init(std::string const&, pcrecpp::RE_Options const*)
 T pcrecpp::RE::NumberOfCapturingGroups() const
 T pcrecpp::RE::PartialMatch(pcrecpp::StringPiece const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&) const
 T pcrecpp::RE::QuoteMeta(pcrecpp::StringPiece const&)
 T pcrecpp::RE::Replace(pcrecpp::StringPiece const&, std::string*) const
 T pcrecpp::RE::Rewrite(std::string*, pcrecpp::StringPiece const&, pcrecpp::StringPiece const&, int*, int) const
 T pcrecpp::RE::TryMatch(pcrecpp::StringPiece const&, int, pcrecpp::RE::Anchor, bool, int*, int) const
 T pcrecpp::RE::~RE()
 TagUnion<Typelist<CTraceMsg_CardReturnedToFountain, CTraceMsg_CardMovedToDeck, CTraceMsg_CardMovedToHand, CTraceMsg_CardMovedToDeployment, CTraceMsg_CardMovedToGraveyard, CTraceMsg_CardMovedToEffects, CTraceMsg_CardMovedToSpellStack, CTraceMsg_UnitLeavingCombat, CTraceMsg_DamageAttempted, CTraceMsg_CardKilled, CTraceMsg_CardSurvivedDeath, CTraceMsg_TowerKilled, CTraceMsg_ImprovementDestroyed, CTraceMsg_CardDuplicated, CTraceMsg_TriggerTriggered, CTraceMsg_UnitChangedCombatPosition, CTraceMsg_UnitChangedCombatTarget, CTraceMsg_RandomlySelectedSecondaryTarget, CTraceMsg_GoldEarned, CTraceMsg_TowerHealed, CTraceMsg_CardDiscarded, CTraceMsg_CardRevealed, CTraceMsg_CardCreated, CTraceMsg_UnitHealed, CTraceMsg_CardPlayed, CTraceMsg_UnitEnteringCombat, CTraceMsg_PathingCardChanged, CTraceMsg_ImprovementEnteringPlay, CTraceMsg_InnerBlock, CTraceMsg_UnitCondemned, CTraceMsg_PreviewDeathResultChanged, CTraceMsg_ColorsPlayableChanged, CTraceMsg_CardDrawn, CTraceMsg_UnitTargeted, CTraceMsg_UnitLocked, CTraceMsg_TowerManaRestored, CTraceMsg_UnitUserTargeted, CTraceMsg_DeathShieldUsed, CTraceMsg_ItemEquipped, CTraceMsg_TowerManaSpent, CTraceMsg_CardEffectCalculation, CTraceMsg_ScriptBlockBegin, CTraceMsg_ScriptBlockEnd, CTraceMsg_DeathSyncPoint, CTraceMsg_PlayerPassed, CTraceMsg_UnitReadiedForDeploymentUponDeath, CTraceMsg_ShoppingCardAppeared, CTraceMsg_ShoppingCardShuffled, CTraceMsg_ShopAction, CTraceMsg_ShopHoldItemAvailable, CTraceMsg_ShopCardRemoved, CTraceMsg_ShopEnded, CTraceMsg_CardBought, CTraceMsg_PrepareHeroForLaneAssignment, CTraceMsg_HeroVS, CTraceMsg_GainedAppliedEffectEx, CTraceMsg_LostAppliedEffectEx, CTraceMsg_ContinuousAppliedEffectChangedEx, CTraceMsg_AttributeValueChanged, CTraceMsg_PlayerResult, CTraceMsg_TargetSelected, CTraceMsg_ChargesChanged, CTraceMsg_EffectProcced, CTraceMsg_PreviewDamageChanged, Opt::Empty> >::s_Traits
 TagUnion<Typelist<InvalidPosition_t, int, SpecialPosition_t> >::s_Traits
 ThreadGetCurrentId
 ThreadInMainThread
 ThreadMultiWait
 ThreadShellExecute
 ThreadShellExecuteEx
 ThreadSleep
 TimestampedEvent
 TimestampedEventMsgV
 UnregisterAssertionFailureListener
 V typeinfo for Etc::Block4x4Encoding
 V typeinfo for Etc::Block4x4Encoding_ETC1
 V typeinfo for Etc::Block4x4Encoding_R11
 V typeinfo for Etc::Block4x4Encoding_RG11
 V typeinfo for Etc::Block4x4Encoding_RGB8
 V typeinfo for Etc::Block4x4Encoding_RGB8A1
 V typeinfo for Etc::Block4x4Encoding_RGB8A1_Opaque
 V typeinfo for Etc::Block4x4Encoding_RGB8A1_Transparent
 V typeinfo for Etc::Block4x4Encoding_RGBA8
 V typeinfo for Etc::Block4x4Encoding_RGBA8_Opaque
 V typeinfo for Etc::Block4x4Encoding_RGBA8_Transparent
 V typeinfo for std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>
 V typeinfo for std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>*
 V typeinfo for std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>
 V typeinfo for std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>*
 V typeinfo for std::_Function_base
 V typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr<bool*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_make_shared_tag
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, false>
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, true>
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, false>
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, true>
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, false>
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, true>
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, false>
 V typeinfo for std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, true>
 V typeinfo for std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>
 V typeinfo for std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>
 V typeinfo for std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>
 V typeinfo for std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>
 V typeinfo for std::__detail::_CharMatcher<std::regex_traits<char>, false, false>
 V typeinfo for std::__detail::_CharMatcher<std::regex_traits<char>, false, true>
 V typeinfo for std::__detail::_CharMatcher<std::regex_traits<char>, true, false>
 V typeinfo for std::__detail::_CharMatcher<std::regex_traits<char>, true, true>
 V typeinfo for std::__future_base::_Async_state_common
 V typeinfo for std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>
 V typeinfo for std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>
 V typeinfo for std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>
 V typeinfo for std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>
 V typeinfo for std::__future_base::_Result<unsigned int>
 V typeinfo for std::__future_base::_Result<void>
 V typeinfo for std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned int>, std::__future_base::_Result_base::_Deleter>, unsigned int>
 V typeinfo for std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, void>
 V typeinfo for std::string
 V typeinfo for std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >
 V typeinfo for std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >
 V typeinfo for std::thread::_Impl_base
 V typeinfo name for CDCGUIFindOpponentState::EFindingState
 V typeinfo name for CDCG_UI_Popup_JoinChatChannel::ESort
 V typeinfo name for CMsgClientToGCTourneyChangeValue_EValueType
 V typeinfo name for ECameraPosition
 V typeinfo name for EChatRoomType
 V typeinfo name for ECombatPreviewDeathResult
 V typeinfo name for EDCGCardSubType
 V typeinfo name for EDCGCardType
 V typeinfo name for EDCGEventName
 V typeinfo name for EDCGFaction
 V typeinfo name for ELanguage
 V typeinfo name for ELeaderboardViewMode
 V typeinfo name for EPlayMenuContext
 V typeinfo name for EReplayExistence
 V typeinfo name for ETargetSelectionMethod
 V typeinfo name for ETriggerConditionFlags
 V typeinfo name for EVideoPlayerEvent
 V typeinfo name for EVideoPlayerPlaybackError
 V typeinfo name for Etc::Block4x4Encoding
 V typeinfo name for Etc::Block4x4Encoding_ETC1
 V typeinfo name for Etc::Block4x4Encoding_R11
 V typeinfo name for Etc::Block4x4Encoding_RG11
 V typeinfo name for Etc::Block4x4Encoding_RGB8
 V typeinfo name for Etc::Block4x4Encoding_RGB8A1
 V typeinfo name for Etc::Block4x4Encoding_RGB8A1_Opaque
 V typeinfo name for Etc::Block4x4Encoding_RGB8A1_Transparent
 V typeinfo name for Etc::Block4x4Encoding_RGBA8
 V typeinfo name for Etc::Block4x4Encoding_RGBA8_Opaque
 V typeinfo name for Etc::Block4x4Encoding_RGBA8_Transparent
 V typeinfo name for GenericPopupResult_t
 V typeinfo name for panorama::EActiveControllerType
 V typeinfo name for panorama::ELoadLayoutAsyncDetails
 V typeinfo name for panorama::ESoundType
 V typeinfo name for panorama::GamePadCode
 V typeinfo name for std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>
 V typeinfo name for std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>*
 V typeinfo name for std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>
 V typeinfo name for std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>*
 V typeinfo name for std::_Function_base
 V typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr<bool*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_make_shared_tag
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, false>
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, true>
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, false>
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, true>
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, false>
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, true>
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, false>
 V typeinfo name for std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, true>
 V typeinfo name for std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>
 V typeinfo name for std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>
 V typeinfo name for std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>
 V typeinfo name for std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>
 V typeinfo name for std::__detail::_CharMatcher<std::regex_traits<char>, false, false>
 V typeinfo name for std::__detail::_CharMatcher<std::regex_traits<char>, false, true>
 V typeinfo name for std::__detail::_CharMatcher<std::regex_traits<char>, true, false>
 V typeinfo name for std::__detail::_CharMatcher<std::regex_traits<char>, true, true>
 V typeinfo name for std::__future_base::_Async_state_common
 V typeinfo name for std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>
 V typeinfo name for std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>
 V typeinfo name for std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>
 V typeinfo name for std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>
 V typeinfo name for std::__future_base::_Result<unsigned int>
 V typeinfo name for std::__future_base::_Result<void>
 V typeinfo name for std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned int>, std::__future_base::_Result_base::_Deleter>, unsigned int>
 V typeinfo name for std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, void>
 V typeinfo name for std::string
 V typeinfo name for std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >
 V typeinfo name for std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >
 V typeinfo name for std::thread::_Impl_base
 V vtable for Etc::Block4x4Encoding
 V vtable for Etc::Block4x4Encoding_ETC1
 V vtable for Etc::Block4x4Encoding_R11
 V vtable for Etc::Block4x4Encoding_RG11
 V vtable for Etc::Block4x4Encoding_RGB8
 V vtable for Etc::Block4x4Encoding_RGB8A1
 V vtable for Etc::Block4x4Encoding_RGB8A1_Opaque
 V vtable for Etc::Block4x4Encoding_RGB8A1_Transparent
 V vtable for Etc::Block4x4Encoding_RGBA8
 V vtable for Etc::Block4x4Encoding_RGBA8_Opaque
 V vtable for Etc::Block4x4Encoding_RGBA8_Transparent
 V vtable for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr<bool*, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::__future_base::_Async_state_common
 V vtable for std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>
 V vtable for std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>
 V vtable for std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>
 V vtable for std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>
 V vtable for std::__future_base::_Result<unsigned int>
 V vtable for std::__future_base::_Result<void>
 V vtable for std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >
 V vtable for std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >
 V vtable for std::thread::_Impl_base
 VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 V_AreFileNamesEqual
 V_BasicHtmlEntityEncode
 V_CopyMemory3D
 V_ExtractDomainFromURL
 V_FixDoubleSlashes
 V_FixSlashes
 V_GetErrno
 V_GetFileExtension
 V_GetFileExtensionSafe
 V_GetUTF8BytesNeeded(unsigned short const*, int)
 V_HtmlEntityDecodeToUTF8
 V_IsAbsolutePath
 V_PathContainsPath
 V_PrettifyMem
 V_PrettifyNum
 V_RemoveDotSlashes
 V_SetErrno
 V_SplitString(char const*, char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, bool)
 V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
 V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
 V_SplitStringInPlace(char*, char const*, CUtlVector<char const*, CUtlMemory<char const*, int> >&)
 V_StrTrim
 V_StringToColor
 V_StringToFloatArray
 V_StringToVector
 V_StripAndPreserveHTMLCore
 V_StripFilename
 V_StripTrailingSlash
 V_StripTrailingWhitespace
 V_URLDecode
 V_UTF16ToUTF32
 V_UTF16ToUTF8
 V_UTF32CharsToUTF8
 V_UTF32ToUTF32
 V_UTF32ToUTF8
 V_UTF8CharsToUTF16
 V_UTF8ToUTF32
 V_UnicodeAdvance(char*, int)
 V_UnicodeCaseCompare(char const*, char const*, int, EStringConvertErrorPolicy)
 V_UnicodeCaseConvert(char const*, char*, int, int, EStringConvertErrorPolicy)
 V_UnicodeCaseConvert(wchar_t const*, wchar_t*, int, int, EStringConvertErrorPolicy)
 V_UnicodeLength(char const*)
 V_UnicodeLength(wchar_t const*)
 V_UnicodeRepair(char*, EStringConvertErrorPolicy)
 V_UnicodeValidate(char const*)
 V_UnqualifiedFileName
 V_acosf
 V_asinf
 V_atan2f
 V_atanf
 V_atof
 V_atofloat32
 V_atofloat64
 V_atoi
 V_atoi64
 V_atoui64
 V_cosf
 V_expf
 V_fclose
 V_fmodf
 V_fopenUTF8
 V_fpclassify
 V_fprintf
 V_fputc
 V_fread
 V_frexpf
 V_fwrite
 V_isbreakablewspace32
 V_isnan
 V_iswcntrl
 V_iswdigit
 V_iswspace
 V_localeconv
 V_logf
 V_longjmp
 V_pow
 V_powf
 V_qsort
 V_qsort_s
 V_setjmp
 V_sincosf
 V_sinf
 V_snprintf
 V_snwprintf_cch
 V_sscanf
 V_strchr32
 V_stricmp_fast
 V_stristr_fast(char const*, char const*)
 V_strlower_fast
 V_strnchr
 V_strnlen
 V_strtod
 V_strtoi64
 V_strtok
 V_strtoui64
 V_strupper_fast
 V_swscanf
 V_tanf
 V_tier0_strstr
 V_vscprintf
 V_vsnprintf
 V_vsnprintfRet
 V_vsnprintfSize
 V_wcstod
 V_wcstoi64
 W AttributeList* std::__uninitialized_copy<false>::__uninit_copy<AttributeList*, AttributeList*>(AttributeList*, AttributeList*, AttributeList*)
 W AttributeListBase<Empty_t, AttributeListVariadicSupport<AttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode* std::__uninitialized_copy<false>::__uninit_copy<AttributeListBase<Empty_t, AttributeListVariadicSupport<AttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<Empty_t, AttributeListVariadicSupport<AttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*>(AttributeListBase<Empty_t, AttributeListVariadicSupport<AttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<Empty_t, AttributeListVariadicSupport<AttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<Empty_t, AttributeListVariadicSupport<AttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*)
 W AttributeListBase<MatchAttributeListNodeContent_t, MatchAttributeListCombineOpVariadicSupport<MatchAttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode* std::__uninitialized_copy<false>::__uninit_copy<AttributeListBase<MatchAttributeListNodeContent_t, MatchAttributeListCombineOpVariadicSupport<MatchAttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<MatchAttributeListNodeContent_t, MatchAttributeListCombineOpVariadicSupport<MatchAttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*>(AttributeListBase<MatchAttributeListNodeContent_t, MatchAttributeListCombineOpVariadicSupport<MatchAttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<MatchAttributeListNodeContent_t, MatchAttributeListCombineOpVariadicSupport<MatchAttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<MatchAttributeListNodeContent_t, MatchAttributeListCombineOpVariadicSupport<MatchAttributeList>, TagUnion<AttributeSinglePropertyVariantTypeList> >::AttributeNode*)
 W AttributeListBase<MergeAttributeListNodeContent_t, MergeAttributeListCombineOpVariadicSupport<MergeAttributeList>, TagUnion<MergeAttributeSinglePropertyVariantTypeList> >::AttributeNode* std::__uninitialized_copy<false>::__uninit_copy<AttributeListBase<MergeAttributeListNodeContent_t, MergeAttributeListCombineOpVariadicSupport<MergeAttributeList>, TagUnion<MergeAttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<MergeAttributeListNodeContent_t, MergeAttributeListCombineOpVariadicSupport<MergeAttributeList>, TagUnion<MergeAttributeSinglePropertyVariantTypeList> >::AttributeNode*>(AttributeListBase<MergeAttributeListNodeContent_t, MergeAttributeListCombineOpVariadicSupport<MergeAttributeList>, TagUnion<MergeAttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<MergeAttributeListNodeContent_t, MergeAttributeListCombineOpVariadicSupport<MergeAttributeList>, TagUnion<MergeAttributeSinglePropertyVariantTypeList> >::AttributeNode*, AttributeListBase<MergeAttributeListNodeContent_t, MergeAttributeListCombineOpVariadicSupport<MergeAttributeList>, TagUnion<MergeAttributeSinglePropertyVariantTypeList> >::AttributeNode*)
 W CardCompositeStateRuleProperty* std::__uninitialized_copy<false>::__uninit_copy<CardCompositeStateRuleProperty*, CardCompositeStateRuleProperty*>(CardCompositeStateRuleProperty*, CardCompositeStateRuleProperty*, CardCompositeStateRuleProperty*)
 W CardCompositeStateStatProperty* std::__uninitialized_copy<false>::__uninit_copy<CardCompositeStateStatProperty*, CardCompositeStateStatProperty*>(CardCompositeStateStatProperty*, CardCompositeStateStatProperty*, CardCompositeStateStatProperty*)
 W Etc::Block4x4Encoding::~Block4x4Encoding()
 W Etc::Block4x4Encoding_ETC1::GetFlip()
 W Etc::Block4x4Encoding_ETC1::HasSeverelyBentDifferentialColors() const
 W Etc::Block4x4Encoding_ETC1::IsDifferential()
 W Etc::Block4x4Encoding_RGB8A1_Opaque::~Block4x4Encoding_RGB8A1_Opaque()
 W Etc::Block4x4Encoding_RGB8A1_Transparent::~Block4x4Encoding_RGB8A1_Transparent()
 W Etc::Block4x4Encoding_RGBA8_Opaque::~Block4x4Encoding_RGBA8_Opaque()
 W Etc::Block4x4Encoding_RGBA8_Transparent::~Block4x4Encoding_RGBA8_Transparent()
 W __gnu_cxx::__enable_if<std::__is_arithmetic<double>::__value, int>::__type std::isnan<double>(double)
 W __gnu_cxx::__enable_if<std::__is_arithmetic<float>::__value, int>::__type std::isnan<float>(float)
 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<char const*>::__value, char const**>::__type std::__fill_n_a<char const**, unsigned long, char const*>(char const**, unsigned long, char const* const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<char const*>::__value, void>::__type std::__fill_a<char const**, char const*>(char const**, char const**, char const* const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<std::string*>::__value, std::string**>::__type std::__fill_n_a<std::string**, unsigned long, std::string*>(std::string**, unsigned long, std::string* const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<std::string*>::__value, void>::__type std::__fill_a<std::string**, std::string*>(std::string**, std::string**, std::string* const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::__value, void>::__type std::__fill_a<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>* const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<std::tr1::__detail::_Hash_node<std::string, false>*>::__value, void>::__type std::__fill_a<std::tr1::__detail::_Hash_node<std::string, false>**, std::tr1::__detail::_Hash_node<std::string, false>*>(std::tr1::__detail::_Hash_node<std::string, false>**, std::tr1::__detail::_Hash_node<std::string, false>**, std::tr1::__detail::_Hash_node<std::string, false>* const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<void*>::__value, void**>::__type std::__fill_n_a<void**, unsigned long, void*>(void**, unsigned long, void* const&)
 W __gnu_cxx::__enable_if<std::__is_scalar<void*>::__value, void>::__type std::__fill_a<void**, void*>(void**, void**, void* const&)
 W __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::__normal_iterator(char const** const&)
 W __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::base() const
 W __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::difference_type __gnu_cxx::operator-<char const**, std::vector<char const*, std::allocator<char const*> > >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > > const&)
 W __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >::operator*() const
 W __gnu_cxx::__normal_iterator<char*, std::string>::base() const
 W __gnu_cxx::__normal_iterator<char*, std::string>::operator*() const
 W __gnu_cxx::__normal_iterator<char*, std::string>::operator++()
 W __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
 W __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
 W __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator*() const
 W __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::operator++()
 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::difference_type __gnu_cxx::operator-<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const
 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator++()
 W __gnu_cxx::__normal_iterator<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > >::__normal_iterator(std::string const** const&)
 W __gnu_cxx::__normal_iterator<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > >::base() const
 W __gnu_cxx::__normal_iterator<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > >::difference_type __gnu_cxx::operator-<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > >(__gnu_cxx::__normal_iterator<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > > const&, __gnu_cxx::__normal_iterator<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > > const&)
 W __gnu_cxx::__normal_iterator<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > >::operator*() const
 W __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::__normal_iterator(std::string const* const&)
 W __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::base() const
 W __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator*() const
 W __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator++()
 W __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > >::operator->() const
 W __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >::__normal_iterator(std::string** const&)
 W __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >::base() const
 W __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >::difference_type __gnu_cxx::operator-<std::string**, std::vector<std::string*, std::allocator<std::string*> > >(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > > const&, __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > > const&)
 W __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >::operator*() const
 W __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >::operator+(long const&) const
 W __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >::operator++()
 W __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::__normal_iterator(std::string* const&)
 W __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::base() const
 W __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::difference_type __gnu_cxx::operator-<std::string*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > const&)
 W __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >::operator*() const
 W __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > > std::vector<unsigned char, std::allocator<unsigned char> >::insert<__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, void>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >)
 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >::__normal_iterator(void (** const&)())
 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >::base() const
 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >::difference_type __gnu_cxx::operator-<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > const&, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > const&)
 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >::operator*() const
 W __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >::__normal_iterator(void** const&)
 W __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >::base() const
 W __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >::difference_type __gnu_cxx::operator-<void**, std::vector<void*, std::allocator<void*> > >(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > > const&, __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > > const&)
 W __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >::operator*() const
 W __gnu_cxx::new_allocator<char const*>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<char const*>::construct(char const**, char const* const&)
 W __gnu_cxx::new_allocator<char const*>::deallocate(char const**, unsigned long)
 W __gnu_cxx::new_allocator<char const*>::destroy(char const**)
 W __gnu_cxx::new_allocator<char const*>::max_size() const
 W __gnu_cxx::new_allocator<char const*>::new_allocator()
 W __gnu_cxx::new_allocator<char const*>::~new_allocator()
 W __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<int>::construct(int*, int const&)
 W __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
 W __gnu_cxx::new_allocator<int>::destroy(int*)
 W __gnu_cxx::new_allocator<int>::max_size() const
 W __gnu_cxx::new_allocator<int>::new_allocator()
 W __gnu_cxx::new_allocator<int>::~new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<int> >::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<int> >::deallocate(std::_Rb_tree_node<int>*, unsigned long)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<int> >::max_size() const
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<int> >::new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<int> >::~new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >::deallocate(std::_Rb_tree_node<std::pair<int const, std::string> >*, unsigned long)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >::max_size() const
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >::new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >::~new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*, unsigned long)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::max_size() const
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::~new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >::deallocate(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*, unsigned long)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >::max_size() const
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >::new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >::~new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::string> >::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::string> >::deallocate(std::_Rb_tree_node<std::string>*, unsigned long)
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::string> >::max_size() const
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::string> >::new_allocator()
 W __gnu_cxx::new_allocator<std::_Rb_tree_node<std::string> >::~new_allocator()
 W __gnu_cxx::new_allocator<std::pair<char const* const, void (*)(std::string const&)> >::construct(std::pair<char const* const, void (*)(std::string const&)>*, std::pair<char const* const, void (*)(std::string const&)> const&)
 W __gnu_cxx::new_allocator<std::pair<char const* const, void (*)(std::string const&)> >::destroy(std::pair<char const* const, void (*)(std::string const&)>*)
 W __gnu_cxx::new_allocator<std::pair<char const* const, void (*)(std::string const&)> >::new_allocator()
 W __gnu_cxx::new_allocator<std::pair<char const* const, void (*)(std::string const&)> >::~new_allocator()
 W __gnu_cxx::new_allocator<std::pair<int const, std::string> >::construct(std::pair<int const, std::string>*, std::pair<int const, std::string> const&)
 W __gnu_cxx::new_allocator<std::pair<int const, std::string> >::destroy(std::pair<int const, std::string>*)
 W __gnu_cxx::new_allocator<std::pair<int const, std::string> >::new_allocator()
 W __gnu_cxx::new_allocator<std::pair<int const, std::string> >::~new_allocator()
 W __gnu_cxx::new_allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::construct(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >*, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 W __gnu_cxx::new_allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::destroy(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >*)
 W __gnu_cxx::new_allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::new_allocator()
 W __gnu_cxx::new_allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::~new_allocator()
 W __gnu_cxx::new_allocator<std::pair<std::string const, std::pair<void const*, int> > >::construct(std::pair<std::string const, std::pair<void const*, int> >*, std::pair<std::string const, std::pair<void const*, int> > const&)
 W __gnu_cxx::new_allocator<std::pair<std::string const, std::pair<void const*, int> > >::destroy(std::pair<std::string const, std::pair<void const*, int> >*)
 W __gnu_cxx::new_allocator<std::pair<std::string const, std::pair<void const*, int> > >::new_allocator()
 W __gnu_cxx::new_allocator<std::pair<std::string const, std::pair<void const*, int> > >::~new_allocator()
 W __gnu_cxx::new_allocator<std::string const*>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::string const*>::construct(std::string const**, std::string const* const&)
 W __gnu_cxx::new_allocator<std::string const*>::deallocate(std::string const**, unsigned long)
 W __gnu_cxx::new_allocator<std::string const*>::destroy(std::string const**)
 W __gnu_cxx::new_allocator<std::string const*>::max_size() const
 W __gnu_cxx::new_allocator<std::string const*>::new_allocator()
 W __gnu_cxx::new_allocator<std::string const*>::~new_allocator()
 W __gnu_cxx::new_allocator<std::string*>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::string*>::construct(std::string**, std::string* const&)
 W __gnu_cxx::new_allocator<std::string*>::deallocate(std::string**, unsigned long)
 W __gnu_cxx::new_allocator<std::string*>::destroy(std::string**)
 W __gnu_cxx::new_allocator<std::string*>::max_size() const
 W __gnu_cxx::new_allocator<std::string*>::new_allocator()
 W __gnu_cxx::new_allocator<std::string*>::~new_allocator()
 W __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::string>::construct(std::string*, std::string const&)
 W __gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned long)
 W __gnu_cxx::new_allocator<std::string>::destroy(std::string*)
 W __gnu_cxx::new_allocator<std::string>::max_size() const
 W __gnu_cxx::new_allocator<std::string>::new_allocator()
 W __gnu_cxx::new_allocator<std::string>::~new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >::deallocate(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*, unsigned long)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >::max_size() const
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >::new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >::~new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::deallocate(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, unsigned long)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::max_size() const
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::~new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false> >::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false> >::deallocate(std::tr1::__detail::_Hash_node<std::string, false>*, unsigned long)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false> >::max_size() const
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false> >::new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false> >::~new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false>*>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false>*>::deallocate(std::tr1::__detail::_Hash_node<std::string, false>**, unsigned long)
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false>*>::max_size() const
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false>*>::new_allocator()
 W __gnu_cxx::new_allocator<std::tr1::__detail::_Hash_node<std::string, false>*>::~new_allocator()
 W __gnu_cxx::new_allocator<void (*)()>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<void (*)()>::construct(void (**)(), void (* const&)())
 W __gnu_cxx::new_allocator<void (*)()>::deallocate(void (**)(), unsigned long)
 W __gnu_cxx::new_allocator<void (*)()>::destroy(void (**)())
 W __gnu_cxx::new_allocator<void (*)()>::max_size() const
 W __gnu_cxx::new_allocator<void (*)()>::new_allocator()
 W __gnu_cxx::new_allocator<void (*)()>::~new_allocator()
 W __gnu_cxx::new_allocator<void*>::allocate(unsigned long, void const*)
 W __gnu_cxx::new_allocator<void*>::construct(void**, void* const&)
 W __gnu_cxx::new_allocator<void*>::deallocate(void**, unsigned long)
 W __gnu_cxx::new_allocator<void*>::destroy(void**)
 W __gnu_cxx::new_allocator<void*>::max_size() const
 W __gnu_cxx::new_allocator<void*>::new_allocator()
 W __gnu_cxx::new_allocator<void*>::~new_allocator()
 W bool __gnu_cxx::__is_null_pointer<char>(char*)
 W bool __gnu_cxx::operator!=<char*, std::string>(__gnu_cxx::__normal_iterator<char*, std::string> const&, __gnu_cxx::__normal_iterator<char*, std::string> const&)
 W bool __gnu_cxx::operator!=<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > const&)
 W bool __gnu_cxx::operator!=<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&)
 W bool __gnu_cxx::operator!=<std::string**, std::vector<std::string*, std::allocator<std::string*> > >(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > > const&, __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > > const&)
 W bool __gnu_cxx::operator==<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > const&)
 W bool __gnu_cxx::operator==<std::string const*, std::vector<std::string, std::allocator<std::string> > >(__gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&, __gnu_cxx::__normal_iterator<std::string const*, std::vector<std::string, std::allocator<std::string> > > const&)
 W bool std::__detail::_Compiler<std::regex_traits<char> >::_M_expression_term<false, false>(std::pair<bool, char>&, std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>&)
 W bool std::__detail::_Compiler<std::regex_traits<char> >::_M_expression_term<false, true>(std::pair<bool, char>&, std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>&)
 W bool std::__detail::_Compiler<std::regex_traits<char> >::_M_expression_term<true, false>(std::pair<bool, char>&, std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>&)
 W bool std::__detail::_Compiler<std::regex_traits<char> >::_M_expression_term<true, true>(std::pair<bool, char>&, std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>&)
 W bool std::__detail::__regex_algo_impl<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, char, std::regex_traits<char>, (std::__detail::_RegexExecutorPolicy)0, false>(__gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, std::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >&, std::basic_regex<char, std::regex_traits<char> > const&, std::regex_constants::match_flag_type)
 W bool std::__detail::__regex_algo_impl<char const*, std::allocator<std::sub_match<char const*> >, char, std::regex_traits<char>, (std::__detail::_RegexExecutorPolicy)0, false>(char const*, char const*, std::match_results<char const*, std::allocator<std::sub_match<char const*> > >&, std::basic_regex<char, std::regex_traits<char> > const&, std::regex_constants::match_flag_type)
 W bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 W bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W bool std::operator< <std::string, int>(std::pair<std::string, int> const&, std::pair<std::string, int> const&)
 W bool std::operator==<char const*>(std::reverse_iterator<char const*> const&, std::reverse_iterator<char const*> const&)
 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 W bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&)
 W bool std::tr1::__detail::operator!=<std::string, false>(std::tr1::__detail::_Hashtable_iterator_base<std::string, false> const&, std::tr1::__detail::_Hashtable_iterator_base<std::string, false> const&)
 W bool std::tr1::__detail::operator==<std::pair<char const* const, void (*)(std::string const&)>, false>(std::tr1::__detail::_Hashtable_iterator_base<std::pair<char const* const, void (*)(std::string const&)>, false> const&, std::tr1::__detail::_Hashtable_iterator_base<std::pair<char const* const, void (*)(std::string const&)>, false> const&)
 W bool std::tr1::__detail::operator==<std::string, false>(std::tr1::__detail::_Hashtable_iterator_base<std::string, false> const&, std::tr1::__detail::_Hashtable_iterator_base<std::string, false> const&)
 W char const* std::__find<char const*, char>(char const*, char const*, char const&, std::random_access_iterator_tag)
 W char const* std::__find_end<char const*, char const*>(char const*, char const*, char const*, char const*, std::bidirectional_iterator_tag, std::bidirectional_iterator_tag)
 W char const* std::find<char const*, char>(char const*, char const*, char const&)
 W char const* std::find_end<char const*, char const*>(char const*, char const*, char const*, char const*)
 W char const* std::search<char const*, char const*>(char const*, char const*, char const*, char const*)
 W char const** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<char const*>(char const* const*, char const* const*, char const**)
 W char const** std::__copy_move_a2<false, char const**, char const**>(char const**, char const**, char const**)
 W char const** std::__copy_move_a<false, char const**, char const**>(char const**, char const**, char const**)
 W char const** std::__copy_move_backward<false, true, std::random_access_iterator_tag>::__copy_move_b<char const*>(char const* const*, char const* const*, char const**)
 W char const** std::__copy_move_backward_a2<false, char const**, char const**>(char const**, char const**, char const**)
 W char const** std::__copy_move_backward_a<false, char const**, char const**>(char const**, char const**, char const**)
 W char const** std::__uninitialized_copy<true>::__uninit_copy<char const**, char const**>(char const**, char const**, char const**)
 W char const** std::__uninitialized_copy_a<char const**, char const**, char const*>(char const**, char const**, char const**, std::allocator<char const*>&)
 W char const** std::__uninitialized_move_a<char const**, char const**, std::allocator<char const*> >(char const**, char const**, char const**, std::allocator<char const*>&)
 W char const** std::copy<char const**, char const**>(char const**, char const**, char const**)
 W char const** std::copy_backward<char const**, char const**>(char const**, char const**, char const**)
 W char const** std::fill_n<char const**, unsigned long, char const*>(char const**, unsigned long, char const* const&)
 W char const** std::uninitialized_copy<char const**, char const**>(char const**, char const**, char const**)
 W char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char const*, std::string> >(__gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<char> const&, std::forward_iterator_tag)
 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
 W char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&)
 W char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
 W char* std::string::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type)
 W float const& std::max<float>(float const&, float const&)
 W int Etc::FilterTwoPass<float>(float*, int, int, float*, int, int, unsigned int, double (*)(double))
 W int const& std::max<int>(int const&, int const&)
 W int const& std::min<int>(int const&, int const&)
 W int* std::__addressof<int>(int&)
 W int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*)
 W int* std::__copy_move_a2<false, int*, int*>(int*, int*, int*)
 W int* std::__copy_move_a<false, int*, int*>(int*, int*, int*)
 W int* std::__copy_move_backward<false, true, std::random_access_iterator_tag>::__copy_move_b<int>(int const*, int const*, int*)
 W int* std::__copy_move_backward_a2<false, int*, int*>(int*, int*, int*)
 W int* std::__copy_move_backward_a<false, int*, int*>(int*, int*, int*)
 W int* std::__uninitialized_copy<true>::__uninit_copy<int*, int*>(int*, int*, int*)
 W int* std::__uninitialized_copy_a<int*, int*, int>(int*, int*, int*, std::allocator<int>&)
 W int* std::__uninitialized_move_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&)
 W int* std::copy<int*, int*>(int*, int*, int*)
 W int* std::copy_backward<int*, int*>(int*, int*, int*)
 W int* std::uninitialized_copy<int*, int*>(int*, int*, int*)
 W long const& std::min<long>(long const&, long const&)
 W operator delete(void*, void*)
 W operator new(unsigned long, void*)
 W std::_Bvector_base<std::allocator<bool> >::_M_deallocate()
 W std::_Deque_base<long, std::allocator<long> >::_M_initialize_map(unsigned long)
 W std::_Deque_base<long, std::allocator<long> >::~_Deque_base()
 W std::_Deque_base<std::__detail::_StateSeq<std::regex_traits<char> >, std::allocator<std::__detail::_StateSeq<std::regex_traits<char> > > >::_M_initialize_map(unsigned long)
 W std::_Deque_base<std::__detail::_StateSeq<std::regex_traits<char> >, std::allocator<std::__detail::_StateSeq<std::regex_traits<char> > > >::~_Deque_base()
 W std::_Function_base::_Base_manager<CAttributeMatcher<CBoardGameInstance>::BMatchingObjectsExist(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CAttributeMatcher<CBoardGameInstance>::BMatchingObjectsExist(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CAttributeMatcher<CBoardGameInstance>::GetMatchingObjectCount(ContextFreeAttributeListMatchPattern const&, unsigned int) const::{lambda(CGameObject*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CAttributeMatcher<CBoardGameInstance>::GetMatchingObjectCount(ContextFreeAttributeListMatchPattern const&, unsigned int) const::{lambda(CGameObject*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CAttributeMatcher<CBoardGameInstance>::GetMatchingObjects(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CAttributeMatcher<CBoardGameInstance>::GetMatchingObjects(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CAttributeMatcher<CTableGame>::BMatchingObjectsExist(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CAttributeMatcher<CTableGame>::BMatchingObjectsExist(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CAttributeMatcher<CTableGame>::GetMatchingObjectCount(ContextFreeAttributeListMatchPattern const&, unsigned int) const::{lambda(CGameObject*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CAttributeMatcher<CTableGame>::GetMatchingObjectCount(ContextFreeAttributeListMatchPattern const&, unsigned int) const::{lambda(CGameObject*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CAttributeMatcher<CTableGame>::GetMatchingObjects(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CAttributeMatcher<CTableGame>::GetMatchingObjects(ContextFreeAttributeListMatchPattern const&) const::{lambda(CGameObject*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGAttachEntityContainer<CDCGCardAttachEntity>::UpdateVisibility()::{lambda(CDCGCardAttachEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGAttachEntityContainer<CDCGCardAttachEntity>::UpdateVisibility()::{lambda(CDCGCardAttachEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGCardArmorEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardArmorEntity>()::{lambda(CDCGCardArmorEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGCardArmorEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardArmorEntity>()::{lambda(CDCGCardArmorEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGCardAttackEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardAttackEntity>()::{lambda(CDCGCardAttackEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGCardAttackEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardAttackEntity>()::{lambda(CDCGCardAttackEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGCardBattleSleeveEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardBattleSleeveEntity>()::{lambda(CDCGCardBattleSleeveEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGCardBattleSleeveEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardBattleSleeveEntity>()::{lambda(CDCGCardBattleSleeveEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGCardCombatArrowEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardCombatArrowEntity>()::{lambda(CDCGCardCombatArrowEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGCardCombatArrowEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardCombatArrowEntity>()::{lambda(CDCGCardCombatArrowEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGCardCombatPreviewEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardCombatPreviewEntity>()::{lambda(CDCGCardCombatPreviewEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGCardCombatPreviewEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardCombatPreviewEntity>()::{lambda(CDCGCardCombatPreviewEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGCardHealthEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardHealthEntity>()::{lambda(CDCGCardHealthEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGCardHealthEntity* CDCGAttachEntityContainer<CDCGCardAttachEntity>::GetAttachedSingleEntity<CDCGCardHealthEntity>()::{lambda(CDCGCardHealthEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGTowerArmorEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerArmorEntity>()::{lambda(CDCGTowerArmorEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGTowerArmorEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerArmorEntity>()::{lambda(CDCGTowerArmorEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGTowerCombatPreviewEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerCombatPreviewEntity>()::{lambda(CDCGTowerCombatPreviewEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGTowerCombatPreviewEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerCombatPreviewEntity>()::{lambda(CDCGTowerCombatPreviewEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGTowerHealthEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerHealthEntity>()::{lambda(CDCGTowerHealthEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGTowerHealthEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerHealthEntity>()::{lambda(CDCGTowerHealthEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGTowerManaEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerManaEntity>()::{lambda(CDCGTowerManaEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGTowerManaEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerManaEntity>()::{lambda(CDCGTowerManaEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDCGTowerTopEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerTopEntity>()::{lambda(CDCGTowerTopEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDCGTowerTopEntity* CDCGAttachEntityContainer<CDCGTowerAttachEntity>::GetAttachedSingleEntity<CDCGTowerTopEntity>()::{lambda(CDCGTowerTopEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CDotaCardGame::CreateDuplicateInZone(CGameObject*, EGameZone, int, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, StrongTypedef<unsigned int, CardIDTypeTag, 0u>, std::function<void (CGameObject*)>&&)::{default arg#1}::{lambda(CGameObject*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CDotaCardGame::CreateDuplicateInZone(CGameObject*, EGameZone, int, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, StrongTypedef<unsigned int, CardIDTypeTag, 0u>, std::function<void (CGameObject*)>&&)::{default arg#1}::{lambda(CGameObject*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CNewParticleEffect::Restart()::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CNewParticleEffect::Restart()::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_CardDiscarded>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_CardDiscarded>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_CardDrawn>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_CardDrawn>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_CardPlayed>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_CardPlayed>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_DamageAttempted>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_DamageAttempted>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_TowerManaSpent>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_TowerManaSpent>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_TriggerTriggered>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_TriggerTriggered>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_UnitEnteringCombat>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_UnitEnteringCombat>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_UnitTargeted>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_UnitTargeted>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_UnitUserTargeted>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScriptObjectRef* ScriptObj::TargetsOf<CTraceMsg_UnitUserTargeted>(int, std::function<bool (CConditionalEval const&)> const&)::{default arg#1}::{lambda(CConditionalEval const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#10}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#10} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#11}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#11} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#12}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#12} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#13}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#13} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#14}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#14} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#1}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#1} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#2}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#2} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#3}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#3} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#4}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#4} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#5}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#5} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#6}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#6} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#7}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#7} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#8}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#8} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#9}>::_M_manager(std::_Any_data&, CScript_DeathChecks::YieldingExecute(IDCGPerformanceScriptContext*) const::{lambda(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*)#3}::operator()(CTraceMsg_CardKilled const&, StrongTypedef<unsigned int, ObjectIDTypeTag, 0u>, IDCGPerformanceScriptContext*) const::{lambda(CScriptConfig const&)#9} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#2}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#4}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#5}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#6}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CardDrawPhaseIntroPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CardDrawPhaseIntroPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CardPlayBeginningOfSpellCastingPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CardPlayBeginningOfSpellCastingPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<CardPlayShowCardPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<CardPlayShowCardPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<ConCommandPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<ConCommandPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<DisableParticles>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<EndOfTurnPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<EndOfTurnPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<FlopPlayerMakingHeroDeploymentDecisionsPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<FlopPlayerMakingHeroDeploymentDecisionsPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<FlopPostHeroDeploymentChoicesPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<FlopPostHeroDeploymentChoicesPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<FlopPreHeroDeploymentChoicesPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<FlopPreHeroDeploymentChoicesPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<InitialFlipFlopPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<InitialFlipFlopPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<MatchAttributeList const& (*)(AttributeListGeneratorFunctionParam<MatchAttributeList>)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#2}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#3}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#4}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#5}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<PlayerMakingPurchasingDecisions::OnServerUpdate(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&)::{lambda(IDCGPerformanceScriptContext*)#5}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<SetupPregamePerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<SetupPregamePerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<StoreCloseAndGoToFlopPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<StoreCloseAndGoToFlopPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<StoreReturnToStrategicViewPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<StoreReturnToStrategicViewPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<StoreTimedOutPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<StoreTimedOutPerformance::OnEnter(ClientStateMachine<IDCGClientState, CDCGView*>&)::{lambda(IDCGPerformanceScriptContext*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<TemporaryReferenceWrapper<MergeAttributeList> (*)(CDotaCardGame*, IAttributeContainerReader const&, SpecificObjects_t const&)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<Vector (*)(float, Vector const&, Vector const&)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<CDCG_UI_AccountBadge>(std::function<bool (CDCG_UI_AccountBadge*)>)::{lambda(panorama::CPanel2D*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<CDCG_UI_AccountBadge>(std::function<bool (CDCG_UI_AccountBadge*)>)::{lambda(panorama::CPanel2D*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<CDCG_UI_ScenePanel>(std::function<bool (CDCG_UI_ScenePanel*)>)::{lambda(panorama::CPanel2D*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<CDCG_UI_ScenePanel>(std::function<bool (CDCG_UI_ScenePanel*)>)::{lambda(panorama::CPanel2D*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<CDCG_UI_SocialNotification>(std::function<bool (CDCG_UI_SocialNotification*)>)::{lambda(panorama::CPanel2D*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<CDCG_UI_SocialNotification>(std::function<bool (CDCG_UI_SocialNotification*)>)::{lambda(panorama::CPanel2D*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<panorama::CRadioButton>(std::function<bool (panorama::CRadioButton*)>)::{lambda(panorama::CPanel2D*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenOfType<panorama::CRadioButton>(std::function<bool (panorama::CRadioButton*)>)::{lambda(panorama::CPanel2D*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenTraverseOfType<CDCGDeckListCardPanel>(std::function<bool (CDCGDeckListCardPanel*)>)::{lambda(panorama::CPanel2D*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenTraverseOfType<CDCGDeckListCardPanel>(std::function<bool (CDCGDeckListCardPanel*)>)::{lambda(panorama::CPanel2D*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenTraverseOfType<panorama::CPanel2D>(std::function<bool (panorama::CPanel2D*)>)::{lambda(panorama::CPanel2D*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<bool panorama::CPanel2D::IterateChildrenTraverseOfType<panorama::CPanel2D>(std::function<bool (panorama::CPanel2D*)>)::{lambda(panorama::CPanel2D*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<int (*)(panorama::IUIPanelClient const*, panorama::IUIPanelClient const*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_BracketMatcher<std::regex_traits<char>, false, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_BracketMatcher<std::regex_traits<char>, false, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_BracketMatcher<std::regex_traits<char>, true, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_BracketMatcher<std::regex_traits<char>, true, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_CharMatcher<std::regex_traits<char>, false, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_CharMatcher<std::regex_traits<char>, false, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_CharMatcher<std::regex_traits<char>, true, false> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__detail::_CharMatcher<std::regex_traits<char>, true, true> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned int>, std::__future_base::_Result_base::_Deleter>, unsigned int> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, void> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::function<int (panorama::IUIPanelClient const*, panorama::IUIPanelClient const*)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void (*)(CDCGCardAttachEntity*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void (*)(CDCGPassCoinView*, CDCGPassCoinInfo*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void (*)(CDCGTowerAttachEntity*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void (*)(CDotaCardGame*, CCardResolver*, SpecificObjects_t const&)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void (*)(CGameObject*, CGameObject*, TagUnion<Typelist<CDotaCardGame::DamageAmount_t, CDotaCardGame::HealingAmount_t> > const&, StrongTypedef<unsigned int, CardIDTypeTag, 0u>)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void (*)(CSceneObject*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void (*)(IDCGPerformanceScriptContext*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGAttachEntityContainer<CDCGCardAttachEntity>::UpdateVisibility<CDCGCardCombatPreviewEntity>()::{lambda(CDCGCardCombatPreviewEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGAttachEntityContainer<CDCGCardAttachEntity>::UpdateVisibility<CDCGCardCombatPreviewEntity>()::{lambda(CDCGCardCombatPreviewEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGAttachEntityContainer<CDCGTowerAttachEntity>::UpdateVisibility<CDCGTowerCombatPreviewEntity>()::{lambda(CDCGTowerCombatPreviewEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGAttachEntityContainer<CDCGTowerAttachEntity>::UpdateVisibility<CDCGTowerCombatPreviewEntity>()::{lambda(CDCGTowerCombatPreviewEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGAxeAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGAxeAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGChainFrostAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGChainFrostAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGPathoftheWiseAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGPathoftheWiseAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGThundergodsWrathAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGThundergodsWrathAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGTidehunterAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGTidehunterAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGUntestedGruntAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGCardAchievementManager::RegisterAchievementFn<CDCGUntestedGruntAchievementFactory>(StrongTypedef<unsigned int, CardIDTypeTag, 0u>)::{lambda(int, CDotaCardGame*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGCardView::ToggleEntitiesOfType<CDCGCompositeStateRuleEntity>(bool)::{lambda(CDCGCompositeStateRuleEntity*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGCardView::ToggleEntitiesOfType<CDCGCompositeStateRuleEntity>(bool)::{lambda(CDCGCompositeStateRuleEntity*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGView::QueueClientStateMachineEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGView::QueueClientStateMachineEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void CDCGView::QueueClientStateMachineEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void CDCGView::QueueClientStateMachineEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CDCGTimedState::StateTimerExpired>(CDCGTimedState::StateTimerExpired const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CDCGTimedState::StateTimerExpired>(CDCGTimedState::StateTimerExpired const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ClientPerformanceComplete>(ClientPerformanceComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ClientPerformanceComplete>(ClientPerformanceComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ClientPlayerHeldRandomItem>(ClientPlayerHeldRandomItem const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ClientPlayerHeldRandomItem>(ClientPlayerHeldRandomItem const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ConCommandReceived>(ConCommandReceived const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ConCommandReceived>(ConCommandReceived const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<DoFlopHeroPerformance>(DoFlopHeroPerformance const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<DoFlopHeroPerformance>(DoFlopHeroPerformance const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ServerWaitComplete>(ServerWaitComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ServerWaitComplete>(ServerWaitComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShoppingComplete>(ShoppingComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShoppingComplete>(ShoppingComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShoppingTimedOut>(ShoppingTimedOut const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShoppingTimedOut>(ShoppingTimedOut const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShoppingWaitComplete>(ShoppingWaitComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShoppingWaitComplete>(ShoppingWaitComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::WaitForEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda(void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::WaitForEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda(void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::WaitForEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda(void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGClientState, CDCGView*>::WaitForEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda(void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGFountainState, CDCGFountainView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGHandState, CDCGHandView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<AnimateCardCasting>(AnimateCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<AutoScrollingHandToCard>(AutoScrollingHandToCard const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCardCasting>(BeginCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCardDrawPhase>(BeginCardDrawPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCardPlayPhase>(BeginCardPlayPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginCombatPhase>(BeginCombatPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginEndOfTurnPhase>(BeginEndOfTurnPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginFlopPhase>(BeginFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginHeroCasting>(BeginHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginInitialFlopPhase>(BeginInitialFlopPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginPreGameSetup>(BeginPreGameSetup const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<BeginShoppingPhase>(BeginShoppingPhase const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardCastingCanceled>(CardCastingCanceled const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardIsCastingTarget>(CardIsCastingTarget const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardIsTargetingFountain>(CardIsTargetingFountain const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ClientCardPerformanceComplete>(ClientCardPerformanceComplete const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<EndCardCasting>(EndCardCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<EndHeroCasting>(EndHeroCasting const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<FinishedUpdatingGameObjects>(FinishedUpdatingGameObjects const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<HideLocalHandDuringFlop>(HideLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<HoverCardInHand>(HoverCardInHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<MatchEnd>(MatchEnd const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ReceivedGameStateServerUpdate>(ReceivedGameStateServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ReceivedGameStateServerUpdateResponse>(ReceivedGameStateServerUpdateResponse const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ReceivedServerUpdate>(ReceivedServerUpdate const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ServerExitingState>(ServerExitingState const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<ShowLocalHandDuringFlop>(ShowLocalHandDuringFlop const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<SortHand>(SortHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<TimerExpired>(TimerExpired const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ClientStateMachine<IDCGShopState, CDCGShopView*>::OnEvent<UserScrollingHand>(UserScrollingHand const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ContextFreeAttributeListMatchPattern::SelectMatchFunctionInternal<AttributeList>(AttributeList const&)::{lambda(IAttributeContainerReader const&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ContextFreeAttributeListMatchPattern::SelectMatchFunctionInternal<AttributeList>(AttributeList const&)::{lambda(IAttributeContainerReader const&)#2}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ContextFreeAttributeListMatchPattern::SelectMatchFunctionInternal<MatchAttributeList>(MatchAttributeList const&)::{lambda(IAttributeContainerReader const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ContextFreeAttributeListMatchPattern::SelectMatchFunctionInternal<MatchAttributeList>(MatchAttributeList const&)::{lambda(IAttributeContainerReader const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void ContextFreeAttributeListMatchPattern::SelectMatchFunctionInternal<MatchAttributeList>(MatchAttributeList const&)::{lambda(IAttributeContainerReader const&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void ContextFreeAttributeListMatchPattern::SelectMatchFunctionInternal<MatchAttributeList>(MatchAttributeList const&)::{lambda(IAttributeContainerReader const&)#2}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<CardZoneChange, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<CardZoneChange, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ClientPlayerHeldRandomItem, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ClientPlayerHeldRandomItem const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ClientPlayerHeldRandomItem, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ClientPlayerHeldRandomItem const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<FinishedUpdatingGameObjects, FlopPlayerMakingHeroDeploymentDecisions>(void (FlopPlayerMakingHeroDeploymentDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, FinishedUpdatingGameObjects const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<FinishedUpdatingGameObjects, FlopPlayerMakingHeroDeploymentDecisions>(void (FlopPlayerMakingHeroDeploymentDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, FinishedUpdatingGameObjects const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, CardPlayWaitingForPlayerAction>(void (CardPlayWaitingForPlayerAction::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, CardPlayWaitingForPlayerAction>(void (CardPlayWaitingForPlayerAction::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, FlopPlayerMakingHeroDeploymentDecisions>(void (FlopPlayerMakingHeroDeploymentDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, FlopPlayerMakingHeroDeploymentDecisions>(void (FlopPlayerMakingHeroDeploymentDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, FlopSyncAfterBothPlayersDeployedHeroesPerformance>(void (FlopSyncAfterBothPlayersDeployedHeroesPerformance::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, FlopSyncAfterBothPlayersDeployedHeroesPerformance>(void (FlopSyncAfterBothPlayersDeployedHeroesPerformance::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, StoreWaitingForServerStateChange>(void (StoreWaitingForServerStateChange::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, StoreWaitingForServerStateChange>(void (StoreWaitingForServerStateChange::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedServerUpdate, CDCGPerformanceScriptState>(void (CDCGPerformanceScriptState::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedServerUpdate, CDCGPerformanceScriptState>(void (CDCGPerformanceScriptState::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedServerUpdate, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ReceivedServerUpdate, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ReceivedServerUpdate const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ServerExitingState, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ServerExitingState const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateEvent<ServerExitingState, PlayerMakingPurchasingDecisions>(void (PlayerMakingPurchasingDecisions::*)(ClientStateMachine<IDCGClientState, CDCGView*>&, ServerExitingState const&))::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginCardDrawPhase, CardDrawPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginCardDrawPhase, CardDrawPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginCardPlayPhase, CardPlayPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginCardPlayPhase, CardPlayPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginCombatPhase, CombatPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginCombatPhase, CombatPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginEndOfTurnPhase, EndOfTurnPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginEndOfTurnPhase, EndOfTurnPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginFlopPhase, FlopPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginFlopPhase, FlopPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginInitialFlopPhase, InitialFlopPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginInitialFlopPhase, InitialFlopPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginPreGameSetup, InitialPreGameSetupTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginPreGameSetup, InitialPreGameSetupTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginShoppingPhase, ShoppingPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<BeginShoppingPhase, ShoppingPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<CDCGTimedState::StateTimerExpired, FlopPostHeroDeploymentChoicesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<CDCGTimedState::StateTimerExpired, FlopPostHeroDeploymentChoicesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<CDCGTimedState::StateTimerExpired, FlopSyncAfterBothPlayersDeployedHeroesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<CDCGTimedState::StateTimerExpired, FlopSyncAfterBothPlayersDeployedHeroesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CardDrawPhaseIntroPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CardDrawPhaseIntroPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CardPlayBeginningOfSpellCastingPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CardPlayBeginningOfSpellCastingPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CardPlayWaitingForPlayerAction>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CardPlayWaitingForPlayerAction>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CombatPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, CombatPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, EndOfTurnPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, EndOfTurnPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPhaseTransition>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPlayerMakingHeroDeploymentDecisions>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPlayerMakingHeroDeploymentDecisions>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPostHeroDeploymentChoicesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPostHeroDeploymentChoicesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPreHeroDeploymentChoicesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, FlopPreHeroDeploymentChoicesPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, InitialFlipFlopPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, InitialFlipFlopPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, PlayerMakingPurchasingDecisions>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, PlayerMakingPurchasingDecisions>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, SetupPregamePerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, SetupPregamePerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, StoreReturnToStrategicViewPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, StoreReturnToStrategicViewPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, WaitingForServerStateChange>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ClientPerformanceComplete, WaitingForServerStateChange>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ConCommandReceived, ConCommandPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ConCommandReceived, ConCommandPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<DoFlopHeroPerformance, FlopPlayerMakingHeroDeploymentDecisionsPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<DoFlopHeroPerformance, FlopPlayerMakingHeroDeploymentDecisionsPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ServerExitingState, WaitingForServerStateChange>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ServerExitingState, WaitingForServerStateChange>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ServerWaitComplete, CardPlayShowCardPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ServerWaitComplete, CardPlayShowCardPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingComplete, StoreCloseAndGoToFlopPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingComplete, StoreCloseAndGoToFlopPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingTimedOut, FlopEnteredBecauseShoppingTimedOutPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingTimedOut, FlopEnteredBecauseShoppingTimedOutPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingTimedOut, StoreTimedOutPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingTimedOut, StoreTimedOutPerformance>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingWaitComplete, WaitingForServerStateChange>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGClientState, CDCGView*> >::RegisterStateTransition<ShoppingWaitComplete, WaitingForServerStateChange>()::{lambda(ClientStateMachine<IDCGClientState, CDCGView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<BeginHeroCasting, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, BeginHeroCasting const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<BeginHeroCasting, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, BeginHeroCasting const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<CardIsCastingTarget, FountainStateIdle>(void (FountainStateIdle::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, CardIsCastingTarget const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<CardIsCastingTarget, FountainStateIdle>(void (FountainStateIdle::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, CardIsCastingTarget const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<CardZoneChange, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<CardZoneChange, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<HoverCardInHand, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<HoverCardInHand, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<HoverCardInHand, FountainStateIdle>(void (FountainStateIdle::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<HoverCardInHand, FountainStateIdle>(void (FountainStateIdle::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<HoverCardInHand, FountainTargetingHeroes>(void (FountainTargetingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<HoverCardInHand, FountainTargetingHeroes>(void (FountainTargetingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<UserScrollingHand, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, UserScrollingHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateEvent<UserScrollingHand, FountainDeployingHeroes>(void (FountainDeployingHeroes::*)(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, UserScrollingHand const&))::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<CardIsTargetingFountain, FountainTargetingHeroes>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<CardIsTargetingFountain, FountainTargetingHeroes>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<EndHeroCasting, FountainStateIdle>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<EndHeroCasting, FountainStateIdle>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<HideLocalHandDuringFlop, FountainDeployingHeroes>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<HideLocalHandDuringFlop, FountainDeployingHeroes>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<ServerExitingState, FountainStateIdle>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<ServerExitingState, FountainStateIdle>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<ShowLocalHandDuringFlop, FountainStateIdle>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGFountainState, CDCGFountainView*> >::RegisterStateTransition<ShowLocalHandDuringFlop, FountainStateIdle>()::{lambda(ClientStateMachine<IDCGFountainState, CDCGFountainView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<AnimateCardCasting, HandCastingCards>(void (HandCastingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, AnimateCardCasting const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<AnimateCardCasting, HandCastingCards>(void (HandCastingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, AnimateCardCasting const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<AutoScrollingHandToCard, HandBuyingCards>(void (HandBuyingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, AutoScrollingHandToCard const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<AutoScrollingHandToCard, HandBuyingCards>(void (HandBuyingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, AutoScrollingHandToCard const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<CardCastingCanceled, HandCastingCards>(void (HandCastingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, CardCastingCanceled const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<CardCastingCanceled, HandCastingCards>(void (HandCastingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, CardCastingCanceled const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<CardZoneChange, HandBuyingCards>(void (HandBuyingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<CardZoneChange, HandBuyingCards>(void (HandBuyingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<CardZoneChange, HandCastingCards>(void (HandCastingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<CardZoneChange, HandCastingCards>(void (HandCastingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, CardZoneChange const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<HoverCardInHand, HandBuyingCards>(void (HandBuyingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<HoverCardInHand, HandBuyingCards>(void (HandBuyingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<HoverCardInHand, HandStateIdle>(void (HandStateIdle::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<HoverCardInHand, HandStateIdle>(void (HandStateIdle::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, HoverCardInHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, HandFloppingCards>(void (HandFloppingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<ReceivedGameStateServerUpdate, HandFloppingCards>(void (HandFloppingCards::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, ReceivedGameStateServerUpdate const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<SortHand, IDCGHandState>(void (IDCGHandState::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, SortHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<SortHand, IDCGHandState>(void (IDCGHandState::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, SortHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<UserScrollingHand, IDCGHandState>(void (IDCGHandState::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, UserScrollingHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateEvent<UserScrollingHand, IDCGHandState>(void (IDCGHandState::*)(ClientStateMachine<IDCGHandState, CDCGHandView*>&, UserScrollingHand const&))::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginCardCasting, HandCastingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginCardCasting, HandCastingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginCardDrawPhase, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginCardDrawPhase, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginFlopPhase, HandFloppingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginFlopPhase, HandFloppingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginShoppingPhase, HandBuyingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<BeginShoppingPhase, HandBuyingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<CardIsTargetingFountain, HandShowingFountain>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<CardIsTargetingFountain, HandShowingFountain>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<EndCardCasting, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<EndCardCasting, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<HideLocalHandDuringFlop, HandFloppingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<HideLocalHandDuringFlop, HandFloppingCards>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<MatchEnd, HandMatchEnd>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<MatchEnd, HandMatchEnd>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<ServerExitingState, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<ServerExitingState, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<ShowLocalHandDuringFlop, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<ShowLocalHandDuringFlop, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<TimerExpired, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void IStateMachineState<ClientStateMachine<IDCGHandState, CDCGHandView*> >::RegisterStateTransition<TimerExpired, HandStateIdle>()::{lambda(ClientStateMachine<IDCGHandState, CDCGHandView*>&, void const*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateActiveAbility>(CardCompositeStateActiveAbility const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_ActiveAbility*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateActiveAbility>(CardCompositeStateActiveAbility const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_ActiveAbility*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateDeathEffect>(CardCompositeStateDeathEffect const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_DeathEffect*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateDeathEffect>(CardCompositeStateDeathEffect const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_DeathEffect*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateEnterLaneEffect>(CardCompositeStateEnterLaneEffect const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_EnterLaneEffect*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateEnterLaneEffect>(CardCompositeStateEnterLaneEffect const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_EnterLaneEffect*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateEquippedItem>(CardCompositeStateEquippedItem const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_EquippedItem*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateEquippedItem>(CardCompositeStateEquippedItem const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_EquippedItem*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateGrantedPassive>(CardCompositeStateGrantedPassive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_GrantedPassive*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateGrantedPassive>(CardCompositeStateGrantedPassive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_GrantedPassive*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateGrantedReactive>(CardCompositeStateGrantedReactive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_GrantedReactive*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateGrantedReactive>(CardCompositeStateGrantedReactive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_GrantedReactive*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateHiddenStatMod>(CardCompositeStateHiddenStatMod const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_HiddenStatMod*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateHiddenStatMod>(CardCompositeStateHiddenStatMod const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_HiddenStatMod*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateIsCloned>(CardCompositeStateIsCloned const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_IsCloned*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateIsCloned>(CardCompositeStateIsCloned const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_IsCloned*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateItemActiveAbility>(CardCompositeStateItemActiveAbility const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_ItemActiveAbility*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateItemActiveAbility>(CardCompositeStateItemActiveAbility const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_ItemActiveAbility*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateNamedPassive>(CardCompositeStateNamedPassive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_NamedPassive*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateNamedPassive>(CardCompositeStateNamedPassive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_NamedPassive*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateNamedReactive>(CardCompositeStateNamedReactive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_NamedReactive*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateNamedReactive>(CardCompositeStateNamedReactive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_NamedReactive*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStatePlayEffect>(CardCompositeStatePlayEffect const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_PlayEffect*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStatePlayEffect>(CardCompositeStatePlayEffect const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_PlayEffect*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateTemplateActiveAbility>(CardCompositeStateTemplateActiveAbility const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_TemplateActiveAbility*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateTemplateActiveAbility>(CardCompositeStateTemplateActiveAbility const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_TemplateActiveAbility*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateUnnamedPassive>(CardCompositeStateUnnamedPassive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_UnnamedPassive*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateUnnamedPassive>(CardCompositeStateUnnamedPassive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_UnnamedPassive*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateUnnamedReactive>(CardCompositeStateUnnamedReactive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_UnnamedReactive*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<void RuleEntityCreateOrUpdateVisitor::operator()<CardCompositeStateUnnamedReactive>(CardCompositeStateUnnamedReactive const&, Optional<StrongTypedef<unsigned int, EffectIDTypeTag, 0u> >, Optional<int>, int)::{lambda(CDCGRuleEntity_UnnamedReactive*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Ref_manager<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Ref_manager<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, false, false, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, false, true, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, true, false, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_AnyMatcher<std::regex_traits<char>, true, true, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_BracketMatcher<std::regex_traits<char>, false, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_BracketMatcher<std::regex_traits<char>, false, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_BracketMatcher<std::regex_traits<char>, true, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_BracketMatcher<std::regex_traits<char>, true, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_CharMatcher<std::regex_traits<char>, false, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_CharMatcher<std::regex_traits<char>, false, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_CharMatcher<std::regex_traits<char>, true, false> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<bool (char), std::__detail::_CharMatcher<std::regex_traits<char>, true, true> >::_M_invoke(std::_Any_data const&, char&&)
 W std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned int>, std::__future_base::_Result_base::_Deleter>, unsigned int> >::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, void> >::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<unsigned int (), std::reference_wrapper<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)> > >::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<void (), std::reference_wrapper<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)> > >::_M_invoke(std::_Any_data const&)
 W std::_Hashtable<ECardColor, std::pair<ECardColor const, int>, std::allocator<std::pair<ECardColor const, int> >, std::__detail::_Select1st, std::equal_to<ECardColor>, std::hash<ECardColor>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<ECardColor const, int>, true>*)
 W std::_Hashtable<ECardColor, std::pair<ECardColor const, int>, std::allocator<std::pair<ECardColor const, int> >, std::__detail::_Select1st, std::equal_to<ECardColor>, std::hash<ECardColor>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<EDCGFaction, std::pair<EDCGFaction const, int>, std::allocator<std::pair<EDCGFaction const, int> >, std::__detail::_Select1st, std::equal_to<EDCGFaction>, std::hash<EDCGFaction>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<EDCGFaction const, int>, true>*)
 W std::_Hashtable<EDCGFaction, std::pair<EDCGFaction const, int>, std::allocator<std::pair<EDCGFaction const, int> >, std::__detail::_Select1st, std::equal_to<EDCGFaction>, std::hash<EDCGFaction>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<EEffectDuration, EEffectDuration, std::allocator<EEffectDuration>, std::__detail::_Identity, std::equal_to<EEffectDuration>, std::hash<EEffectDuration>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<EEffectDuration, false>*)
 W std::_Hashtable<EEffectDuration, EEffectDuration, std::allocator<EEffectDuration>, std::__detail::_Identity, std::equal_to<EEffectDuration>, std::hash<EEffectDuration>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<EEffectDuration, EEffectDuration, std::allocator<EEffectDuration>, std::__detail::_Identity, std::equal_to<EEffectDuration>, std::hash<EEffectDuration>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()
 W std::_Hashtable<char const*, char const*, std::allocator<char const*>, std::__detail::_Identity, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<char const*, false>*)
 W std::_Hashtable<char const*, char const*, std::allocator<char const*>, std::__detail::_Identity, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<char const*, char const*, std::allocator<char const*>, std::__detail::_Identity, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()
 W std::_Hashtable<float, std::pair<float const, int>, std::allocator<std::pair<float const, int> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<float const, int>, false>*)
 W std::_Hashtable<float, std::pair<float const, int>, std::allocator<std::pair<float const, int> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
 W std::_Hashtable<unsigned long long, std::pair<unsigned long long const, int>, std::allocator<std::pair<unsigned long long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long long const, int>, false>*)
 W std::_Hashtable<unsigned long long, std::pair<unsigned long long const, int>, std::allocator<std::pair<unsigned long long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<unsigned long long, std::pair<unsigned long long const, int>, std::allocator<std::pair<unsigned long long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<unsigned long long const, int>, false, false>)
 W std::_Hashtable<unsigned long long, std::pair<unsigned long long const, int>, std::allocator<std::pair<unsigned long long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
 W std::_Identity<int>::operator()(int const&) const
 W std::_Identity<std::string>::operator()(std::string const&) const
 W std::_Identity<std::string>::operator()(std::string&) const
 W std::_Iter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, false>::_S_base(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 W std::_Iter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, true>::_S_base(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 W std::_Iter_base<char const**, false>::_S_base(char const**)
 W std::_Iter_base<int*, false>::_S_base(int*)
 W std::_Iter_base<std::_Rb_tree_const_iterator<int>, false>::_S_base(std::_Rb_tree_const_iterator<int>)
 W std::_Iter_base<std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >, false>::_S_base(std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >)
 W std::_Iter_base<std::insert_iterator<std::vector<int, std::allocator<int> > >, false>::_S_base(std::insert_iterator<std::vector<int, std::allocator<int> > >)
 W std::_Iter_base<std::string const**, false>::_S_base(std::string const**)
 W std::_Iter_base<std::string**, false>::_S_base(std::string**)
 W std::_Iter_base<std::string*, false>::_S_base(std::string*)
 W std::_Iter_base<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, false>::_S_base(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**)
 W std::_Iter_base<std::tr1::__detail::_Hash_node<std::string, false>**, false>::_S_base(std::tr1::__detail::_Hash_node<std::string, false>**)
 W std::_Iter_base<void (**)(), false>::_S_base(void (**)())
 W std::_Iter_base<void**, false>::_S_base(void**)
 W std::_Miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 W std::_Miter_base<char const**>::iterator_type std::__miter_base<char const**>(char const**)
 W std::_Miter_base<int*>::iterator_type std::__miter_base<int*>(int*)
 W std::_Miter_base<std::_Rb_tree_const_iterator<int> >::iterator_type std::__miter_base<std::_Rb_tree_const_iterator<int> >(std::_Rb_tree_const_iterator<int>)
 W std::_Miter_base<std::string const**>::iterator_type std::__miter_base<std::string const**>(std::string const**)
 W std::_Miter_base<std::string**>::iterator_type std::__miter_base<std::string**>(std::string**)
 W std::_Miter_base<std::string*>::iterator_type std::__miter_base<std::string*>(std::string*)
 W std::_Miter_base<void (**)()>::iterator_type std::__miter_base<void (**)()>(void (**)())
 W std::_Miter_base<void**>::iterator_type std::__miter_base<void**>(void**)
 W std::_Niter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 W std::_Niter_base<char const**>::iterator_type std::__niter_base<char const**>(char const**)
 W std::_Niter_base<int*>::iterator_type std::__niter_base<int*>(int*)
 W std::_Niter_base<std::_Rb_tree_const_iterator<int> >::iterator_type std::__niter_base<std::_Rb_tree_const_iterator<int> >(std::_Rb_tree_const_iterator<int>)
 W std::_Niter_base<std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > >::iterator_type std::__niter_base<std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > >(std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >)
 W std::_Niter_base<std::insert_iterator<std::vector<int, std::allocator<int> > > >::iterator_type std::__niter_base<std::insert_iterator<std::vector<int, std::allocator<int> > > >(std::insert_iterator<std::vector<int, std::allocator<int> > >)
 W std::_Niter_base<std::string const**>::iterator_type std::__niter_base<std::string const**>(std::string const**)
 W std::_Niter_base<std::string**>::iterator_type std::__niter_base<std::string**>(std::string**)
 W std::_Niter_base<std::string*>::iterator_type std::__niter_base<std::string*>(std::string*)
 W std::_Niter_base<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**>::iterator_type std::__niter_base<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**>(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**)
 W std::_Niter_base<std::tr1::__detail::_Hash_node<std::string, false>**>::iterator_type std::__niter_base<std::tr1::__detail::_Hash_node<std::string, false>**>(std::tr1::__detail::_Hash_node<std::string, false>**)
 W std::_Niter_base<void (**)()>::iterator_type std::__niter_base<void (**)()>(void (**)())
 W std::_Niter_base<void**>::iterator_type std::__niter_base<void**>(void**)
 W std::_Rb_tree<ActionResult::Component, std::pair<ActionResult::Component const, int>, std::_Select1st<std::pair<ActionResult::Component const, int> >, std::less<ActionResult::Component>, std::allocator<std::pair<ActionResult::Component const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<ActionResult::Component const, int> >*)
 W std::_Rb_tree<ActionResult::Component, std::pair<ActionResult::Component const, int>, std::_Select1st<std::pair<ActionResult::Component const, int> >, std::less<ActionResult::Component>, std::allocator<std::pair<ActionResult::Component const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<ActionResult::Component const, int> >, ActionResult::Component const&)
 W std::_Rb_tree<ActionResult::Component, std::pair<ActionResult::Component const, int>, std::_Select1st<std::pair<ActionResult::Component const, int> >, std::less<ActionResult::Component>, std::allocator<std::pair<ActionResult::Component const, int> > >::_M_get_insert_unique_pos(ActionResult::Component const&)
 W std::_Rb_tree<EGlossaryTerm, EGlossaryTerm, std::_Identity<EGlossaryTerm>, std::less<EGlossaryTerm>, std::allocator<EGlossaryTerm> >::_M_erase(std::_Rb_tree_node<EGlossaryTerm>*)
 W std::_Rb_tree<EGlossaryTerm, EGlossaryTerm, std::_Identity<EGlossaryTerm>, std::less<EGlossaryTerm>, std::allocator<EGlossaryTerm> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<EGlossaryTerm>, EGlossaryTerm const&)
 W std::_Rb_tree<EGlossaryTerm, EGlossaryTerm, std::_Identity<EGlossaryTerm>, std::less<EGlossaryTerm>, std::allocator<EGlossaryTerm> >::_M_get_insert_unique_pos(EGlossaryTerm const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_begin()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_begin() const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_create_node(int const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_destroy_node(std::_Rb_tree_node<int>*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_end()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_end() const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_Node_allocator() const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_node()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, int const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique(int const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique_(std::_Rb_tree_const_iterator<int>, int const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_leftmost()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_lower_bound(std::_Rb_tree_node<int> const*, std::_Rb_tree_node<int> const*, int const&) const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_lower_bound(std::_Rb_tree_node<int>*, std::_Rb_tree_node<int>*, int const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_put_node(std::_Rb_tree_node<int>*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_rightmost()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, false>::_M_initialize()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, false>::_Rb_tree_impl()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl<std::less<int>, false>::~_Rb_tree_impl()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_key(std::_Rb_tree_node<int> const*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_key(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_left(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_left(std::_Rb_tree_node_base*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_right(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_right(std::_Rb_tree_node_base*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_value(std::_Rb_tree_node<int> const*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_S_value(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::begin()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::begin() const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::end()
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::end() const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::find(int const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::find(int const&) const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::get_allocator() const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::size() const
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::~_Rb_tree()
 W std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_begin()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_create_node(std::pair<int const, std::string> const&)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<int const, std::string> >*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_end()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_get_Node_allocator() const
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_get_node()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<int const, std::string> const&)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert_unique(std::pair<int const, std::string> const&)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_leftmost()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int const, std::string> >*, std::_Rb_tree_node<std::pair<int const, std::string> >*, int const&)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_put_node(std::_Rb_tree_node<std::pair<int const, std::string> >*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_rightmost()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_Rb_tree()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_Rb_tree_impl<std::less<int>, false>::_M_initialize()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_Rb_tree_impl<std::less<int>, false>::_Rb_tree_impl()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_Rb_tree_impl<std::less<int>, false>::~_Rb_tree_impl()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_S_key(std::_Rb_tree_node<std::pair<int const, std::string> > const*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_S_key(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_S_left(std::_Rb_tree_node_base*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_S_right(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_S_right(std::_Rb_tree_node_base*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_S_value(std::_Rb_tree_node<std::pair<int const, std::string> > const*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_S_value(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::begin()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::end()
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::find(int const&)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::get_allocator() const
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::key_comp() const
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::lower_bound(int const&)
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::size() const
 W std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::~_Rb_tree()
 W std::_Rb_tree<long, std::pair<long const, long>, std::_Select1st<std::pair<long const, long> >, std::less<long>, std::allocator<std::pair<long const, long> > >::_M_erase(std::_Rb_tree_node<std::pair<long const, long> >*)
 W std::_Rb_tree<long, std::pair<long const, long>, std::_Select1st<std::pair<long const, long> >, std::less<long>, std::allocator<std::pair<long const, long> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<long const, long> >, long const&)
 W std::_Rb_tree<long, std::pair<long const, long>, std::_Select1st<std::pair<long const, long> >, std::less<long>, std::allocator<std::pair<long const, long> > >::_M_get_insert_unique_pos(long const&)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_begin()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_begin() const
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_create_node(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_destroy_node(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_end()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_end() const
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_get_Node_allocator() const
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_get_node()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_insert_unique(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const*, std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const*, std::pair<std::string, int> const&) const
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*, std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*, std::pair<std::string, int> const&)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_put_node(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_Rb_tree()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_Rb_tree_impl<std::less<std::pair<std::string, int> >, false>::_M_initialize()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_Rb_tree_impl<std::less<std::pair<std::string, int> >, false>::_Rb_tree_impl()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_Rb_tree_impl<std::less<std::pair<std::string, int> >, false>::~_Rb_tree_impl()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_key(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_key(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_left(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_left(std::_Rb_tree_node_base*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_right(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_right(std::_Rb_tree_node_base*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_value(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_S_value(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::begin()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::end()
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::end() const
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::find(std::pair<std::string, int> const&) const
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::get_allocator() const
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::lower_bound(std::pair<std::string, int> const&)
 W std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::~_Rb_tree()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_begin()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_begin() const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_create_node(std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_destroy_node(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_end()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_end() const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_get_Node_allocator() const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_get_node()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert_unique(std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >, std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_leftmost()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_lower_bound(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > const*, std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > const*, std::string const&) const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_put_node(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_rightmost()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_upper_bound(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*, std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*, std::string const&)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_Rb_tree()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_Rb_tree_impl<std::less<std::string>, false>::_M_initialize()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_Rb_tree_impl<std::less<std::string>, false>::_Rb_tree_impl()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_Rb_tree_impl<std::less<std::string>, false>::~_Rb_tree_impl()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_key(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > const*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_key(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_left(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_left(std::_Rb_tree_node_base*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_right(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_right(std::_Rb_tree_node_base*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_value(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > const*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_S_value(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::begin()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::end()
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::end() const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::find(std::string const&) const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::get_allocator() const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::size() const
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::upper_bound(std::string const&)
 W std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::~_Rb_tree()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_begin()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_begin() const
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_create_node(std::string const&)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_destroy_node(std::_Rb_tree_node<std::string>*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_end()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_end() const
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_get_Node_allocator() const
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_get_node()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::string const&)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique(std::string const&)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_leftmost()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_lower_bound(std::_Rb_tree_node<std::string> const*, std::_Rb_tree_node<std::string> const*, std::string const&) const
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_lower_bound(std::_Rb_tree_node<std::string>*, std::_Rb_tree_node<std::string>*, std::string const&)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_put_node(std::_Rb_tree_node<std::string>*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_rightmost()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_root()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_Rb_tree()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_Rb_tree_impl<std::less<std::string>, false>::_M_initialize()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_Rb_tree_impl<std::less<std::string>, false>::_Rb_tree_impl()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_Rb_tree_impl<std::less<std::string>, false>::~_Rb_tree_impl()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_key(std::_Rb_tree_node<std::string> const*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_key(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_left(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_left(std::_Rb_tree_node_base*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_right(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_right(std::_Rb_tree_node_base*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_value(std::_Rb_tree_node<std::string> const*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_S_value(std::_Rb_tree_node_base const*)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::begin()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::clear()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::end()
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::end() const
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&)
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::get_allocator() const
 W std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::~_Rb_tree()
 W std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, int>, std::_Select1st<std::pair<unsigned long long const, int> >, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long long const, int> >*)
 W std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, int>, std::_Select1st<std::pair<unsigned long long const, int> >, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned long long const, int> >, unsigned long long const&)
 W std::_Rb_tree<unsigned long long, std::pair<unsigned long long const, int>, std::_Select1st<std::pair<unsigned long long const, int> >, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, int> > >::_M_get_insert_unique_pos(unsigned long long const&)
 W std::_Rb_tree_const_iterator<int>::_M_const_cast() const
 W std::_Rb_tree_const_iterator<int>::_Rb_tree_const_iterator(std::_Rb_tree_iterator<int> const&)
 W std::_Rb_tree_const_iterator<int>::_Rb_tree_const_iterator(std::_Rb_tree_node<int> const*)
 W std::_Rb_tree_const_iterator<int>::operator!=(std::_Rb_tree_const_iterator<int> const&) const
 W std::_Rb_tree_const_iterator<int>::operator*() const
 W std::_Rb_tree_const_iterator<int>::operator++()
 W std::_Rb_tree_const_iterator<int>::operator--()
 W std::_Rb_tree_const_iterator<int>::operator==(std::_Rb_tree_const_iterator<int> const&) const
 W std::_Rb_tree_const_iterator<std::pair<int const, std::string> >::_M_const_cast() const
 W std::_Rb_tree_const_iterator<std::pair<int const, std::string> >::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::pair<int const, std::string> > const&)
 W std::_Rb_tree_const_iterator<std::pair<int const, std::string> >::operator++()
 W std::_Rb_tree_const_iterator<std::pair<int const, std::string> >::operator--()
 W std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const&)
 W std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::_Rb_tree_const_iterator(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const*)
 W std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::operator!=(std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const&) const
 W std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::operator++()
 W std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::operator->() const
 W std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::operator==(std::_Rb_tree_const_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const&) const
 W std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >::_M_const_cast() const
 W std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > > const&)
 W std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >::_Rb_tree_const_iterator(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > const*)
 W std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator++()
 W std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator--()
 W std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator->() const
 W std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator==(std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<void const*, int> > > const&) const
 W std::_Rb_tree_const_iterator<std::string>::_Rb_tree_const_iterator(std::_Rb_tree_iterator<std::string> const&)
 W std::_Rb_tree_const_iterator<std::string>::_Rb_tree_const_iterator(std::_Rb_tree_node<std::string> const*)
 W std::_Rb_tree_const_iterator<std::string>::operator!=(std::_Rb_tree_const_iterator<std::string> const&) const
 W std::_Rb_tree_const_iterator<std::string>::operator==(std::_Rb_tree_const_iterator<std::string> const&) const
 W std::_Rb_tree_iterator<int>::_Rb_tree_iterator(std::_Rb_tree_node<int>*)
 W std::_Rb_tree_iterator<int>::operator--()
 W std::_Rb_tree_iterator<int>::operator==(std::_Rb_tree_iterator<int> const&) const
 W std::_Rb_tree_iterator<std::pair<int const, std::string> >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<int const, std::string> >*)
 W std::_Rb_tree_iterator<std::pair<int const, std::string> >::operator!=(std::_Rb_tree_iterator<std::pair<int const, std::string> > const&) const
 W std::_Rb_tree_iterator<std::pair<int const, std::string> >::operator*() const
 W std::_Rb_tree_iterator<std::pair<int const, std::string> >::operator--()
 W std::_Rb_tree_iterator<std::pair<int const, std::string> >::operator==(std::_Rb_tree_iterator<std::pair<int const, std::string> > const&) const
 W std::_Rb_tree_iterator<std::pair<long const, long> > std::_Rb_tree<long, std::pair<long const, long>, std::_Select1st<std::pair<long const, long> >, std::less<long>, std::allocator<std::pair<long const, long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<long const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<long const, long> >, std::piecewise_construct_t const&, std::tuple<long const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 W std::_Rb_tree_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::operator--()
 W std::_Rb_tree_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::operator==(std::_Rb_tree_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const&) const
 W std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >::_Rb_tree_iterator(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 W std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator!=(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > > const&) const
 W std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator++()
 W std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator--()
 W std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator->() const
 W std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >::operator==(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > > const&) const
 W std::_Rb_tree_iterator<std::string>::_Rb_tree_iterator(std::_Rb_tree_node<std::string>*)
 W std::_Rb_tree_iterator<std::string>::operator--()
 W std::_Rb_tree_iterator<std::string>::operator==(std::_Rb_tree_iterator<std::string> const&) const
 W std::_Rb_tree_node_base::_S_maximum(std::_Rb_tree_node_base*)
 W std::_Rb_tree_node_base::_S_minimum(std::_Rb_tree_node_base*)
 W std::_Select1st<std::pair<char const* const, void (*)(std::string const&)> >::operator()(std::pair<char const* const, void (*)(std::string const&)> const&) const
 W std::_Select1st<std::pair<char const* const, void (*)(std::string const&)> >::operator()(std::pair<char const* const, void (*)(std::string const&)>&) const
 W std::_Select1st<std::pair<int const, std::string> >::operator()(std::pair<int const, std::string> const&) const
 W std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::operator()(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&) const
 W std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >::operator()(std::pair<std::string const, std::pair<void const*, int> > const&) const
 W std::_Setfill<char> std::setfill<char>(char)
 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
 W std::_Sp_counted_ptr<bool*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr<bool*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr<bool*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr<bool*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
 W std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::__detail::_NFA<std::regex_traits<char> >, std::allocator<std::__detail::_NFA<std::regex_traits<char> > >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>, std::allocator<std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, std::allocator<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Vector_base<char const*, std::allocator<char const*> >::_M_allocate(unsigned long)
 W std::_Vector_base<char const*, std::allocator<char const*> >::_M_deallocate(char const**, unsigned long)
 W std::_Vector_base<char const*, std::allocator<char const*> >::_M_get_Tp_allocator()
 W std::_Vector_base<char const*, std::allocator<char const*> >::_M_get_Tp_allocator() const
 W std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_base()
 W std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::_Vector_impl()
 W std::_Vector_base<char const*, std::allocator<char const*> >::_Vector_impl::~_Vector_impl()
 W std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base()
 W std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
 W std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
 W std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
 W std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const
 W std::_Vector_base<int, std::allocator<int> >::_Vector_base()
 W std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
 W std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
 W std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::_M_allocate(unsigned long)
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::_M_deallocate(std::string const**, unsigned long)
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::_M_get_Tp_allocator()
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::_M_get_Tp_allocator() const
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::_Vector_base()
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::_Vector_impl::_Vector_impl()
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::_Vector_impl::~_Vector_impl()
 W std::_Vector_base<std::string const*, std::allocator<std::string const*> >::~_Vector_base()
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::_M_allocate(unsigned long)
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::_M_deallocate(std::string**, unsigned long)
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::_M_get_Tp_allocator()
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::_M_get_Tp_allocator() const
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::_Vector_base()
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::_Vector_impl::_Vector_impl()
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::_Vector_impl::~_Vector_impl()
 W std::_Vector_base<std::string*, std::allocator<std::string*> >::~_Vector_base()
 W std::_Vector_base<std::string, std::allocator<std::string> >::_M_allocate(unsigned long)
 W std::_Vector_base<std::string, std::allocator<std::string> >::_M_deallocate(std::string*, unsigned long)
 W std::_Vector_base<std::string, std::allocator<std::string> >::_M_get_Tp_allocator()
 W std::_Vector_base<std::string, std::allocator<std::string> >::_M_get_Tp_allocator() const
 W std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_base()
 W std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::_Vector_impl()
 W std::_Vector_base<std::string, std::allocator<std::string> >::_Vector_impl::~_Vector_impl()
 W std::_Vector_base<std::string, std::allocator<std::string> >::~_Vector_base()
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_M_allocate(unsigned long)
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_M_deallocate(void (**)(), unsigned long)
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_M_get_Tp_allocator()
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_M_get_Tp_allocator() const
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_Vector_base()
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_Vector_impl::_Vector_impl()
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::_Vector_impl::~_Vector_impl()
 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
 W std::_Vector_base<void*, std::allocator<void*> >::_M_allocate(unsigned long)
 W std::_Vector_base<void*, std::allocator<void*> >::_M_deallocate(void**, unsigned long)
 W std::_Vector_base<void*, std::allocator<void*> >::_M_get_Tp_allocator()
 W std::_Vector_base<void*, std::allocator<void*> >::_M_get_Tp_allocator() const
 W std::_Vector_base<void*, std::allocator<void*> >::_Vector_base()
 W std::_Vector_base<void*, std::allocator<void*> >::_Vector_impl::_Vector_impl()
 W std::_Vector_base<void*, std::allocator<void*> >::_Vector_impl::~_Vector_impl()
 W std::_Vector_base<void*, std::allocator<void*> >::~_Vector_base()
 W std::__basic_future<unsigned int>::_Reset::~_Reset()
 W std::__basic_future<void>::_Reset::~_Reset()
 W std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>::_M_add_character_class(std::string const&, bool)
 W std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>::_M_apply(char, std::integral_constant<bool, false>) const
 W std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>::~_BracketMatcher()
 W std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>::_M_add_character_class(std::string const&, bool)
 W std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>::_M_apply(char, std::integral_constant<bool, false>) const
 W std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>::_M_make_range(char, char)
 W std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>::~_BracketMatcher()
 W std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>::_M_add_character_class(std::string const&, bool)
 W std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>::_M_apply(char, std::integral_constant<bool, false>) const
 W std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>::~_BracketMatcher()
 W std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>::_M_add_character_class(std::string const&, bool)
 W std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>::_M_apply(char, std::integral_constant<bool, false>) const
 W std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>::_M_make_range(char, char)
 W std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>::~_BracketMatcher()
 W std::__detail::_Compiler<std::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type)
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_alternative()
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_assertion()
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_atom()
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_bracket_expression()
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_cur_int_value(int)
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_disjunction()
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_pop()
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_quantifier()
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_quantifier()::{lambda()#1}::operator()() const
 W std::__detail::_Compiler<std::regex_traits<char> >::_M_try_char()
 W std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, std::regex_traits<char>, true>::_M_dfs(std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, std::regex_traits<char>, true>::_Match_mode, long)
 W std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, std::regex_traits<char>, true>::_M_lookahead(std::__detail::_State<std::regex_traits<char> >)
 W std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, std::regex_traits<char>, true>::_M_rep_once_more(std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, std::regex_traits<char>, true>::_Match_mode, long)
 W std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, std::regex_traits<char>, true>::_M_word_boundary() const
 W std::__detail::_Executor<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, std::regex_traits<char>, true>::~_Executor()
 W std::__detail::_Executor<char const*, std::allocator<std::sub_match<char const*> >, std::regex_traits<char>, true>::_M_dfs(std::__detail::_Executor<char const*, std::allocator<std::sub_match<char const*> >, std::regex_traits<char>, true>::_Match_mode, long)
 W std::__detail::_Executor<char const*, std::allocator<std::sub_match<char const*> >, std::regex_traits<char>, true>::_M_lookahead(std::__detail::_State<std::regex_traits<char> >)
 W std::__detail::_Executor<char const*, std::allocator<std::sub_match<char const*> >, std::regex_traits<char>, true>::_M_rep_once_more(std::__detail::_Executor<char const*, std::allocator<std::sub_match<char const*> >, std::regex_traits<char>, true>::_Match_mode, long)
 W std::__detail::_Executor<char const*, std::allocator<std::sub_match<char const*> >, std::regex_traits<char>, true>::_M_word_boundary() const
 W std::__detail::_Executor<char const*, std::allocator<std::sub_match<char const*> >, std::regex_traits<char>, true>::~_Executor()
 W std::__detail::_Map_base<ECardColor, std::pair<ECardColor const, int>, std::allocator<std::pair<ECardColor const, int> >, std::__detail::_Select1st, std::equal_to<ECardColor>, std::hash<ECardColor>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](ECardColor&&)
 W std::__detail::_Map_base<EDCGFaction, std::pair<EDCGFaction const, int>, std::allocator<std::pair<EDCGFaction const, int> >, std::__detail::_Select1st, std::equal_to<EDCGFaction>, std::hash<EDCGFaction>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](EDCGFaction const&)
 W std::__detail::_NFA<std::regex_traits<char> >::_M_eliminate_dummy()
 W std::__detail::_NFA<std::regex_traits<char> >::_M_insert_backref(unsigned long)
 W std::__detail::_NFA<std::regex_traits<char> >::_M_insert_dummy()
 W std::__detail::_NFA<std::regex_traits<char> >::_M_insert_matcher(std::function<bool (char)>)
 W std::__detail::_NFA<std::regex_traits<char> >::_M_insert_repeat(long, long, bool)
 W std::__detail::_NFA<std::regex_traits<char> >::_M_insert_state(std::__detail::_State<std::regex_traits<char> >)
 W std::__detail::_NFA<std::regex_traits<char> >::_M_insert_subexpr_begin()
 W std::__detail::_NFA<std::regex_traits<char> >::_M_insert_subexpr_end()
 W std::__detail::_RegexTranslator<std::regex_traits<char>, false, true>::_M_transform_impl(char, std::integral_constant<bool, true>) const
 W std::__detail::_RegexTranslator<std::regex_traits<char>, true, true>::_M_transform_impl(char, std::integral_constant<bool, true>) const
 W std::__detail::_Scanner<char>::_M_advance()
 W std::__detail::_Scanner<char>::_M_eat_class(char)
 W std::__detail::_Scanner<char>::_M_eat_escape_awk()
 W std::__detail::_Scanner<char>::_M_eat_escape_ecma()
 W std::__detail::_Scanner<char>::_M_eat_escape_posix()
 W std::__detail::_Scanner<char>::_M_scan_in_brace()
 W std::__detail::_Scanner<char>::_M_scan_in_bracket()
 W std::__detail::_Scanner<char>::_M_scan_normal()
 W std::__detail::_Scanner<char>::_Scanner(char const*, char const*, std::regex_constants::syntax_option_type, std::locale)
 W std::__detail::_State<std::regex_traits<char> >::_State(std::__detail::_State<std::regex_traits<char> >&&)
 W std::__detail::_StateSeq<std::regex_traits<char> >::_M_clone()
 W std::__future_base::_Async_state_common::_M_run_deferred()
 W std::__future_base::_Async_state_common::~_Async_state_common()
 W std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::~_Async_state_impl()
 W std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::~_Async_state_impl()
 W std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_M_run_deferred()
 W std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::~_Deferred_state()
 W std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_M_run_deferred()
 W std::__future_base::_Deferred_state<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::~_Deferred_state()
 W std::__future_base::_Result<unsigned int>::_M_destroy()
 W std::__future_base::_Result<unsigned int>::~_Result()
 W std::__future_base::_Result<void>::_M_destroy()
 W std::__future_base::_Result<void>::~_Result()
 W std::__future_base::_State_base::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&, bool&)
 W std::__lg(long)
 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<bool*>(bool*)
 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
 W std::allocator<char const*>::allocator()
 W std::allocator<char const*>::~allocator()
 W std::allocator<int>::allocator()
 W std::allocator<int>::allocator<std::_Rb_tree_node<int> >(std::allocator<std::_Rb_tree_node<int> > const&)
 W std::allocator<int>::~allocator()
 W std::allocator<std::_Rb_tree_node<int> >::allocator()
 W std::allocator<std::_Rb_tree_node<int> >::~allocator()
 W std::allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >::allocator()
 W std::allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >::~allocator()
 W std::allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::allocator()
 W std::allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::~allocator()
 W std::allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >::allocator()
 W std::allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >::~allocator()
 W std::allocator<std::_Rb_tree_node<std::string> >::allocator()
 W std::allocator<std::_Rb_tree_node<std::string> >::~allocator()
 W std::allocator<std::pair<char const* const, void (*)(std::string const&)> >::allocator()
 W std::allocator<std::pair<char const* const, void (*)(std::string const&)> >::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >(std::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> > const&)
 W std::allocator<std::pair<char const* const, void (*)(std::string const&)> >::~allocator()
 W std::allocator<std::pair<int const, std::string> >::allocator<std::_Rb_tree_node<std::pair<int const, std::string> > >(std::allocator<std::_Rb_tree_node<std::pair<int const, std::string> > > const&)
 W std::allocator<std::pair<int const, std::string> >::~allocator()
 W std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >(std::allocator<std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > > const&)
 W std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >::~allocator()
 W std::allocator<std::pair<std::string const, std::pair<void const*, int> > >::allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > >(std::allocator<std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > > > const&)
 W std::allocator<std::pair<std::string const, std::pair<void const*, int> > >::~allocator()
 W std::allocator<std::string const*>::allocator()
 W std::allocator<std::string const*>::~allocator()
 W std::allocator<std::string*>::allocator()
 W std::allocator<std::string*>::~allocator()
 W std::allocator<std::string>::allocator()
 W std::allocator<std::string>::allocator<std::_Rb_tree_node<std::string> >(std::allocator<std::_Rb_tree_node<std::string> > const&)
 W std::allocator<std::string>::allocator<std::tr1::__detail::_Hash_node<std::string, false> >(std::allocator<std::tr1::__detail::_Hash_node<std::string, false> > const&)
 W std::allocator<std::string>::~allocator()
 W std::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >::allocator<std::pair<char const* const, void (*)(std::string const&)> >(std::allocator<std::pair<char const* const, void (*)(std::string const&)> > const&)
 W std::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >::~allocator()
 W std::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> >(std::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false> > const&)
 W std::allocator<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>::~allocator()
 W std::allocator<std::tr1::__detail::_Hash_node<std::string, false> >::allocator<std::string>(std::allocator<std::string> const&)
 W std::allocator<std::tr1::__detail::_Hash_node<std::string, false> >::~allocator()
 W std::allocator<std::tr1::__detail::_Hash_node<std::string, false>*>::allocator<std::tr1::__detail::_Hash_node<std::string, false> >(std::allocator<std::tr1::__detail::_Hash_node<std::string, false> > const&)
 W std::allocator<std::tr1::__detail::_Hash_node<std::string, false>*>::~allocator()
 W std::allocator<void (*)()>::allocator()
 W std::allocator<void (*)()>::~allocator()
 W std::allocator<void*>::allocator()
 W std::allocator<void*>::~allocator()
 W std::back_insert_iterator<std::string> std::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::format<std::back_insert_iterator<std::string> >(std::back_insert_iterator<std::string>, char const*, char const*, std::regex_constants::match_flag_type) const
 W std::back_insert_iterator<std::string> std::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::format<std::back_insert_iterator<std::string> >(std::back_insert_iterator<std::string>, char const*, char const*, std::regex_constants::match_flag_type) const::{lambda(unsigned long)#1}::operator()(unsigned long) const
 W std::back_insert_iterator<std::string> std::match_results<char const*, std::allocator<std::sub_match<char const*> > >::format<std::back_insert_iterator<std::string> >(std::back_insert_iterator<std::string>, char const*, char const*, std::regex_constants::match_flag_type) const
 W std::back_insert_iterator<std::string> std::match_results<char const*, std::allocator<std::sub_match<char const*> > >::format<std::back_insert_iterator<std::string> >(std::back_insert_iterator<std::string>, char const*, char const*, std::regex_constants::match_flag_type) const::{lambda(unsigned long)#1}::operator()(unsigned long) const
 W std::back_insert_iterator<std::string> std::regex_replace<std::back_insert_iterator<std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, std::regex_traits<char>, char>(std::back_insert_iterator<std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, std::basic_regex<char, std::regex_traits<char> > const&, char const*, std::regex_constants::match_flag_type)
 W std::back_insert_iterator<std::string> std::regex_replace<std::back_insert_iterator<std::string>, char const*, std::regex_traits<char>, char>(std::back_insert_iterator<std::string>, char const*, char const*, std::basic_regex<char, std::regex_traits<char> > const&, char const*, std::regex_constants::match_flag_type)
 W std::back_insert_iterator<std::vector<std::string, std::allocator<std::string> > >::back_insert_iterator(std::vector<std::string, std::allocator<std::string> >&)
 W std::back_insert_iterator<std::vector<std::string, std::allocator<std::string> > >::operator*()
 W std::back_insert_iterator<std::vector<std::string, std::allocator<std::string> > >::operator++(int)
 W std::back_insert_iterator<std::vector<std::string, std::allocator<std::string> > >::operator=(std::string const&)
 W std::basic_regex<char, std::regex_traits<char> >::~basic_regex()
 W std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 W std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&)
 W std::char_traits<char>::compare(char const*, char const*, unsigned long)
 W std::char_traits<char>::length(char const*)
 W std::ctype<char>::do_narrow(char, char) const
 W std::ctype<char>::do_widen(char) const
 W std::deque<std::__detail::_StateSeq<std::regex_traits<char> >, std::allocator<std::__detail::_StateSeq<std::regex_traits<char> > > >::push_back(std::__detail::_StateSeq<std::regex_traits<char> > const&)
 W std::equal_to<std::string>::operator()(std::string const&, std::string const&) const
 W std::exception::exception()
 W std::function<bool (char)>::function(std::function<bool (char)> const&)
 W std::function<bool (char)>::function<std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>, void, void>(std::__detail::_BracketMatcher<std::regex_traits<char>, false, false>)
 W std::function<bool (char)>::function<std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>, void, void>(std::__detail::_BracketMatcher<std::regex_traits<char>, false, true>)
 W std::function<bool (char)>::function<std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>, void, void>(std::__detail::_BracketMatcher<std::regex_traits<char>, true, false>)
 W std::function<bool (char)>::function<std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>, void, void>(std::__detail::_BracketMatcher<std::regex_traits<char>, true, true>)
 W std::function<void ()>::function(std::function<void ()> const&)
 W std::function<void ()>::function<CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#2}, void, void>(CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#2})
 W std::function<void ()>::function<CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}, void, void>(CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3})
 W std::function<void ()>::function<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}, void, void>(CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3})
 W std::function<void ()>::function<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#4}, void, void>(CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#4})
 W std::function<void ()>::function<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#5}, void, void>(CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#5})
 W std::function<void ()>::function<CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#6}, void, void>(CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#6})
 W std::function<void ()>::function<void CDCGView::QueueClientStateMachineEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}, void, void>(void CDCGView::QueueClientStateMachineEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1})
 W std::function<void ()>::function<void CDCGView::QueueClientStateMachineEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}, void, void>(void CDCGView::QueueClientStateMachineEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1})
 W std::function<void ()>::operator=(std::function<void ()>&&)
 W std::function<void ()>::~function()
 W std::function<void (float const*)>::function(std::function<void (float const*)> const&)
 W std::future<std::result_of<void (Etc::Image::*(Etc::Image* const, int&, unsigned int&))(unsigned int, unsigned int)>::type> std::async<void (Etc::Image::*)(unsigned int, unsigned int), Etc::Image* const, int&, unsigned int&>(std::launch, void (Etc::Image::*&&)(unsigned int, unsigned int), Etc::Image* const&&, int&, unsigned int&)
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int*, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > >(int*, int*, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >)
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >)
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > std::__copy_move_a<false, int*, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > >(int*, int*, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >)
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >)
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >::insert_iterator(std::set<int, std::less<int>, std::allocator<int> >&, std::_Rb_tree_const_iterator<int>)
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >::operator*()
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >::operator++()
 W std::insert_iterator<std::set<int, std::less<int>, std::allocator<int> > >::operator=(int const&)
 W std::insert_iterator<std::vector<int, std::allocator<int> > > std::__copy_move<false, false, std::bidirectional_iterator_tag>::__copy_m<std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > > >(std::_Rb_tree_const_iterator<int>, std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > >)
 W std::insert_iterator<std::vector<int, std::allocator<int> > > std::__copy_move_a2<false, std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > > >(std::_Rb_tree_const_iterator<int>, std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > >)
 W std::insert_iterator<std::vector<int, std::allocator<int> > > std::__copy_move_a<false, std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > > >(std::_Rb_tree_const_iterator<int>, std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > >)
 W std::insert_iterator<std::vector<int, std::allocator<int> > > std::copy<std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > > >(std::_Rb_tree_const_iterator<int>, std::_Rb_tree_const_iterator<int>, std::insert_iterator<std::vector<int, std::allocator<int> > >)
 W std::insert_iterator<std::vector<int, std::allocator<int> > >::insert_iterator(std::vector<int, std::allocator<int> >&, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 W std::insert_iterator<std::vector<int, std::allocator<int> > >::operator*()
 W std::insert_iterator<std::vector<int, std::allocator<int> > >::operator++()
 W std::insert_iterator<std::vector<int, std::allocator<int> > >::operator=(int const&)
 W std::ios_base::flags() const
 W std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
 W std::ios_base::unsetf(std::_Ios_Fmtflags)
 W std::ios_base::width(long)
 W std::iterator<std::output_iterator_tag, void, void, void, void>::iterator()
 W std::iterator<std::random_access_iterator_tag, char, long, char const*, char const&>::iterator()
 W std::iterator<std::random_access_iterator_tag, std::string const, long, std::string const*, std::string const&>::iterator()
 W std::iterator<std::random_access_iterator_tag, std::string, long, std::string*, std::string&>::iterator()
 W std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
 W std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
 W std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
 W std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
 W std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
 W std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
 W std::iterator_traits<std::reverse_iterator<char const*> >::iterator_category std::__iterator_category<std::reverse_iterator<char const*> >(std::reverse_iterator<char const*> const&)
 W std::iterator_traits<unsigned long const*>::difference_type std::__distance<unsigned long const*>(unsigned long const*, unsigned long const*, std::random_access_iterator_tag)
 W std::iterator_traits<unsigned long const*>::difference_type std::distance<unsigned long const*>(unsigned long const*, unsigned long const*)
 W std::iterator_traits<unsigned long const*>::iterator_category std::__iterator_category<unsigned long const*>(unsigned long const* const&)
 W std::less<int>::operator()(int const&, int const&) const
 W std::less<std::pair<std::string, int> >::operator()(std::pair<std::string, int> const&, std::pair<std::string, int> const&) const
 W std::less<std::string>::operator()(std::string const&, std::string const&) const
 W std::map<ActionResult::Component, int, std::less<ActionResult::Component>, std::allocator<std::pair<ActionResult::Component const, int> > >::operator[](ActionResult::Component const&)
 W std::map<ActionResult::Component, int, std::less<ActionResult::Component>, std::allocator<std::pair<ActionResult::Component const, int> > >::~map()
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::end()
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::find(int const&)
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&)
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::key_comp() const
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::lower_bound(int const&)
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::map()
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::operator[](int const&)
 W std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::~map()
 W std::map<std::pair<std::string, int>, std::pair<void const*, int>, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::end()
 W std::map<std::pair<std::string, int>, std::pair<void const*, int>, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::end() const
 W std::map<std::pair<std::string, int>, std::pair<void const*, int>, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::find(std::pair<std::string, int> const&) const
 W std::map<std::pair<std::string, int>, std::pair<void const*, int>, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::insert(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 W std::map<std::pair<std::string, int>, std::pair<void const*, int>, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::lower_bound(std::pair<std::string, int> const&)
 W std::map<std::pair<std::string, int>, std::pair<void const*, int>, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::map()
 W std::map<std::pair<std::string, int>, std::pair<void const*, int>, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::~map()
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::begin()
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::end()
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::end() const
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::find(std::string const&) const
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::insert(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >, std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::insert(std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::map()
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::upper_bound(std::string const&)
 W std::map<std::string, std::pair<void const*, int>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::~map()
 W std::map<unsigned long long, int, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, int> > >::operator[](unsigned long long const&)
 W std::map<unsigned long long, int, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, int> > >::~map()
 W std::noshowbase(std::ios_base&)
 W std::numeric_limits<double>::infinity()
 W std::numeric_limits<double>::quiet_NaN()
 W std::numeric_limits<float>::infinity()
 W std::numeric_limits<float>::max()
 W std::numeric_limits<float>::quiet_NaN()
 W std::numeric_limits<int>::max()
 W std::numeric_limits<int>::min()
 W std::numeric_limits<long>::max()
 W std::numeric_limits<long>::min()
 W std::numeric_limits<unsigned int>::max()
 W std::numeric_limits<unsigned long>::max()
 W std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
 W std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 W std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
 W std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
 W std::operator~(std::_Ios_Fmtflags)
 W std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit>* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit> const*, std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit>*>(std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit> const*, std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit> const*, std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit>*)
 W std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit>* std::__uninitialized_copy<false>::__uninit_copy<std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit> const*, std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit>*>(std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit> const*, std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit> const*, std::pair<StateBuilder::CombatUnit, StateBuilder::CombatUnit>*)
 W std::pair<bool, int> std::make_pair<bool, int>(bool, int)
 W std::pair<bool, int>::pair(bool const&, int const&)
 W std::pair<bool, unsigned char const*> std::make_pair<bool, unsigned char const*>(bool, unsigned char const*)
 W std::pair<bool, unsigned char const*>::pair(bool const&, unsigned char const* const&)
 W std::pair<bool, unsigned long> std::make_pair<bool, unsigned long>(bool, unsigned long)
 W std::pair<bool, unsigned long>::pair(bool const&, unsigned long const&)
 W std::pair<bool, unsigned long>::pair<bool, int>(std::pair<bool, int> const&)
 W std::pair<char const* const, void (*)(std::string const&)>* std::__addressof<std::pair<char const* const, void (*)(std::string const&)> >(std::pair<char const* const, void (*)(std::string const&)>&)
 W std::pair<char const* const, void (*)(std::string const&)>::pair(char const* const&, void (* const&)(std::string const&))
 W std::pair<char const* const, void (*)(std::string const&)>::~pair()
 W std::pair<char*, bool> std::make_pair<char*, bool>(char*, bool)
 W std::pair<char*, bool>::pair(char* const&, bool const&)
 W std::pair<int const, std::string>* std::__addressof<std::pair<int const, std::string> >(std::pair<int const, std::string>&)
 W std::pair<int const, std::string>::pair(int const&, std::string const&)
 W std::pair<int const, std::string>::pair(std::pair<int const, std::string> const&)
 W std::pair<int const, std::string>::~pair()
 W std::pair<int, bool> std::make_pair<int, bool>(int, bool)
 W std::pair<int, bool>::pair(int const&, bool const&)
 W std::pair<int, int> std::make_pair<int, int>(int, int)
 W std::pair<int, int>::pair(int const&, int const&)
 W std::pair<std::_Rb_tree_const_iterator<int>, bool>::pair(std::_Rb_tree_const_iterator<int> const&, bool const&)
 W std::pair<std::_Rb_tree_const_iterator<std::string>, bool>::pair(std::_Rb_tree_const_iterator<std::string> const&, bool const&)
 W std::pair<std::_Rb_tree_iterator<int>, bool>::pair(std::_Rb_tree_iterator<int> const&, bool const&)
 W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::string> >, bool>::pair(std::_Rb_tree_iterator<std::pair<int const, std::string> > const&, bool const&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, bool>::pair(std::_Rb_tree_iterator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > const&, bool const&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >, bool>::pair(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > > const&, bool const&)
 W std::pair<std::_Rb_tree_iterator<std::string>, bool>::pair(std::_Rb_tree_iterator<std::string> const&, bool const&)
 W std::pair<std::__detail::_Node_iterator<char const*, true, false>, bool> std::_Hashtable<char const*, char const*, std::allocator<char const*>, std::__detail::_Identity, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_emplace<char const (&) [44]>(std::integral_constant<bool, true>, char const (&) [44])
 W std::pair<std::__detail::_Node_iterator<std::pair<float const, int>, false, false>, bool> std::_Hashtable<float, std::pair<float const, int>, std::allocator<std::pair<float const, int> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<float, int> >(std::integral_constant<bool, true>, std::pair<float, int>&&)
 W std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const* std::__addressof<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const>(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 W std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >* std::__addressof<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >&)
 W std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >::pair(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 W std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >::pair(std::pair<std::string, int> const&, std::pair<void const*, int> const&)
 W std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >::~pair()
 W std::pair<std::string const, std::pair<void const*, int> > const* std::__addressof<std::pair<std::string const, std::pair<void const*, int> > const>(std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::pair<std::string const, std::pair<void const*, int> >* std::__addressof<std::pair<std::string const, std::pair<void const*, int> > >(std::pair<std::string const, std::pair<void const*, int> >&)
 W std::pair<std::string const, std::pair<void const*, int> >::pair(std::pair<std::string const, std::pair<void const*, int> > const&)
 W std::pair<std::string const, std::pair<void const*, int> >::pair(std::string const&, std::pair<void const*, int> const&)
 W std::pair<std::string const, std::pair<void const*, int> >::~pair()
 W std::pair<std::string, int> std::make_pair<std::string, int>(std::string, int)
 W std::pair<std::string, int>::pair(std::pair<std::string, int> const&)
 W std::pair<std::string, int>::pair(std::string const&, int const&)
 W std::pair<std::string, int>::~pair()
 W std::pair<std::string, std::string>::~pair()
 W std::pair<std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false>, bool> std::make_pair<std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false>, bool>(std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false>, bool)
 W std::pair<std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false>, bool>::pair(std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false> const&, bool const&)
 W std::pair<std::tr1::__detail::_Hashtable_iterator<std::string, true, false>, bool> std::make_pair<std::tr1::__detail::_Hashtable_iterator<std::string, true, false>, bool>(std::tr1::__detail::_Hashtable_iterator<std::string, true, false>, bool)
 W std::pair<std::tr1::__detail::_Hashtable_iterator<std::string, true, false>, bool>::pair(std::tr1::__detail::_Hashtable_iterator<std::string, true, false> const&, bool const&)
 W std::pair<unsigned int, bool> std::make_pair<unsigned int, bool>(unsigned int, bool)
 W std::pair<unsigned int, bool>::pair(unsigned int const&, bool const&)
 W std::pair<unsigned long, bool> std::make_pair<unsigned long, bool>(unsigned long, bool)
 W std::pair<unsigned long, bool>::pair(unsigned long const&, bool const&)
 W std::pair<unsigned long, bool>::pair<int, bool>(std::pair<int, bool> const&)
 W std::pair<void const*, char const*>::pair(void const* const&, char const* const&)
 W std::pair<void const*, int> std::make_pair<void const*, int>(void const*, int)
 W std::pair<void const*, int>::pair()
 W std::pair<void const*, int>::pair(void const* const&, int const&)
 W std::regex_iterator<__gnu_cxx::__normal_iterator<char const*, std::string>, char, std::regex_traits<char> >::operator++()
 W std::regex_iterator<__gnu_cxx::__normal_iterator<char const*, std::string>, char, std::regex_traits<char> >::operator==(std::regex_iterator<__gnu_cxx::__normal_iterator<char const*, std::string>, char, std::regex_traits<char> > const&) const
 W std::regex_iterator<char const*, char, std::regex_traits<char> >::operator++()
 W std::regex_iterator<char const*, char, std::regex_traits<char> >::operator==(std::regex_iterator<char const*, char, std::regex_traits<char> > const&) const
 W std::regex_traits<char>::_RegexMask std::regex_traits<char>::lookup_classname<char const*>(char const*, char const*, bool) const
 W std::regex_traits<char>::isctype(char, std::regex_traits<char>::_RegexMask) const
 W std::regex_traits<char>::value(char, int) const
 W std::reverse_iterator<char const*> std::__find<std::reverse_iterator<char const*>, char>(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, char const&, std::random_access_iterator_tag)
 W std::reverse_iterator<char const*> std::find<std::reverse_iterator<char const*>, char>(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, char const&)
 W std::reverse_iterator<char const*> std::search<std::reverse_iterator<char const*>, std::reverse_iterator<char const*> >(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, std::reverse_iterator<char const*>)
 W std::reverse_iterator<char const*>::base() const
 W std::reverse_iterator<char const*>::difference_type std::operator-<char const*>(std::reverse_iterator<char const*> const&, std::reverse_iterator<char const*> const&)
 W std::reverse_iterator<char const*>::operator*() const
 W std::reverse_iterator<char const*>::operator++()
 W std::reverse_iterator<char const*>::reverse_iterator()
 W std::reverse_iterator<char const*>::reverse_iterator(char const*)
 W std::reverse_iterator<char const*>::reverse_iterator(std::reverse_iterator<char const*> const&)
 W std::set<int, std::less<int>, std::allocator<int> >::begin() const
 W std::set<int, std::less<int>, std::allocator<int> >::count(int const&) const
 W std::set<int, std::less<int>, std::allocator<int> >::end() const
 W std::set<int, std::less<int>, std::allocator<int> >::find(int const&)
 W std::set<int, std::less<int>, std::allocator<int> >::insert(int const&)
 W std::set<int, std::less<int>, std::allocator<int> >::insert(std::_Rb_tree_const_iterator<int>, int const&)
 W std::set<int, std::less<int>, std::allocator<int> >::set()
 W std::set<int, std::less<int>, std::allocator<int> >::~set()
 W std::set<std::string, std::less<std::string>, std::allocator<std::string> >::clear()
 W std::set<std::string, std::less<std::string>, std::allocator<std::string> >::end() const
 W std::set<std::string, std::less<std::string>, std::allocator<std::string> >::find(std::string const&)
 W std::set<std::string, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const
 W std::set<std::string, std::less<std::string>, std::allocator<std::string> >::insert(std::string const&)
 W std::set<std::string, std::less<std::string>, std::allocator<std::string> >::set()
 W std::set<std::string, std::less<std::string>, std::allocator<std::string> >::~set()
 W std::setw(int)
 W std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
 W std::string const** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::string const*>(std::string const* const*, std::string const* const*, std::string const**)
 W std::string const** std::__copy_move_a2<false, std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string const** std::__copy_move_a<false, std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string const** std::__copy_move_backward<false, true, std::random_access_iterator_tag>::__copy_move_b<std::string const*>(std::string const* const*, std::string const* const*, std::string const**)
 W std::string const** std::__copy_move_backward_a2<false, std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string const** std::__copy_move_backward_a<false, std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string const** std::__uninitialized_copy<true>::__uninit_copy<std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string const** std::__uninitialized_copy_a<std::string const**, std::string const**, std::string const*>(std::string const**, std::string const**, std::string const**, std::allocator<std::string const*>&)
 W std::string const** std::__uninitialized_move_a<std::string const**, std::string const**, std::allocator<std::string const*> >(std::string const**, std::string const**, std::string const**, std::allocator<std::string const*>&)
 W std::string const** std::copy<std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string const** std::copy_backward<std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string const** std::uninitialized_copy<std::string const**, std::string const**>(std::string const**, std::string const**, std::string const**)
 W std::string std::regex_traits<char>::lookup_collatename<char const*>(char const*, char const*) const
 W std::string std::regex_traits<char>::transform<__gnu_cxx::__normal_iterator<char const*, std::string> >(__gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>) const
 W std::string std::regex_traits<char>::transform<char*>(char*, char*) const
 W std::string std::regex_traits<char>::transform_primary<char const*>(char const*, char const*) const
 W std::string& std::string::append<__gnu_cxx::__normal_iterator<char const*, std::string> >(__gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>)
 W std::string& std::string::append<char const*>(char const*, char const*)
 W std::string* std::__addressof<std::string>(std::string&)
 W std::string* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<std::string*, std::string*>(std::string*, std::string*, std::string*)
 W std::string* std::__copy_move_backward_a2<false, std::string*, std::string*>(std::string*, std::string*, std::string*)
 W std::string* std::__copy_move_backward_a<false, std::string*, std::string*>(std::string*, std::string*, std::string*)
 W std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string*, std::string*>(std::string*, std::string*, std::string*)
 W std::string* std::__uninitialized_copy_a<std::string*, std::string*, std::string>(std::string*, std::string*, std::string*, std::allocator<std::string>&)
 W std::string* std::__uninitialized_move_a<std::string*, std::string*, std::allocator<std::string> >(std::string*, std::string*, std::string*, std::allocator<std::string>&)
 W std::string* std::copy_backward<std::string*, std::string*>(std::string*, std::string*, std::string*)
 W std::string* std::uninitialized_copy<std::string*, std::string*>(std::string*, std::string*, std::string*)
 W std::string** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::string*>(std::string* const*, std::string* const*, std::string**)
 W std::string** std::__copy_move_a2<false, std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::string** std::__copy_move_a<false, std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::string** std::__copy_move_backward<false, true, std::random_access_iterator_tag>::__copy_move_b<std::string*>(std::string* const*, std::string* const*, std::string**)
 W std::string** std::__copy_move_backward_a2<false, std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::string** std::__copy_move_backward_a<false, std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::string** std::__uninitialized_copy<true>::__uninit_copy<std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::string** std::__uninitialized_copy_a<std::string**, std::string**, std::string*>(std::string**, std::string**, std::string**, std::allocator<std::string*>&)
 W std::string** std::__uninitialized_move_a<std::string**, std::string**, std::allocator<std::string*> >(std::string**, std::string**, std::string**, std::allocator<std::string*>&)
 W std::string** std::copy<std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::string** std::copy_backward<std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::string** std::fill_n<std::string**, unsigned long, std::string*>(std::string**, unsigned long, std::string* const&)
 W std::string** std::uninitialized_copy<std::string**, std::string**>(std::string**, std::string**, std::string**)
 W std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >::_M_run()
 W std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>, unsigned int>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<unsigned int (Etc::Image::*)(unsigned int, unsigned int, unsigned int)> (Etc::Image*, unsigned int, int, unsigned int)>&&)::{lambda()#1} ()> >::~_Impl()
 W std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >::_M_run()
 W std::thread::_Impl<std::_Bind_simple<std::__future_base::_Async_state_impl<std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>, void>::_Async_state_impl(std::_Bind_simple<std::_Mem_fn<void (Etc::Image::*)(unsigned int, unsigned int)> (Etc::Image*, int, unsigned int)>&&)::{lambda()#1} ()> >::~_Impl()
 W std::thread::_Impl_base::~_Impl_base()
 W std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false>::_Hashtable_iterator(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**)
 W std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false>::_Hashtable_iterator(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**)
 W std::tr1::__detail::_Hashtable_iterator<std::pair<char const* const, void (*)(std::string const&)>, false, false>::operator->() const
 W std::tr1::__detail::_Hashtable_iterator<std::string, true, false>::_Hashtable_iterator(std::tr1::__detail::_Hash_node<std::string, false>**)
 W std::tr1::__detail::_Hashtable_iterator<std::string, true, false>::_Hashtable_iterator(std::tr1::__detail::_Hash_node<std::string, false>*, std::tr1::__detail::_Hash_node<std::string, false>**)
 W std::tr1::__detail::_Hashtable_iterator_base<std::pair<char const* const, void (*)(std::string const&)>, false>::_Hashtable_iterator_base(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**)
 W std::tr1::__detail::_Hashtable_iterator_base<std::string, false>::_Hashtable_iterator_base(std::tr1::__detail::_Hash_node<std::string, false>*, std::tr1::__detail::_Hash_node<std::string, false>**)
 W std::tr1::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
 W std::tr1::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
 W std::tr1::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
 W std::tr1::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
 W std::tr1::hash<int>::operator()(int) const
 W std::tr1::hash<long>::operator()(long) const
 W std::tr1::hash<unsigned int>::operator()(unsigned int) const
 W std::tr1::hash<unsigned long>::operator()(unsigned long) const
 W std::unique_lock<std::mutex>::unlock()
 W std::vector<ECardColor, std::allocator<ECardColor> >::~vector()
 W std::vector<char const*, std::allocator<char const*> >::_M_check_len(unsigned long, char const*) const
 W std::vector<char const*, std::allocator<char const*> >::_M_erase_at_end(char const**)
 W std::vector<char const*, std::allocator<char const*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, unsigned long, char const* const&)
 W std::vector<char const*, std::allocator<char const*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const* const&)
 W std::vector<char const*, std::allocator<char const*> >::begin()
 W std::vector<char const*, std::allocator<char const*> >::clear()
 W std::vector<char const*, std::allocator<char const*> >::end()
 W std::vector<char const*, std::allocator<char const*> >::insert(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, unsigned long, char const* const&)
 W std::vector<char const*, std::allocator<char const*> >::max_size() const
 W std::vector<char const*, std::allocator<char const*> >::operator[](unsigned long)
 W std::vector<char const*, std::allocator<char const*> >::push_back(char const* const&)
 W std::vector<char const*, std::allocator<char const*> >::resize(unsigned long, char const*)
 W std::vector<char const*, std::allocator<char const*> >::size() const
 W std::vector<char const*, std::allocator<char const*> >::vector()
 W std::vector<char const*, std::allocator<char const*> >::~vector()
 W std::vector<char, std::allocator<char> >::_M_erase(__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >)
 W std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const
 W std::vector<int, std::allocator<int> >::_M_erase_at_end(int*)
 W std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 W std::vector<int, std::allocator<int> >::begin()
 W std::vector<int, std::allocator<int> >::begin() const
 W std::vector<int, std::allocator<int> >::clear()
 W std::vector<int, std::allocator<int> >::end()
 W std::vector<int, std::allocator<int> >::end() const
 W std::vector<int, std::allocator<int> >::insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 W std::vector<int, std::allocator<int> >::max_size() const
 W std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
 W std::vector<int, std::allocator<int> >::operator[](unsigned long)
 W std::vector<int, std::allocator<int> >::push_back(int const&)
 W std::vector<int, std::allocator<int> >::size() const
 W std::vector<int, std::allocator<int> >::vector()
 W std::vector<int, std::allocator<int> >::~vector()
 W std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_check_len(unsigned long, char const*) const
 W std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_erase(__gnu_cxx::__normal_iterator<std::function<void ()>*, std::vector<std::function<void ()>, std::allocator<std::function<void ()> > > >)
 W std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >::~vector()
 W std::vector<std::pair<float, std::function<void ()> >, std::allocator<std::pair<float, std::function<void ()> > > >::~vector()
 W std::vector<std::pair<std::string, std::string>, std::allocator<std::pair<std::string, std::string> > >::~vector()
 W std::vector<std::string const*, std::allocator<std::string const*> >::_M_check_len(unsigned long, char const*) const
 W std::vector<std::string const*, std::allocator<std::string const*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string const**, std::vector<std::string const*, std::allocator<std::string const*> > >, std::string const* const&)
 W std::vector<std::string const*, std::allocator<std::string const*> >::begin()
 W std::vector<std::string const*, std::allocator<std::string const*> >::end()
 W std::vector<std::string const*, std::allocator<std::string const*> >::max_size() const
 W std::vector<std::string const*, std::allocator<std::string const*> >::operator[](unsigned long)
 W std::vector<std::string const*, std::allocator<std::string const*> >::push_back(std::string const* const&)
 W std::vector<std::string const*, std::allocator<std::string const*> >::size() const
 W std::vector<std::string const*, std::allocator<std::string const*> >::vector()
 W std::vector<std::string const*, std::allocator<std::string const*> >::~vector()
 W std::vector<std::string*, std::allocator<std::string*> >::_M_check_len(unsigned long, char const*) const
 W std::vector<std::string*, std::allocator<std::string*> >::_M_erase_at_end(std::string**)
 W std::vector<std::string*, std::allocator<std::string*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string* const&)
 W std::vector<std::string*, std::allocator<std::string*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::string* const&)
 W std::vector<std::string*, std::allocator<std::string*> >::begin()
 W std::vector<std::string*, std::allocator<std::string*> >::clear()
 W std::vector<std::string*, std::allocator<std::string*> >::end()
 W std::vector<std::string*, std::allocator<std::string*> >::insert(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string* const&)
 W std::vector<std::string*, std::allocator<std::string*> >::max_size() const
 W std::vector<std::string*, std::allocator<std::string*> >::push_back(std::string* const&)
 W std::vector<std::string*, std::allocator<std::string*> >::resize(unsigned long, std::string*)
 W std::vector<std::string*, std::allocator<std::string*> >::size() const
 W std::vector<std::string*, std::allocator<std::string*> >::vector()
 W std::vector<std::string*, std::allocator<std::string*> >::~vector()
 W std::vector<std::string, std::allocator<std::string> >::_M_check_len(unsigned long, char const*) const
 W std::vector<std::string, std::allocator<std::string> >::_M_erase_at_end(std::string*)
 W std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
 W std::vector<std::string, std::allocator<std::string> >::begin()
 W std::vector<std::string, std::allocator<std::string> >::begin() const
 W std::vector<std::string, std::allocator<std::string> >::capacity() const
 W std::vector<std::string, std::allocator<std::string> >::clear()
 W std::vector<std::string, std::allocator<std::string> >::empty() const
 W std::vector<std::string, std::allocator<std::string> >::end()
 W std::vector<std::string, std::allocator<std::string> >::end() const
 W std::vector<std::string, std::allocator<std::string> >::max_size() const
 W std::vector<std::string, std::allocator<std::string> >::operator[](unsigned long)
 W std::vector<std::string, std::allocator<std::string> >::operator[](unsigned long) const
 W std::vector<std::string, std::allocator<std::string> >::pop_back()
 W std::vector<std::string, std::allocator<std::string> >::push_back(std::string const&)
 W std::vector<std::string, std::allocator<std::string> >::size() const
 W std::vector<std::string, std::allocator<std::string> >::vector()
 W std::vector<std::string, std::allocator<std::string> >::vector(std::vector<std::string, std::allocator<std::string> > const&)
 W std::vector<std::string, std::allocator<std::string> >::~vector()
 W std::vector<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> >, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::_M_default_append(unsigned long)
 W std::vector<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> >, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::operator=(std::vector<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> >, std::allocator<std::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > > const&)
 W std::vector<std::sub_match<char const*>, std::allocator<std::sub_match<char const*> > >::_M_default_append(unsigned long)
 W std::vector<std::sub_match<char const*>, std::allocator<std::sub_match<char const*> > >::operator=(std::vector<std::sub_match<char const*>, std::allocator<std::sub_match<char const*> > > const&)
 W std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::~vector()
 W std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_append(unsigned long)
 W std::vector<unsigned char, std::allocator<unsigned char> >::operator=(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 W std::vector<unsigned char, std::allocator<unsigned char> >::vector(unsigned long, std::allocator<unsigned char> const&)
 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
 W std::vector<unsigned int, std::allocator<unsigned int> >::~vector()
 W std::vector<void (*)(), std::allocator<void (*)()> >::_M_check_len(unsigned long, char const*) const
 W std::vector<void (*)(), std::allocator<void (*)()> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
 W std::vector<void (*)(), std::allocator<void (*)()> >::begin()
 W std::vector<void (*)(), std::allocator<void (*)()> >::end()
 W std::vector<void (*)(), std::allocator<void (*)()> >::max_size() const
 W std::vector<void (*)(), std::allocator<void (*)()> >::operator[](unsigned long)
 W std::vector<void (*)(), std::allocator<void (*)()> >::push_back(void (* const&)())
 W std::vector<void (*)(), std::allocator<void (*)()> >::size() const
 W std::vector<void (*)(), std::allocator<void (*)()> >::vector()
 W std::vector<void (*)(), std::allocator<void (*)()> >::~vector()
 W std::vector<void*, std::allocator<void*> >::_M_check_len(unsigned long, char const*) const
 W std::vector<void*, std::allocator<void*> >::_M_erase_at_end(void**)
 W std::vector<void*, std::allocator<void*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void* const&)
 W std::vector<void*, std::allocator<void*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)
 W std::vector<void*, std::allocator<void*> >::begin()
 W std::vector<void*, std::allocator<void*> >::end()
 W std::vector<void*, std::allocator<void*> >::insert(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void* const&)
 W std::vector<void*, std::allocator<void*> >::max_size() const
 W std::vector<void*, std::allocator<void*> >::operator[](unsigned long)
 W std::vector<void*, std::allocator<void*> >::push_back(void* const&)
 W std::vector<void*, std::allocator<void*> >::resize(unsigned long, void*)
 W std::vector<void*, std::allocator<void*> >::size() const
 W std::vector<void*, std::allocator<void*> >::vector()
 W std::vector<void*, std::allocator<void*> >::~vector()
 W std::vector<wchar_t, std::allocator<wchar_t> >::reserve(unsigned long)
 W unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 W unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
 W unsigned long const* std::lower_bound<unsigned long const*, float>(unsigned long const*, unsigned long const*, float const&)
 W unsigned long const* std::lower_bound<unsigned long const*, unsigned long>(unsigned long const*, unsigned long const*, unsigned long const&)
 W void (**std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<void (*)()>(void (* const*)(), void (* const*)(), void (**)()))()
 W void (**std::__copy_move_a2<false, void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void (**std::__copy_move_a<false, void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void (**std::__copy_move_backward<false, true, std::random_access_iterator_tag>::__copy_move_b<void (*)()>(void (* const*)(), void (* const*)(), void (**)()))()
 W void (**std::__copy_move_backward_a2<false, void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void (**std::__copy_move_backward_a<false, void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void (**std::__uninitialized_copy<true>::__uninit_copy<void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void (**std::__uninitialized_copy_a<void (**)(), void (**)(), void (*)()>(void (**)(), void (**)(), void (**)(), std::allocator<void (*)()>&))()
 W void (**std::__uninitialized_move_a<void (**)(), void (**)(), std::allocator<void (*)()> >(void (**)(), void (**)(), void (**)(), std::allocator<void (*)()>&))()
 W void (**std::copy<void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void (**std::copy_backward<void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void (**std::uninitialized_copy<void (**)(), void (**)()>(void (**)(), void (**)(), void (**)()))()
 W void std::_Construct<std::string, std::string>(std::string*, std::string const&)
 W void std::_Destroy<char const**, char const*>(char const**, char const**, std::allocator<char const*>&)
 W void std::_Destroy<char const**>(char const**, char const**)
 W void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 W void std::_Destroy<int*>(int*, int*)
 W void std::_Destroy<std::string const**, std::string const*>(std::string const**, std::string const**, std::allocator<std::string const*>&)
 W void std::_Destroy<std::string const**>(std::string const**, std::string const**)
 W void std::_Destroy<std::string**, std::string*>(std::string**, std::string**, std::allocator<std::string*>&)
 W void std::_Destroy<std::string**>(std::string**, std::string**)
 W void std::_Destroy<std::string*, std::string>(std::string*, std::string*, std::allocator<std::string>&)
 W void std::_Destroy<std::string*>(std::string*, std::string*)
 W void std::_Destroy<std::string>(std::string*)
 W void std::_Destroy<void (**)(), void (*)()>(void (**)(), void (**)(), std::allocator<void (*)()>&)
 W void std::_Destroy<void (**)()>(void (**)(), void (**)())
 W void std::_Destroy<void**, void*>(void**, void**, std::allocator<void*>&)
 W void std::_Destroy<void**>(void**, void**)
 W void std::_Destroy_aux<false>::__destroy<std::string*>(std::string*, std::string*)
 W void std::_Destroy_aux<true>::__destroy<char const**>(char const**, char const**)
 W void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
 W void std::_Destroy_aux<true>::__destroy<std::string const**>(std::string const**, std::string const**)
 W void std::_Destroy_aux<true>::__destroy<std::string**>(std::string**, std::string**)
 W void std::_Destroy_aux<true>::__destroy<void (**)()>(void (**)(), void (**)())
 W void std::_Destroy_aux<true>::__destroy<void**>(void**, void**)
 W void std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int*>(int*, int*)
 W void std::__advance<char const*, long>(char const*&, long, std::random_access_iterator_tag)
 W void std::__advance<unsigned long const*, long>(unsigned long const*&, long, std::random_access_iterator_tag)
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_ecma<false, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_ecma<false, true>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_ecma<true, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_ecma<true, true>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_posix<false, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_posix<false, true>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_posix<true, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_any_matcher_posix<true, true>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_bracket_matcher<false, false>(bool)
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_bracket_matcher<false, true>(bool)
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_bracket_matcher<true, false>(bool)
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_bracket_matcher<true, true>(bool)
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_char_matcher<false, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_char_matcher<false, true>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_char_matcher<true, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_char_matcher<true, true>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_character_class_matcher<false, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_character_class_matcher<false, true>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_character_class_matcher<true, false>()
 W void std::__detail::_Compiler<std::regex_traits<char> >::_M_insert_character_class_matcher<true, true>()
 W void std::__once_call_impl<std::_Bind_simple<std::_Mem_fn<void (std::__future_base::_State_base::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&, bool&)> (std::__future_base::_State_base*, std::reference_wrapper<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >, std::reference_wrapper<bool>)> >()
 W void std::__once_call_impl<std::_Bind_simple<std::_Mem_fn<void (std::thread::*)()> (std::reference_wrapper<std::thread>)> >()
 W void std::__uninitialized_fill_n<true>::__uninit_fill_n<char const**, unsigned long, char const*>(char const**, unsigned long, char const* const&)
 W void std::__uninitialized_fill_n<true>::__uninit_fill_n<std::string**, unsigned long, std::string*>(std::string**, unsigned long, std::string* const&)
 W void std::__uninitialized_fill_n<true>::__uninit_fill_n<void**, unsigned long, void*>(void**, unsigned long, void* const&)
 W void std::__uninitialized_fill_n_a<char const**, unsigned long, char const*, char const*>(char const**, unsigned long, char const* const&, std::allocator<char const*>&)
 W void std::__uninitialized_fill_n_a<std::string**, unsigned long, std::string*, std::string*>(std::string**, unsigned long, std::string* const&, std::allocator<std::string*>&)
 W void std::__uninitialized_fill_n_a<void**, unsigned long, void*, void*>(void**, unsigned long, void* const&, std::allocator<void*>&)
 W void std::advance<char const*, long>(char const*&, long)
 W void std::advance<unsigned long const*, long>(unsigned long const*&, long)
 W void std::deque<long, std::allocator<long> >::_M_push_back_aux<long const&>(long const&)
 W void std::deque<std::__detail::_StateSeq<std::regex_traits<char> >, std::allocator<std::__detail::_StateSeq<std::regex_traits<char> > > >::_M_push_back_aux<std::__detail::_StateSeq<std::regex_traits<char> > >(std::__detail::_StateSeq<std::regex_traits<char> >&&)
 W void std::deque<std::__detail::_StateSeq<std::regex_traits<char> >, std::allocator<std::__detail::_StateSeq<std::regex_traits<char> > > >::emplace_back<std::__detail::_StateSeq<std::regex_traits<char> > >(std::__detail::_StateSeq<std::regex_traits<char> >&&)
 W void std::fill<char const**, char const*>(char const**, char const**, char const* const&)
 W void std::fill<std::string**, std::string*>(std::string**, std::string**, std::string* const&)
 W void std::fill<std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>*>(std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>**, std::tr1::__detail::_Hash_node<std::pair<char const* const, void (*)(std::string const&)>, false>* const&)
 W void std::fill<std::tr1::__detail::_Hash_node<std::string, false>**, std::tr1::__detail::_Hash_node<std::string, false>*>(std::tr1::__detail::_Hash_node<std::string, false>**, std::tr1::__detail::_Hash_node<std::string, false>**, std::tr1::__detail::_Hash_node<std::string, false>* const&)
 W void std::fill<void**, void*>(void**, void**, void* const&)
 W void std::set<int, std::less<int>, std::allocator<int> >::insert<int*>(int*, int*)
 W void std::swap<bool>(bool&, bool&)
 W void std::swap<double>(double&, double&)
 W void std::swap<float>(float&, float&)
 W void std::swap<int>(int&, int&)
 W void std::swap<long>(long&, long&)
 W void std::swap<std::_Rb_tree_node_base*>(std::_Rb_tree_node_base*&, std::_Rb_tree_node_base*&)
 W void std::swap<std::less<int> >(std::less<int>&, std::less<int>&)
 W void std::swap<std::string*>(std::string*&, std::string*&)
 W void std::swap<unsigned int>(unsigned int&, unsigned int&)
 W void std::swap<unsigned long>(unsigned long&, unsigned long&)
 W void std::swap<void*>(void*&, void*&)
 W void std::uninitialized_fill_n<char const**, unsigned long, char const*>(char const**, unsigned long, char const* const&)
 W void std::uninitialized_fill_n<std::string**, unsigned long, std::string*>(std::string**, unsigned long, std::string* const&)
 W void std::uninitialized_fill_n<void**, unsigned long, void*>(void**, unsigned long, void* const&)
 W void std::vector<char, std::allocator<char> >::emplace_back<char>(char&&)
 W void std::vector<int, std::allocator<int> >::_M_assign_aux<int const*>(int const*, int const*, std::forward_iterator_tag)
 W void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&)
 W void std::vector<int, std::allocator<int> >::emplace_back<int&>(int&)
 W void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 W void std::vector<std::__detail::_State<std::regex_traits<char> >, std::allocator<std::__detail::_State<std::regex_traits<char> > > >::_M_emplace_back_aux<std::__detail::_State<std::regex_traits<char> > >(std::__detail::_State<std::regex_traits<char> >&&)
 W void std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_emplace_back_aux<std::function<void ()> >(std::function<void ()>&&)
 W void std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_emplace_back_aux<void CDCGView::QueueClientStateMachineEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}>(void CDCGView::QueueClientStateMachineEvent<CardOwnerChange>(CardOwnerChange const&)::{lambda()#1}&&)
 W void std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_emplace_back_aux<void CDCGView::QueueClientStateMachineEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}>(void CDCGView::QueueClientStateMachineEvent<CardZoneChange>(CardZoneChange const&)::{lambda()#1}&&)
 W void std::vector<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<std::function<void ()> >(std::function<void ()>&&)
 W void std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > >::_M_emplace_back_aux<std::pair<char, char> >(std::pair<char, char>&&)
 W void std::vector<std::pair<char, char>, std::allocator<std::pair<char, char> > >::emplace_back<std::pair<char, char> >(std::pair<char, char>&&)
 W void std::vector<std::pair<float, int>, std::allocator<std::pair<float, int> > >::emplace_back<std::pair<float, int> >(std::pair<float, int>&&)
 W void std::vector<std::pair<float, std::function<void ()> >, std::allocator<std::pair<float, std::function<void ()> > > >::_M_emplace_back_aux<float const&, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}>(float const&, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}&&)
 W void std::vector<std::pair<float, std::function<void ()> >, std::allocator<std::pair<float, std::function<void ()> > > >::_M_emplace_back_aux<float, CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#2}>(float&&, CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#2}&&)
 W void std::vector<std::pair<float, std::function<void ()> >, std::allocator<std::pair<float, std::function<void ()> > > >::_M_emplace_back_aux<float, CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}>(float&&, CScript_HandofGod::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#3}&&)
 W void std::vector<std::pair<float, std::function<void ()> >, std::allocator<std::pair<float, std::function<void ()> > > >::_M_emplace_back_aux<float, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#4}>(float&&, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#4}&&)
 W void std::vector<std::pair<float, std::function<void ()> >, std::allocator<std::pair<float, std::function<void ()> > > >::_M_emplace_back_aux<float, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#5}>(float&&, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#5}&&)
 W void std::vector<std::pair<float, std::function<void ()> >, std::allocator<std::pair<float, std::function<void ()> > > >::_M_emplace_back_aux<float, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#6}>(float&&, CScript_ThunderGodsWrath::YieldingExecuteTraces(IDCGPerformanceScriptContext*) const::{lambda()#6}&&)
 W void std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >::emplace_back<std::pair<int, int> >(std::pair<int, int>&&)
 W void std::vector<std::pair<std::string, std::string>, std::allocator<std::pair<std::string, std::string> > >::_M_emplace_back_aux<std::pair<std::string, std::string> >(std::pair<std::string, std::string>&&)
 W void std::vector<std::pair<std::string, std::string>, std::allocator<std::pair<std::string, std::string> > >::emplace_back<std::pair<std::string, std::string> >(std::pair<std::string, std::string>&&)
 W void std::vector<std::regex_traits<char>::_RegexMask, std::allocator<std::regex_traits<char>::_RegexMask> >::_M_emplace_back_aux<std::regex_traits<char>::_RegexMask const&>(std::regex_traits<char>::_RegexMask const&)
 W void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<char const*&>(char const*&)
 W void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&)
 W void std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_M_emplace_back_aux<std::vector<unsigned long, std::allocator<unsigned long> > const&>(std::vector<unsigned long, std::allocator<unsigned long> > const&)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_assign_aux<unsigned char const*>(unsigned char const*, unsigned char const*, std::forward_iterator_tag)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_insert<__gnu_cxx::__normal_iterator<char const*, std::string> >(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, std::forward_iterator_tag)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_insert<__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > > >(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, std::forward_iterator_tag)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_insert<char*>(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, char*, char*, std::forward_iterator_tag)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_insert<unsigned char const*>(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char const*, unsigned char const*, std::forward_iterator_tag)
 W void std::vector<wchar_t, std::allocator<wchar_t> >::_M_emplace_back_aux<wchar_t>(wchar_t&&)
 W void std::vector<wchar_t, std::allocator<wchar_t> >::_M_range_insert<wchar_t const*>(__gnu_cxx::__normal_iterator<wchar_t*, std::vector<wchar_t, std::allocator<wchar_t> > >, wchar_t const*, wchar_t const*, std::forward_iterator_tag)
 W void std::vector<wchar_t, std::allocator<wchar_t> >::emplace_back<wchar_t>(wchar_t&&)
 W void** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<void*>(void* const*, void* const*, void**)
 W void** std::__copy_move_a2<false, void**, void**>(void**, void**, void**)
 W void** std::__copy_move_a<false, void**, void**>(void**, void**, void**)
 W void** std::__copy_move_backward<false, true, std::random_access_iterator_tag>::__copy_move_b<void*>(void* const*, void* const*, void**)
 W void** std::__copy_move_backward_a2<false, void**, void**>(void**, void**, void**)
 W void** std::__copy_move_backward_a<false, void**, void**>(void**, void**, void**)
 W void** std::__uninitialized_copy<true>::__uninit_copy<void**, void**>(void**, void**, void**)
 W void** std::__uninitialized_copy_a<void**, void**, void*>(void**, void**, void**, std::allocator<void*>&)
 W void** std::__uninitialized_move_a<void**, void**, std::allocator<void*> >(void**, void**, void**, std::allocator<void*>&)
 W void** std::copy<void**, void**>(void**, void**, void**)
 W void** std::copy_backward<void**, void**>(void**, void**, void**)
 W void** std::fill_n<void**, unsigned long, void*>(void**, unsigned long, void* const&)
 W void** std::uninitialized_copy<void**, void**>(void**, void**, void**)
 Warning
 _ITM_deregisterTMCloneTable
 _ITM_registerTMCloneTable
 _Jv_RegisterClasses
 _V_AppendSlash
 _V_ComposeFileName
 _V_DefaultExtension
 _V_ExtractFileExtension
 _V_ExtractFilePath
 _V_FileBase
 _V_FixupPathName
 _V_MakeAbsolutePath
 _V_SetExtension
 _V_StrSubst
 _V_StringAfterPrefix
 _V_StripExtension
 _V_StripLastDir
 _V_strcspn
 _V_strncat
 _V_strncmp
 _V_strncpy
 _V_strnicmp_fast
 _V_strnistr_fast
 _V_wcsncpy_bytes
 __assert_fail@@GLIBC_2.2.5
 __ctype_b_loc@@GLIBC_2.3
 __ctype_toupper_loc@@GLIBC_2.3
 __cxa_allocate_exception@@CXXABI_1.3
 __cxa_atexit@@GLIBC_2.2.5
 __cxa_bad_cast@@CXXABI_1.3
 __cxa_bad_typeid@@CXXABI_1.3
 __cxa_begin_catch@@CXXABI_1.3
 __cxa_call_unexpected@@CXXABI_1.3
 __cxa_end_catch@@CXXABI_1.3
 __cxa_finalize@@GLIBC_2.2.5
 __cxa_free_exception@@CXXABI_1.3
 __cxa_guard_abort@@CXXABI_1.3
 __cxa_guard_acquire@@CXXABI_1.3
 __cxa_guard_release@@CXXABI_1.3
 __cxa_pure_virtual@@CXXABI_1.3
 __cxa_rethrow@@CXXABI_1.3
 __cxa_throw@@CXXABI_1.3
 __cxa_throw_bad_array_new_length@@CXXABI_1.3.8
 __daylight@@GLIBC_2.2.5
 __dynamic_cast@@CXXABI_1.3
 __errno_location@@GLIBC_2.2.5
 __fprintf_chk@@GLIBC_2.3.4
 __fxstat64@@GLIBC_2.2.5
 __gmon_start__
 __gxx_personality_v0@@CXXABI_1.3
 __isnanf@@GLIBC_2.2.5
 __longjmp_chk@@GLIBC_2.11
 __lxstat64@@GLIBC_2.2.5
 __memcpy_chk@@GLIBC_2.3.4
 __memset_chk@@GLIBC_2.3.4
 __once_proxy@@GLIBCXX_3.4.11
 __printf_chk@@GLIBC_2.3.4
 __pthread_key_create@@GLIBC_2.2.5
 __snprintf_chk@@GLIBC_2.3.4
 __sprintf_chk@@GLIBC_2.3.4
 __stack_chk_fail@@GLIBC_2.4
 __strcat_chk@@GLIBC_2.3.4
 __strcpy_chk@@GLIBC_2.3.4
 __timezone@@GLIBC_2.2.5
 __tls_get_addr@@GLIBC_2.3
 __vsprintf_chk@@GLIBC_2.3.4
 __xstat64@@GLIBC_2.2.5
 _setjmp@@GLIBC_2.2.5
 abort@@GLIBC_2.2.5
 acosf@@GLIBC_2.2.5
 alphasort64@@GLIBC_2.2.5
 asin@@GLIBC_2.2.5
 asinf@@GLIBC_2.2.5
 atan2@@GLIBC_2.2.5
 atan2f@@GLIBC_2.2.5
 atan@@GLIBC_2.2.5
 calloc@@GLIBC_2.2.5
 ceil@@GLIBC_2.2.5
 ceilf@@GLIBC_2.2.5
 close@@GLIBC_2.2.5
 closedir@@GLIBC_2.2.5
 cos@@GLIBC_2.2.5
 cosf@@GLIBC_2.2.5
 daylight@@GLIBC_2.2.5
 dl_iterate_phdr@@GLIBC_2.2.5
 dup@@GLIBC_2.2.5
 exit@@GLIBC_2.2.5
 exp@@GLIBC_2.2.5
 expf@@GLIBC_2.2.5
 fclose@@GLIBC_2.2.5
 fcntl@@GLIBC_2.2.5
 fdatasync@@GLIBC_2.2.5
 fdopen@@GLIBC_2.2.5
 ferror@@GLIBC_2.2.5
 fflush@@GLIBC_2.2.5
 fgetc@@GLIBC_2.2.5
 floor@@GLIBC_2.2.5
 floorf@@GLIBC_2.2.5
 fmod@@GLIBC_2.2.5
 fopen64@@GLIBC_2.2.5
 fprintf@@GLIBC_2.2.5
 fputc@@GLIBC_2.2.5
 fread@@GLIBC_2.2.5
 free@@GLIBC_2.2.5
 frexp@@GLIBC_2.2.5
 ftruncate64@@GLIBC_2.2.5
 fwrite@@GLIBC_2.2.5
 g_Mathlib_GammaToLinearByteTable
 g_Tier1_BitWriteMasks
 g_Tier1_CRC32Table
 g_Tier1_CRC64Table
 g_Tier1_ExtraMasks
 g_VProfCurrentProfile
 g_pMemAlloc
 g_pThreadPool
 getenv@@GLIBC_2.2.5
 gethostbyname@@GLIBC_2.2.5
 getsockname@@GLIBC_2.2.5
 gmtime@@GLIBC_2.2.5
 log10@@GLIBC_2.2.5
 log2f@@GLIBC_2.2.5
 log@@GLIBC_2.2.5
 longjmp@@GLIBC_2.2.5
 lseek64@@GLIBC_2.2.5
 lseek@@GLIBC_2.2.5
 mallinfo@@GLIBC_2.2.5
 malloc@@GLIBC_2.2.5
 memchr@@GLIBC_2.2.5
 memcmp@@GLIBC_2.2.5
 memcpy@@GLIBC_2.14
 memmove@@GLIBC_2.2.5
 memset@@GLIBC_2.2.5
 mktime@@GLIBC_2.2.5
 modf@@GLIBC_2.2.5
 nexttoken
 open64@@GLIBC_2.2.5
 opendir@@GLIBC_2.2.5
 operator delete(void*, std::nothrow_t const&)@@GLIBCXX_3.4
 operator new(unsigned long, std::nothrow_t const&)@@GLIBCXX_3.4
 pipe@@GLIBC_2.2.5
 posix_fadvise64@@GLIBC_2.2.5
 pow@@GLIBC_2.2.5
 powf@@GLIBC_2.2.5
 pread64@@GLIBC_2.2.5
 printf@@GLIBC_2.2.5
 pthread_cancel@@GLIBC_2.2.5
 pthread_mutex_destroy@@GLIBC_2.2.5
 pthread_mutex_init@@GLIBC_2.2.5
 pthread_mutex_lock@@GLIBC_2.2.5
 pthread_mutex_unlock@@GLIBC_2.2.5
 pthread_mutexattr_init@@GLIBC_2.2.5
 pthread_mutexattr_settype@@GLIBC_2.2.5
 pthread_once@@GLIBC_2.2.5
 pwrite64@@GLIBC_2.2.5
 qsort@@GLIBC_2.2.5
 rand@@GLIBC_2.2.5
 read@@GLIBC_2.2.5
 readdir64@@GLIBC_2.2.5
 readlink@@GLIBC_2.2.5
 realloc@@GLIBC_2.2.5
 roundf@@GLIBC_2.2.5
 scandir64@@GLIBC_2.2.5
 sched_yield@@GLIBC_2.2.5
 sin@@GLIBC_2.2.5
 sincos@@GLIBC_2.2.5
 sincosf@@GLIBC_2.2.5
 sinf@@GLIBC_2.2.5
 snprintf@@GLIBC_2.2.5
 sprintf@@GLIBC_2.2.5
 sqrt@@GLIBC_2.2.5
 sqrtf@@GLIBC_2.2.5
 sscanf@@GLIBC_2.2.5
 std::_Hash_bytes(void const*, unsigned long, unsigned long)@@CXXABI_1.3.5
 std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)@@GLIBCXX_3.4
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)@@GLIBCXX_3.4
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
 std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const@@GLIBCXX_3.4.18
 std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const@@GLIBCXX_3.4.18
 std::__exception_ptr::exception_ptr::exception_ptr(std::__exception_ptr::exception_ptr const&)@@CXXABI_1.3.3
 std::__exception_ptr::exception_ptr::swap(std::__exception_ptr::exception_ptr&)@@CXXABI_1.3.3
 std::__exception_ptr::exception_ptr::~exception_ptr()@@CXXABI_1.3.3
 std::__exception_ptr::operator==(std::__exception_ptr::exception_ptr const&, std::__exception_ptr::exception_ptr const&)@@CXXABI_1.3.3
 std::__future_base::_Result_base::_Result_base()@@GLIBCXX_3.4.15
 std::__future_base::_Result_base::~_Result_base()@@GLIBCXX_3.4.15
 std::__future_base::_State_base::~_State_base()@@GLIBCXX_3.4.15
 std::__once_call@@GLIBCXX_3.4.11
 std::__once_callable@@GLIBCXX_3.4.11
 std::__throw_bad_alloc()@@GLIBCXX_3.4
 std::__throw_bad_cast()@@GLIBCXX_3.4
 std::__throw_bad_function_call()@@GLIBCXX_3.4.14
 std::__throw_future_error(int)@@GLIBCXX_3.4.14
 std::__throw_length_error(char const*)@@GLIBCXX_3.4
 std::__throw_logic_error(char const*)@@GLIBCXX_3.4
 std::__throw_out_of_range_fmt(char const*, ...)@@GLIBCXX_3.4.20
 std::__throw_regex_error(std::regex_constants::error_type)@@GLIBCXX_3.4.15
 std::__throw_system_error(int)@@GLIBCXX_3.4.11
 std::allocator<char>::allocator()@@GLIBCXX_3.4
 std::allocator<char>::~allocator()@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::eof() const@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::fail() const@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::fill() const@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::good() const@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@@GLIBCXX_3.4
 std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()@@GLIBCXX_3.4
 std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@@GLIBCXX_3.4.9
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::_Setfill<char>)@@GLIBCXX_3.4
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::_Setw)@@GLIBCXX_3.4
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <char, std::char_traits<char>, std::allocator<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@@GLIBCXX_3.4
 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream(std::_Ios_Openmode)@@GLIBCXX_3.4
 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::str() const@@GLIBCXX_3.4
 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@@GLIBCXX_3.4
 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()@@GLIBCXX_3.4
 std::chrono::_V2::steady_clock::now()@@GLIBCXX_3.4.19
 std::chrono::_V2::system_clock::now()@@GLIBCXX_3.4.19
 std::collate<char> const& std::use_facet<std::collate<char> >(std::locale const&)@@GLIBCXX_3.4
 std::condition_variable::condition_variable()@@GLIBCXX_3.4.11
 std::condition_variable::notify_all()@@GLIBCXX_3.4.11
 std::condition_variable::wait(std::unique_lock<std::mutex>&)@@GLIBCXX_3.4.11
 std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)@@GLIBCXX_3.4
 std::ctype<char>::_M_widen_init() const@@GLIBCXX_3.4.11
 std::ctype<char>::id@@GLIBCXX_3.4
 std::current_exception()@@CXXABI_1.3.3
 std::exception::~exception()@@GLIBCXX_3.4
 std::ios_base::Init::Init()@@GLIBCXX_3.4
 std::ios_base::Init::~Init()@@GLIBCXX_3.4
 std::ios_base::ios_base()@@GLIBCXX_3.4
 std::ios_base::~ios_base()@@GLIBCXX_3.4
 std::istream& std::istream::_M_extract<long>(long&)@@GLIBCXX_3.4.9
 std::istream::gcount() const@@GLIBCXX_3.4
 std::istream::read(char*, long)@@GLIBCXX_3.4
 std::locale::id::_M_id() const@@GLIBCXX_3.4
 std::locale::locale()@@GLIBCXX_3.4
 std::locale::locale(std::locale const&)@@GLIBCXX_3.4
 std::locale::operator=(std::locale const&)@@GLIBCXX_3.4
 std::locale::~locale()@@GLIBCXX_3.4
 std::nothrow@@GLIBCXX_3.4
 std::ostream::flush()@@GLIBCXX_3.4
 std::ostream::operator<<(std::ios_base& (*)(std::ios_base&))@@GLIBCXX_3.4
 std::ostream::operator<<(unsigned long)@@GLIBCXX_3.4
 std::ostream::put(char)@@GLIBCXX_3.4
 std::ostream::write(char const*, long)@@GLIBCXX_3.4
 std::rethrow_exception(std::__exception_ptr::exception_ptr)@@CXXABI_1.3.3
 std::string::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_M_iend() const@@GLIBCXX_3.4
 std::string::_M_leak_hard()@@GLIBCXX_3.4
 std::string::_M_mutate(unsigned long, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::string::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)@@GLIBCXX_3.4
 std::string::_Rep::_M_destroy(std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_M_refdata()@@GLIBCXX_3.4
 std::string::_Rep::_M_set_length_and_sharable(unsigned long)@@GLIBCXX_3.4.5
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4
 std::string::_S_copy_chars(char*, char*, char*)@@GLIBCXX_3.4
 std::string::_S_empty_rep()@@GLIBCXX_3.4
 std::string::append(char const*)@@GLIBCXX_3.4
 std::string::append(char const*, unsigned long)@@GLIBCXX_3.4
 std::string::append(std::string const&)@@GLIBCXX_3.4
 std::string::append(std::string const&, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::string::append(unsigned long, char)@@GLIBCXX_3.4
 std::string::assign(char const*, unsigned long)@@GLIBCXX_3.4
 std::string::assign(std::string const&)@@GLIBCXX_3.4
 std::string::at(unsigned long) const@@GLIBCXX_3.4
 std::string::at(unsigned long)@@GLIBCXX_3.4
 std::string::begin() const@@GLIBCXX_3.4
 std::string::begin()@@GLIBCXX_3.4
 std::string::c_str() const@@GLIBCXX_3.4
 std::string::capacity() const@@GLIBCXX_3.4
 std::string::clear()@@GLIBCXX_3.4
 std::string::compare(char const*) const@@GLIBCXX_3.4
 std::string::compare(std::string const&) const@@GLIBCXX_3.4
 std::string::compare(unsigned long, unsigned long, std::string const&) const@@GLIBCXX_3.4
 std::string::data() const@@GLIBCXX_3.4
 std::string::empty() const@@GLIBCXX_3.4
 std::string::end() const@@GLIBCXX_3.4
 std::string::end()@@GLIBCXX_3.4
 std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)@@GLIBCXX_3.4
 std::string::erase(unsigned long, unsigned long)@@GLIBCXX_3.4
 std::string::find(char const*, unsigned long, unsigned long) const@@GLIBCXX_3.4
 std::string::find(char, unsigned long) const@@GLIBCXX_3.4
 std::string::find(std::string const&, unsigned long) const@@GLIBCXX_3.4
 std::string::find_first_not_of(char const*, unsigned long) const@@GLIBCXX_3.4
 std::string::find_first_of(char const*, unsigned long) const@@GLIBCXX_3.4
 std::string::find_first_of(char, unsigned long) const@@GLIBCXX_3.4
 std::string::find_last_of(char const*, unsigned long) const@@GLIBCXX_3.4
 std::string::find_last_of(char, unsigned long) const@@GLIBCXX_3.4
 std::string::insert(unsigned long, char const*, unsigned long)@@GLIBCXX_3.4
 std::string::insert(unsigned long, unsigned long, char)@@GLIBCXX_3.4
 std::string::length() const@@GLIBCXX_3.4
 std::string::operator+=(char const*)@@GLIBCXX_3.4
 std::string::operator+=(char)@@GLIBCXX_3.4
 std::string::operator+=(std::string const&)@@GLIBCXX_3.4
 std::string::operator=(char const*)@@GLIBCXX_3.4
 std::string::operator=(std::string const&)@@GLIBCXX_3.4
 std::string::operator[](unsigned long) const@@GLIBCXX_3.4
 std::string::operator[](unsigned long)@@GLIBCXX_3.4
 std::string::push_back(char)@@GLIBCXX_3.4
 std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>)@@GLIBCXX_3.4
 std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const*, char const*)@@GLIBCXX_3.4
 std::string::replace(unsigned long, unsigned long, char const*)@@GLIBCXX_3.4
 std::string::replace(unsigned long, unsigned long, char const*, unsigned long)@@GLIBCXX_3.4
 std::string::reserve(unsigned long)@@GLIBCXX_3.4
 std::string::resize(unsigned long)@@GLIBCXX_3.4
 std::string::resize(unsigned long, char)@@GLIBCXX_3.4
 std::string::size() const@@GLIBCXX_3.4
 std::string::substr(unsigned long, unsigned long) const@@GLIBCXX_3.4
 std::string::swap(std::string&)@@GLIBCXX_3.4
 std::terminate()@@GLIBCXX_3.4
 std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>)@@GLIBCXX_3.4.11
 std::thread::join()@@GLIBCXX_3.4.11
 std::tr1::__detail::__prime_list@@GLIBCXX_3.4.10
 stderr@@GLIBC_2.2.5
 stdin@@GLIBC_2.2.5
 stdout@@GLIBC_2.2.5
 strcasecmp@@GLIBC_2.2.5
 strcat@@GLIBC_2.2.5
 strchr@@GLIBC_2.2.5
 strcmp@@GLIBC_2.2.5
 strcpy@@GLIBC_2.2.5
 strdup@@GLIBC_2.2.5
 strerror@@GLIBC_2.2.5
 strftime@@GLIBC_2.2.5
 strlen@@GLIBC_2.2.5
 strncmp@@GLIBC_2.2.5
 strncpy@@GLIBC_2.2.5
 strnlen@@GLIBC_2.2.5
 strpbrk@@GLIBC_2.2.5
 strptime@@GLIBC_2.2.5
 strrchr@@GLIBC_2.2.5
 strstr@@GLIBC_2.2.5
 strtod@@GLIBC_2.2.5
 strtof@@GLIBC_2.2.5
 strtok@@GLIBC_2.2.5
 strtol@@GLIBC_2.2.5
 strtoll@@GLIBC_2.2.5
 strtoq@@GLIBC_2.2.5
 strtoul@@GLIBC_2.2.5
 strtoull@@GLIBC_2.2.5
 strtouq@@GLIBC_2.2.5
 tan@@GLIBC_2.2.5
 tanf@@GLIBC_2.2.5
 time@@GLIBC_2.2.5
 timezone@@GLIBC_2.2.5
 tolower@@GLIBC_2.2.5
 toupper@@GLIBC_2.2.5
 trunc@@GLIBC_2.2.5
 typeinfo for CThread
 typeinfo for CThreadSyncObject
 typeinfo for bool*@@CXXABI_1.3
 typeinfo for char@@CXXABI_1.3
 typeinfo for float@@CXXABI_1.3
 typeinfo for std::__future_base::_Result_base@@GLIBCXX_3.4.15
 typeinfo for std::__future_base::_State_base@@GLIBCXX_3.4.15
 typeinfo for std::ctype<char>@@GLIBCXX_3.4
 typeinfo for std::exception@@GLIBCXX_3.4
 typeinfo for std::locale::facet@@GLIBCXX_3.4
 typeinfo for unsigned char@@CXXABI_1.3
 typeinfo for unsigned int@@CXXABI_1.3
 typeinfo for unsigned long long@@CXXABI_1.3
 typeinfo for void*@@CXXABI_1.3
 ungetc@@GLIBC_2.2.5
 unlink@@GLIBC_2.2.5
 uuid_generate@@UUID_1.0
 v8::Array::Length() const
 v8::Array::New(v8::Isolate*, int)
 v8::Boolean::Value() const
 v8::Context::Enter()
 v8::Context::Exit()
 v8::Context::Global()
 v8::External::New(v8::Isolate*, void*)
 v8::External::Value() const
 v8::Function::Call(v8::Handle<v8::Value>, int, v8::Handle<v8::Value>*)
 v8::Function::GetName() const
 v8::FunctionTemplate::New(v8::Isolate*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&), v8::Handle<v8::Value>, v8::Handle<v8::Signature>, int)
 v8::HandleScope::CreateHandle(v8::internal::HeapObject*, v8::internal::Object*)
 v8::HandleScope::CreateHandle(v8::internal::Isolate*, v8::internal::Object*)
 v8::HandleScope::HandleScope(v8::Isolate*)
 v8::HandleScope::~HandleScope()
 v8::Isolate::Enter()
 v8::Isolate::Exit()
 v8::Isolate::GetCurrentContext()
 v8::Isolate::ThrowException(v8::Local<v8::Value>)
 v8::Number::New(v8::Isolate*, double)
 v8::Number::Value() const
 v8::Object::Get(unsigned int)
 v8::Object::Get(v8::Handle<v8::Value>)
 v8::Object::GetIsolate()
 v8::Object::InternalFieldCount()
 v8::Object::New(v8::Isolate*)
 v8::Object::Set(unsigned int, v8::Handle<v8::Value>)
 v8::Object::Set(v8::Handle<v8::Value>, v8::Handle<v8::Value>)
 v8::Object::SlowGetInternalField(int)
 v8::ObjectTemplate::SetAccessor(v8::Handle<v8::String>, void (*)(v8::Local<v8::String>, v8::PropertyCallbackInfo<v8::Value> const&), void (*)(v8::Local<v8::String>, v8::Local<v8::Value>, v8::PropertyCallbackInfo<void> const&), v8::Handle<v8::Value>, v8::AccessControl, v8::PropertyAttribute, v8::Handle<v8::AccessorSignature>)
 v8::String::NewFromUtf8(v8::Isolate*, char const*, v8::String::NewStringType, int)
 v8::String::Utf8Value::Utf8Value(v8::Handle<v8::Value>)
 v8::String::Utf8Value::~Utf8Value()
 v8::Template::Set(v8::Handle<v8::Name>, v8::Handle<v8::Data>, v8::PropertyAttribute)
 v8::TryCatch::HasCaught() const
 v8::TryCatch::TryCatch()
 v8::TryCatch::~TryCatch()
 v8::V8::DisposeGlobal(v8::internal::Object**)
 v8::V8::GlobalizeReference(v8::internal::Isolate*, v8::internal::Object**)
 v8::Value::BooleanValue() const
 v8::Value::IsArray() const
 v8::Value::IsBoolean() const
 v8::Value::IsFunction() const
 v8::Value::IsNumber() const
 v8::Value::IsObject() const
 v8::Value::NumberValue() const
 v8::Value::ToBoolean() const
 v8::Value::ToNumber() const
 v8::Value::ToObject() const
 v8::Value::ToString() const
 vsnprintf@@GLIBC_2.2.5
 vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__function_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__pointer_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
 vtable for std::__future_base::_State_base@@GLIBCXX_3.4.15
 vtable for std::basic_ios<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::basic_streambuf<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::exception@@GLIBCXX_3.4
 wcschr@@GLIBC_2.2.5
 wcscmp@@GLIBC_2.2.5
 wcscpy@@GLIBC_2.2.5
 wcslen@@GLIBC_2.2.5
 write@@GLIBC_2.2.5
