/*	Styles shared across all UI */

/* ------------------------------------------------------------------------- */
/*  Card Reference Colors                                                    */
/* ------------------------------------------------------------------------- */

@define cardColorRed: #c2352d;
@define cardColorDarkRed: #330f0e;
@define cardColorBlue: #2f7492;
@define cardColorDarkBlue: #0d2435;
@define cardColorGreen: #479036;
@define cardColorDarkGreen: #192414;
@define cardColorBlack: #736e80;
@define cardColorDarkBlack: #141414;
@define cardColorGold: #dcaf4e;
@define cardColorDarkGold: #5f4007;
@define cardColorDefault: #645643;
@define cardColorDarkDefault: #524a40;
@define cardColorColorless: #625e58;

@define textColorWhite: #dedede;
@define textColorWhiteKeyword: #ffffff;
@define textColorBlack: #000000;
@define textColorRed: #af1b15;
@define textColorGreen: #4bb716;
@define textColorYellow: #ffff00;
@define textColorGold: #e9c35e;
@define textColorItemCost: #7b7c00;
@define textColorFaction: orange;

@define uiNeutralGrey: #839595;

@define rarityBasic: #5c5c5c;
@define rarityCommon: #b68854;
@define rarityUncommon: #CCCCCC;
@define rarityRare: #fae580;

@define abilityBorderBlue: #4470a1;
@define abilityBorderBlack: #6f6d79;
@define abilityBorderGreen: #779c3d;
@define abilityBorderRed: #b42a23;

@define loadDeckPopupDuration: 0.2s;

@define abilityGradient: gradient( linear, 0% 0%, 0% 100%, from( white ), color-stop( .3, #d0b891 ), color-stop( .3, #d0b891 ), color-stop( .8, #9d7f68 ), to( #9d7f68 ) );

/* ------------------------------------------------------------------------- */
/*  Do we need these? Clean this up!                                         */
/* ------------------------------------------------------------------------- */


@define steamOnlineGreen: #80a438;

@define baseText: white;
@define baseBorder: #444444ff;
@define offWhite: #ccccccff;
@define selectedTextBackgroundColor: #66666633;

@define dotalevelgradient: gradient( linear, 0% 0%, 0% 100%, from( #BBCAEA ), color-stop( 0.5, #ffffff), color-stop( 0.5, #D9DFEC), to( #BBCAEA ) );
@define dotaplaytimegradient: gradient( linear, 0% 0%, 0% 100%, from( #3db451 ), color-stop( 0.5, #beffc7), color-stop( 0.5, #91d69a), to( #3db451 ) );


/* ContextMenu - used in code -- dont rename */
@define ContextMenuFadoutTime: 0.2s;

/* Z layers */
@define contextmenu_zindex:	   	10000100;

@define mousepanningcursorsize: 64px;

@define monospaceFont: Courier New,Courier;

@define cardHeaderLarge: Radiance,FZLanTingHei-R-GBK,TH Sarabun New,YDYGO 540,Gulim,MingLiU;
@define cardHeaderSmall: Radiance,FZLanTingHei-R-GBK,TH Sarabun New,YDYGO 540,Gulim,MingLiU;
@define cardCondensed: Radiance,FZLanTingHei-R-GBK,TH Sarabun New,YDYGO 540,Gulim,MingLiU;
@define cardBodyText: Radiance,FZLanTingHei-R-GBK,TH Sarabun New,YDYGO 540,Gulim,MingLiU;

/* ------------------------------------------------------------------------- */
/*  Fonts                                                                    */
/* ------------------------------------------------------------------------- */
/* Default fonts */
Label, TextEntry {
  	font-family: Radiance,FZLanTingHei-R-GBK,TH Sarabun New,YDYGO 540,Gulim,MingLiU;
}

Panel
{
	tooltip-body-position: 50% 50%;
}

/* Default font, but with monospaced numbers for use in things like the scoreboard */
Label.MonoNumbersFont, TextEntry.MonoNumbersFont {
    font-family: monospaceFont;
    //font-family: RadianceM,Radiance,FZLanTingHei-R-GBK,TH Sarabun New,YDYGO 540,Gulim,MingLiU;
}

/* Title Fonts */
Label.TitleFont, TextEntry.TitleFont {
    font-family: RadianceM,Radiance,FZLanTingHei-R-GBK,TH Sarabun New,YDYGO 540,Gulim,MingLiU;
}

/* Monospaced fonts, used mostly for debugging */
Label.MonoFont, TextEntry.MonoFont
{
	font-family: monospaceFont;
}

@keyframes 'ProbablyUnlocalizedAnimation'
{
	0%
	{
		pre-transform-scale2d: 0.95;
	}

	50%
	{
		pre-transform-scale2d: 1.05;
	}

	100%
	{
		pre-transform-scale2d: 0.95;
	}
}

Label.ProbablyUnlocalizedText
{
	background-color: red;
	color: yellow;

	animation-name: ProbablyUnlocalizedAnimation;
	animation-duration: 0.4s;
	animation-timing-function: linear;
	animation-iteration-count: infinite;
}

/* ------------------------------------------------------------------------- */
/*  Card Text Colorization                                                   */
/* ------------------------------------------------------------------------- */

.CardNameText {
    color: khaki;
    text-transform: uppercase;
}

.IsItem .CardNameText {
    color: khaki;
    text-transform: uppercase;
}

.RedCardText
{
    font-weight: light;
    color: cardColorRed;
}

.BlueCardText
{
    font-weight: light;
    color: cardColorBlue;
}

.GreenCardText
{
    font-weight: light;
    color: cardColorGreen;
}

.BlackCardText
{
    font-weight: light;
    color: cardColorBlack;
}

.AbilityCardText
{
	color: abilityGradient;
}

.KeywordText
{
     font-weight: semi-bold;
     color: textColorWhiteKeyword;
}

.UpdateGameStateIcon, .QuickIcon, .RoundDownIcon, .RoundUpIcon, .CoolDownIcon
{
	margin-top: 0px;
	margin-left: 0px;
	height: 0px;
	width: 0px;
}

.UpdateGameStateIcon
{
	background-image: url("s2r://panorama/images/card/refresh_icon_psd.vtex");
	background-size: cover;
}

.QuickIcon
{
	background-image: url("s2r://panorama/images/card/quick_icon_small_psd.vtex");
	background-size: cover;
}

.RoundDownIcon
{
	background-image: url("s2r://panorama/images/card/round_down_icon_psd.vtex");
	background-size: cover;
}

.RoundUpIcon
{
	background-image: url("s2r://panorama/images/card/round_up_icon_psd.vtex");
	background-size: cover;
}

.CoolDownIcon
{
	wash-color: khaki;
	background-image: url("s2r://panorama/images/card/cooldown_icon_flat_psd.vtex");
	background-size: cover;
}


/* ------------------------------------------------------------------------- */
/*  Label                                                                    */
/* ------------------------------------------------------------------------- */

Label
{
	color: baseText;
	font-size: 18px;
}

/* ------------------------------------------------------------------------- */
/*  Text Entry                                                               */
/* ------------------------------------------------------------------------- */

TextEntry
{
	border: 1px solid baseBorder;
	width: 352px;
	height: 36px;

	padding: 5px 7px 3px 7px;

	background-color: gradient( linear, 0% 0%, 0% 100%, from( #111111FF ), to( #222222FF ) );

	color: white;
	font-size: 20px;

	text-overflow: clip;
	white-space: nowrap;
}

TextEntry #PlaceholderText
{
	opacity: 1.0;

	transition-property: opacity;
	transition-duration: 0.2s;

	color: #555555;
	font-size: 12px;
    vertical-align: center;
	text-align: left;
}

TextEntry:focus #PlaceholderText, TextEntry.HasInput #PlaceholderText
{
	opacity: 0.0;
}

.TextEntryIMECandidateRow
{
	flow-children: right;
	background-color: #000000;
}

.TextEntryIMECandidateRowPrefix
{
	font-size: 20px;
	font-weight: normal;
	color:#FFFFFF;
	background-color: #000000;
	vertical-align: middle;
}

.TextEntryIMECandidateRowSuffix
{
	font-size: 25px;
	font-weight: normal;
	color:#FFFFFF;
	background-color: #333333;
	vertical-align: middle;
}

.TextEntryIMECandidateRow.Highlight .TextEntryIMECandidateRowSuffix
{
	background-color: #4444FF;
}

.TextEntryIMEReadingString
{
	font-size: 20px;
	font-weight: normal;
	color: #DDDDDD;
	background-color: #333333;
	margin-top: 5px;
	margin-bottom: 5px;
	padding: 5px;
	border: 1px solid #FFFFFF;
}

.TextEntryIMEReadingString.NoReadingString
{
	visibility: collapse;
}

.TextEntryIMECandidateList
{
	color: #DDDDDD;
	background-color: #333333;
	flow-children: down;
	border: 1px solid #FFFFFF;
}

TextEntryIMEControls
{
	flow-children: down;
}

TextEntryAutocomplete
{
	width: 320px;
	flow-children: down;
	background-color: #3d4448;
	color: #e1e1e1;
	font-size: 28px;
	overflow: squish scroll;
	z-index: 0;
	//transform: translateY(-40px);
	opacity: 1.0;

	//transition-property: opacity, transform;
	//transition-duration: 0.15s;
	//transition-timing-function: ease-in;

	box-shadow: fill #00000066 -3px -3px 6px 6px;
}

TextEntryAutocomplete > Label
{
	width: 100%;
	padding: 6px 0px 2px 0px;
	margin-top: 0px 0px;
	margin-right: 0px;
	margin-left: 0px;
	padding-left: 16px;

	color: #ffffff99;
	background-color: #3d4448;

	font-size: 18px;
	font-weight: normal;
	z-index: 0;
	border-top: 1px solid #00000066;
	border-bottom: 1px solid #00000066;

	transition-property: background-color;
	transition-duration: 0.2s;
	transition-timing-function: ease-in-out;
}

TextEntryAutocomplete > Label:hover
{
	background-color: #585e62;
}

TextEntryAutocomplete > Label:focus
{
	background-color: #585e62;
}

TextEntry.ThinTextEntry
{
	height: 32px;
	font-size: 18px;
}

/* ------------------------------------------------------------------------- */
/*  Simple Text Styles                                                       */
/* ------------------------------------------------------------------------- */
.Headline1
{
	color: white;
	font-size: 54px;
	font-weight: Bold;
	letter-spacing: 1px;
	text-transform: uppercase;
	margin-bottom: -12px;
	margin-top: -10px;
}

.Headline2
{
	font-size: 32px;
	color: offWhite;
	letter-spacing: 1px;
	//font-weight: medium;
}

.Capital
{
	text-transform: uppercase;
}

/* Scroll Bars */
VerticalScrollBar, HTMLVerticalScrollBar
{
	width: 8px;
	margin: 0px, 8px, 0px 8px;
	border-radius: 0px;
	height: 100%;
	background-color: rgba(0, 0, 0, 0);
	/*box-shadow: fill #00000055 -3px 0px 3px 4px;*/
	horizontal-align: right;
	vertical-align: center;

	transition-property: transform;
}

VerticalScrollBar .ScrollThumb, HTMLVerticalScrollBar .ScrollThumb
{
	width: 8px;
	min-height: 32px;  // need to get the scrollthumb to hit the bottom of the scrollbar
	background-color: #a2a28e;
	border-top: 1px solid #aaaaaa22;
	border-right: 1px solid #000000aa;
	transition-property: position;
	/*background-color: gradient( linear, 0% 0%, 0% 100%, from( #3e4446 ), to( #33383a ) );*/
	transition-property: background-color, transform;
	transition-duration: 0.1s;
	transition-timing-function: linear;
}

VerticalScrollBar:hover .ScrollThumb, HTMLVerticalScrollBar:hover .ScrollThumb
{
	background-color: #a2a28e;
}


VerticalScrollBar:active .ScrollThumb, HTMLVerticalScrollBar:active .ScrollThumb
{
	background-color: #a2a28e;
}

HorizontalScrollBar, HTMLHorizontalScrollBar
{
	height: 12px;
	margin: 0px;
	width: 100%;
	background-color: rgba(0, 0, 0, 0);
	border-radius: 0px;
	horizontal-align: left;
	vertical-align: bottom;
	box-shadow: fill #00000055 0px -3px 3px 4px;

	transition-property: transform;
}

HorizontalScrollBar .ScrollThumb, HTMLHorizontalScrollBar .ScrollThumb
{
	height: 12px;
	min-width: 32px;
	border-top: 1px solid #aaaaaa22;
	border-bottom: 1px solid #000000aa;
	background-color: #a2a28e;
	transition-property: background-color, transform;
	transition-duration: 0.1s;
	transition-timing-function: linear;
}

HorizontalScrollBar:hover .ScrollThumb, HTMLHorizontalScrollBar:hover .ScrollThumb

{
	background-color: #a2a28e;
}

HorizontalScrollBar:active .ScrollThumb, HTMLHorizontalScrollBar:active .ScrollThumb

{
	background-color: #a2a28e;
}

VerticalScrollBar,
VerticalScrollBar .ScrollThumb,
HorizontalScrollBar,
HorizontalScrollBar .ScrollThumb
HTMLHorizontalScrollBar,
HTMLHorizontalScrollBar .ScrollThumb,
HTMLVerticalScrollBar,
HTMLVerticalScrollBar .ScrollThumb,
{
	// The transition duration and timing function must match constants used in code:
	// k_flScrollTransitionTime, k_flScrollTransitionFunc, so dont change without talking with a dev
	transition-duration: 0.20s;
	transition-timing-function: ease-in-out;
}

VerticalScrollBar.MouseDown,
VerticalScrollBar.MouseDown .ScrollThumb,
HorizontalScrollBar.MouseDown,
HorizontalScrollBar.MouseDown .ScrollThumb
HTMLHorizontalScrollBar.MouseDown,
HTMLHorizontalScrollBar.MouseDown .ScrollThumb,
HTMLVerticalScrollBar.MouseDown,
HTMLVerticalScrollBar.MouseDown .ScrollThumb,
{
	// Disable the transition when the mouse is dragging the scroll thumb. Note that this must match
	// when IUIScrollBar::IsMouseDown returns true, or else the content will be out of sync
	transition-duration: 0.0s;
}

/* EdgeScroller */
EdgeScroller.CanScrollHorizontal
{
	padding-left: 18px;
	padding-right: 18px;
}

EdgeScroller.CanScrollVertical
{
	padding-top: 18px;
	padding-bottom: 18px;
}

EdgeScrollBar
{
	width: 100%;
	height: 100%;

	/* Must match k_flScrollTransitionTime & k_flScrollTransitionFunc */
	transition-property: transform;
	transition-timing-function: ease-in-out;
	transition-duration: 0.2s;
}

EdgeScrollBar .EdgeScrollButton
{
	background-color: #ffffff10;
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;

	wash-color: #999999;

	transition-property: wash-color;
	transition-duration: 0.1s;
}

EdgeScrollBar .EdgeScrollButton:hover
{
	wash-color: #cccccc;
}
EdgeScrollBar .EdgeScrollButton:active
{
	wash-color: #ffffff;
}

EdgeScrollBar.Horizontal .EdgeScrollButton
{
	width: 16px;
	height: 100%;
}
EdgeScrollBar.Horizontal #MinButton
{
	horizontal-align: left;
	background-image: url("s2r://panorama/images/control_icons/arrow_solid_left_png.vtex");
}
EdgeScrollBar.Horizontal #MaxButton
{
	horizontal-align: right;
	background-image: url("s2r://panorama/images/control_icons/arrow_solid_right_png.vtex");
}

EdgeScrollBar.Vertical .EdgeScrollButton
{
	width: 100%;
	height: 16px;
}
EdgeScrollBar.Vertical #MinButton
{
	vertical-align: top;
	background-image: url("s2r://panorama/images/control_icons/arrow_solid_up_png.vtex");
}
EdgeScrollBar.Vertical #MaxButton
{
	vertical-align: bottom;
	background-image: url("s2r://panorama/images/control_icons/arrow_solid_down_png.vtex");
}


//
// HTTP styles used by labels
//

a
{
	//color: blue;
}

a:hover
{
	text-decoration: underline;
}

b
{
	font-weight: bold;
}

i
{
	font-style: italics;
}

strong
{
	font-weight: bold;
}

em
{
	font-style: italics;
}

h1
{
	font-weight: bold;
}

h2
{
	font-weight: bold;
}

pre
{
	font-family: monospaceFont;
}

.CarouselDot {
    background-color: none;
    box-shadow: none;
}

.CarouselDot Label {
    visibility: collapse;
}

.CarouselDot .RadioBox {
    min-height: 16px;
    min-width: 16px;
    margin: 8px;
    border: 0px;
    border-radius: 50%;
    box-shadow: black 0px 0px 4px 0px;
    background-color: #ffffff08;
    //transition-duration: 0s;
}

.CarouselDot:selected .RadioBox {
    border: 0px;
    background-color: white;
    transition-duration: 0.16s;
    box-shadow: black 0px 0px 4px 0px;
}

.CarouselDot:hover .RadioBox {
    box-shadow: none 0px 0px 4px 0px;
    border: 1px solid white;
}

.CarouselDot:selected:hover .RadioBox {
    box-shadow: black 0px 0px 4px 0px;
    border: 0px solid white;
}

/* EdgeScroller */
EdgeScroller.CanScrollHorizontal {
    padding-left: 18px;
    padding-right: 18px;
}

EdgeScroller.CanScrollVertical {
    padding-top: 18px;
    padding-bottom: 18px;
}

EdgeScrollBar {
    width: 100%;
    height: 100%;
    /* Must match k_flScrollTransitionTime & k_flScrollTransitionFunc */
    transition-property: transform;
    transition-timing-function: ease-in-out;
    transition-duration: 0.2s;
}

EdgeScrollBar .EdgeScrollButton {
    background-color: #ffffff10;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    wash-color: #999999;
    transition-property: wash-color;
    transition-duration: 0.1s;
}

EdgeScrollBar .EdgeScrollButton:hover {
    wash-color: #cccccc;
}

EdgeScrollBar .EdgeScrollButton:active {
    wash-color: #ffffff;
}

EdgeScrollBar.Horizontal .EdgeScrollButton {
    width: 16px;
    height: 100%;
}

EdgeScrollBar.Horizontal #MinButton {
    horizontal-align: left;
    background-image: url("s2r://panorama/images/control_icons/arrow_solid_left_png.vtex");
}

EdgeScrollBar.Horizontal #MaxButton {
    horizontal-align: right;
    background-image: url("s2r://panorama/images/control_icons/arrow_solid_right_png.vtex");
}

EdgeScrollBar.Vertical .EdgeScrollButton {
    width: 100%;
    height: 16px;
}

EdgeScrollBar.Vertical #MinButton {
    vertical-align: top;
    background-image: url("s2r://panorama/images/control_icons/arrow_solid_up_png.vtex");
}

EdgeScrollBar.Vertical #MaxButton {
    vertical-align: bottom;
    background-image: url("s2r://panorama/images/control_icons/arrow_solid_down_png.vtex");
}


//
// ContextMenu
//
.ContextMenu
{
	width: 100%;
	height: 100%;
	transition-property: opacity, transform;
	transition-duration: ContextMenuFadoutTime;
	transition-timing-function: ease-in-out;
	opacity: 1.0;

	z-index: contextmenu_zindex;


	visibility: visible;
}

.ContextMenu.Destructing
{
	transform: translatex( 0px );
	opacity: 0.0;
}

//
// SimpleContextMenu - Shows a list of text buttons
//
SimpleContextMenu .ContextMenuBody
{
	padding: 5px;

	flow-children: down;
	width: 200px;

	opacity: 1.0;

	background-color: #212828;
	border: 2px solid black;
	box-shadow: #000000 2px 2px 8px 0px;
}

SimpleContextMenu.Wider .ContextMenuBody
{
	width: 250px;
}

SimpleContextMenu .ContextMenuBody Button
{
	width: 100%;

	padding: 6px 10px 6px 10px;
	margin: 0px 0px;
	border: 1px solid black;
	background-color: #00000040;

	transition-property: background-color;
	transition-duration: 0.2s;
}

SimpleContextMenu .ContextMenuBody Label
{
	horizontal-align: left;
}

SimpleContextMenu .ContextMenuBody Button:enabled:hover
{
	background-color: #00000080;
}

SimpleContextMenu .ContextMenuBody Button:enabled:hover Label
{
	color: white;
}

SimpleContextMenu .ContextMenuBody Button:disabled Label
{
	color: #444444;
}


//
// Simple Convenience styles
//

.LeftRightFlow
{
	flow-children: right;
}

.TopBottomFlow
{
	flow-children: down;
}

.NoFlow
{
	flow-children: none;
}

.Hide
{
	visibility: collapse;
}

.Show
{
	visibility: visible;
}

.HorizontalCenter
{
	horizontal-align: center;
}

.VerticalCenter
{
    vertical-align: center;
}

.FullWidth
{
	width: 100%;
}

.FullHeight
{
	height: 100%;
}

.FullWidthHeight
{
	width: 100%;
	height: 100%;
}

.Center
{
	horizontal-align: center;
}

//
//  TOGGLE BUTTON / CHECK BOX
//

ToggleButton, DCGSettingsCheckbox
{
	flow-children: right;
	padding: 1px 4px;
	color: white;

	transition-property: background-color, box-shadow, color;
	transition-duration: 0.25s;
	transition-timing-function: ease-in-out;

	margin-top: 5px;
}

ToggleButton .TickBox, DCGSettingsCheckbox .TickBox
{
	width: 18px;
	height: 18px;
	vertical-align: center;
	background-color: black;
	border: 2px solid #5e686966;
	box-shadow: #00000055 -2px -2px 1px 4px;

	transition-property: background-color, box-shadow, color, border;
	transition-duration: 0.20s;
	transition-timing-function: ease-in-out;

}

ToggleButton:selected .TickBox, DCGSettingsCheckbox:selected .TickBox
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #e7f6f5 ), to( #a0d6d7 ) );
	border: 3px solid #000000;
	box-shadow: #5b62bf77 -4px -4px 8px 8px;

}

ToggleButton:hover .TickBox, DCGSettingsCheckbox:hover .TickBox
{
	//background-color: gradient( linear, 0% 0%, 0% 100%, from( #e7f6f5 ), to( #a0d6d7 ) );
	border: 2px solid #697879;
}

ToggleButton Label, DCGSettingsCheckbox Label
{
	margin-top: 0px;
	font-size: 18px;
	margin-left: 8px;
	color: baseText;

	transition-property: color;
	transition-duration: 0.2s;
	transition-timing-function: linear;
}

ToggleButton:enabled:hover Label, DCGSettingsCheckbox:enabled:hover Label
{
	color: #d2d6d1;
}

ToggleButton:selected Label, DCGSettingsCheckbox:selected Label
{
	color: white;
}

ToggleButton:disabled Label, DCGSettingsCheckbox:disabled Label
{
	color: #333333;
}

ToggleButton:disabled .TickBox, DCGSettingsCheckbox:disabled .TickBox
{
	border-color: #333333;
}

ToggleButton:disabled:selected .TickBox, DCGSettingsCheckbox:disabled:selected .TickBox
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #222222 ), to( #333333 ) );
	border: 3px solid #000000;
	box-shadow: #33333377 -4px -4px 8px 8px;
}


ToggleButton.ExpandCollapseToggleButton
{
	margin: 0px;
	padding: 0px;
}

.ExpandCollapseToggleButton .TickBox
{
	margin: 0px;
	padding: 0px;
	width: 19px;
	height: 19px;
	vertical-align: middle;
	background-image: url("s2r://panorama/images/control_icons/expand_collapse_png.vtex");
	background-size: 100% 100%;
	background-color: none;
	box-shadow: none;
	border: 0px solid transparent;
	wash-color: #888888;
	transform: rotateZ( -90deg );

	transition-property: transform;
	transition-duration: 0.2s;
}


.ExpandCollapseToggleButton:hover .TickBox
{
	border: 0px solid transparent;
}

.ExpandCollapseToggleButton:selected .TickBox
{
	width: 19px;
	height: 19px;
	vertical-align: middle;
	background-image: url("s2r://panorama/images/control_icons/expand_collapse_png.vtex");
	background-size: 100% 100%;
	background-color: none;
	box-shadow: none;
	border: 0px solid transparent;
	wash-color: #888888;

	transform: rotateZ( 0deg );

	transition-property: transform;
	transition-duration: 0.2s;
}

//
// Radio Button
//

RadioButton
{
	background-color: none;
	flow-children: right;
//	padding: 4px 4px;
	color: white;

	transition-property: background-color, box-shadow, color, brightness;
	transition-duration: 0.25s;
	transition-timing-function: ease-in-out;
}

.RadioBox
{
	min-width: 20px;
	min-height: 20px;

	border-radius: 50%;
	background-color: gradient( radial, 50% 50%, 0% 0%, 10% 10%, from( #000000 ), to( #000000 ) );

	border: 2px solid #5e686966;
	box-shadow: #00000055 -2px -2px 1px 4px;

	transition-property: background-color, box-shadow, color, border;
	transition-duration: 0.20s;
	transition-timing-function: ease-in-out;
}

RadioButton:selected .RadioBox
{
	background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( #e7f6f5 ), to( #333399 ) );
	border: 3px solid #000000;

	box-shadow: #5b62bf77 -3px -3px 6px 6px;

	transition-property: background-color;
	transition-duration: 0.5s;
	transition-timing-function: ease-in-out;
}

RadioButton:enabled:hover .RadioBox
{
	border: 2px solid #697879;
}

RadioButton:enabled:selected:hover .RadioBox
{
	border: 3px solid #000000;
}

RadioButton Label
{
	color: baseText;
	margin-left: 2px;
	margin-right: 4px;
	font-size: 18px;

	transition-property: color;
	transition-duration: 0.2s;
	transition-timing-function: linear;
}

RadioButton:selected Label
{
	color: white;

	transition-property: color;
	transition-duration: 0.2s;
	transition-timing-function: linear;
}

RadioButton:enabled:hover Label
{
	color: white;

	transition-property: color;
	transition-duration: 0.2s;
	transition-timing-function: linear;
}

RadioButton:disabled .RadioBox
{
	color: transparent;
	box-shadow: #33333377 -4px -4px 8px 8px;
	background-color: #00000000;
}

RadioButton:disabled:selected .RadioBox
{
	background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( #e7f6f533 ), to( #33339933 ) );
}

RadioButton:disabled Label
{
	color: #333333;
}



//
// Grey button with a small bevel
//
.ButtonBevel
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #373d45 ), to( #4d5860 ) );
	border-style: solid;
	border-width: 1px;

	padding: 4px 10px;

	border-top-color: #555555;
	border-left-color: #494949;
	border-bottom-color: #333333;
	border-right-color: #404040;

	transition-property: background-color;
	transition-duration: 0.05s;
	transition-timing-function: linear;
	box-shadow: #00000055 -2px -2px 4px 4px;

	min-width: 192px;
	min-height: 36px;
}

.ButtonBevel:enabled:hover
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #4c5561 ), to( #6c7d88 ) );

	border-top-color: #aaaaaa77;
	border-left-color: #aaaaaa33;
	border-bottom-color: #333333;
	border-right-color: #404040;
}

.ButtonBevel:disabled
{
	wash-color: #999999;
	saturation: 0;
}

.ButtonBevel:disabled Label
{
	color: #888888;
}

.ButtonBevel:active
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #393939), to( #555555 ) );

	border-top-color: #222222;
	border-left-color: #303030;
	border-bottom-color: #666666;
	border-right-color: #444444;
	sound: "ui_generic_button_click";
}

.ButtonBevel Label
{
	margin-top: 2px;
	text-transform: uppercase;
	letter-spacing: 2px;
	color: #FFFFFF;
	horizontal-align: center;
	text-align: center;
	vertical-align: middle;
	text-shadow: 2px 2px 4px 1.0 #000000;
}

.ButtonBevel:active Label
{
		transform: translateY(1px);
}

.ExternalIcon
{
	background-image: url("s2r://panorama/images/control_icons/arrow_popout_png.vtex");
	background-repeat: no-repeat;
	background-size: 100% 100%;
	wash-color: white;
	height: 16px;
	width: 16px;
	margin-left: 6px;
	vertical-align: middle;
}

//
// Grey button with a small bevel
//
.ButtonDark
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #191e1e ), to( #292e2e ) );
	border: 2px solid #5e686966;
    padding-top: 2px;

	transition-property: border, background-color;
	transition-duration: 0.1s;
	transition-timing-function: linear;

	min-width: 192px;
	min-height: 36px;
}

.ButtonDark:enabled:hover
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #191e1e ), to( #292e2e ) );
	border: 2px solid #5e6869ff;
}

.ButtonDark:hover Label
{
	color: white;
}

.ButtonDark:active
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #191e1e ), to( #292e2e ) );

	border: 2px solid #5e686922;

	sound: "ui_generic_button_click";
}

.ButtonDark Label
{
	text-transform: uppercase;
	color: #7f8b8d;
	horizontal-align: center;
	vertical-align: middle;
	text-shadow: 0px 0px 6px 1.0 #000000;


	transition-property: color;
	transition-duration: 0.1s;
	transition-timing-function: linear;
}

.ButtonDark:active Label
{
	transform: translateY(1px);
}

.ButtonDark:disabled
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #191e1e ), to( #292e2e ) );
	border: 2px solid #111111;
}

.ButtonDark:disabled Label
{
	color: #5d676933;
}

//
// SimpleBevel - adds a very simple bevel effect to any button
//
.SimpleBevel
{
	border-top: 1px solid #99999905;
	border-left: 1px solid #99999905;
	border-right: 1px solid #00000060;
	border-bottom: 1px solid #00000060;
}

//
// Default Button for Popup panels
//

.PopupButton
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #5a6c75 ), to( #3d4a50 ) );
	border: 1px solid black;

	margin: 8px;
	//margin-left: 32px;
	//margin-right: 32px;
	min-width: 192px;
	padding: 5px 10px 5px 10px;
	border-top: 1px solid #ffffff44;
	border-right: 1px solid #4e5b60;
	border-left: 1px solid #4e5b60;
	border-bottom: 1px solid #00000088;

	transition-property: background-color, wash-color;
	transition-delay: 0.0s;
	transition-duration: 0.1s;
	transition-timing-function: linear;
}

.PopupButton Label
{
	color: white;
	font-size: 24px;
	horizontal-align: center;
	vertical-align: middle;
}

.PopupButton:enabled:hover
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #a9c8da ), to( #596b75 ) );
}

.PopupButton:disabled
{
	wash-color: #999999;
	saturation: 0;
}

.PopupButton:disabled Label
{
	color: #999999;
}

.PopupButton:active Label
{
	transform: translateY(1px);
}

.PopupButton:active
{
	border: 1px solid black;
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #272f33 ), to( #5a6c75 ) );

	border-top: 1px solid #00000088;
	border-right: 1px solid #00000088;
	border-left: 1px solid #00000088;
	border-bottom: 1px solid #aaaaaa44;
}

.PopupButton.Activated
{
	sound: "ui_quit_menu_fadeout";
}

.PopupButton.Green
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #5e842c ), to( #40621d ) );
	border-top: 1px solid #859d6e;
	border-right: 1px solid #496922;
	border-left: 1px solid #496922;
	border-bottom: 1px solid #294211;
}

.PopupButton.Green:enabled:hover
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #9eb46c ), to( #60823d ) );
}

.PopupButton.Green:active
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #204200 ), to( #5e842c ) );
	border-top: 1px solid #294211;
	border-right: 1px solid #496922;
	border-left: 1px solid #496922;
	border-bottom: 1px solid #859d6e;
}

.PopupButton.Blue
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #65a9db ), to( #2b4b75 ) );
	border-top: 1px solid #80bceb;
	border-right: 1px solid #507693;
	border-left: 1px solid #507693;
	border-bottom: 1px solid #273a48;
}

.PopupButton.Blue:enabled:hover
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #9ccaf4 ), to( #2b4b75 ) );
}

.PopupButton.Blue:active
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #2b4b75 ), to( #65a9db ) );

	border-top: 1px solid #273a48;
	border-right: 1px solid #496922;
	border-left: 1px solid #496922;
	border-bottom: 1px solid #567e9e;
}

.PopupButton.Grey
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #585858 ), to( #3f3f3f ) );
	border-top: 1px solid #858585;
	border-bottom: 1px solid #292929;
	border-left: 1px solid #707070;
	border-right: 1px solid #292929;
}

.PopupButton.Grey:enabled:hover
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #787878 ), to( #5f5f5f ) );
}

.PopupButton.Grey:active
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #3f3f3f ), to( #585858 ) );
	border-top: 1px solid #292929;
	border-right: 1px solid #707070;
	border-left: 1px solid #292929;
	border-bottom: 1px solid #858585;
}

.HUDButton
{
	//background-color: gradient( linear, 0% 0%, 0% 100%, from( #5a6c75 ), to( #3d4a50 ) );
	background-color: #93dbde11;
	border: 1px solid black;

	margin: 8px;
	//margin-left: 32px;
	//margin-right: 32px;
	//min-width: 192px;
	padding: 5px 10px 5px 10px;
	border: 1px solid #93dbde;
	//border-top: 1px solid #ffffff44;
	//border-right: 1px solid #4e5b60;
	//border-left: 1px solid #4e5b60;
	//border-bottom: 1px solid #00000088;

	transition-property: background-color, wash-color;
	transition-delay: 0.0s;
	transition-duration: 0.1s;
	transition-timing-function: linear;
}

.HUDButton Label
{
	color: #93dbde;
	text-transform: uppercase;
	font-size: 18px;
	letter-spacing: 2px;
	horizontal-align: center;
	vertical-align: middle;
	text-align: center;
	text-overflow: shrink;
	text-shadow: 2px 2px 4px 1.0 #000000cc;
}

.HUDButton:enabled:hover
{
	//background-color: gradient( linear, 0% 0%, 0% 100%, from( #a9c8da ), to( #596b75 ) );
	background-color: #93dbde22;
}

.HUDButton:disabled
{
	wash-color: #999999;
	saturation: 0;
}

.HUDButton:disabled Label
{
	color: #999999;
}

.HUDButton:active Label
{
	transform: translateY(1px);
}

.HUDButton:active Label
{
	color: white;
}

.HUDButton:active
{
	border: 1px solid black;
	//background-color: gradient( linear, 0% 0%, 0% 100%, from( #272f33 ), to( #5a6c75 ) );

	background-color: #93dbde55;
	border: 1px solid white;
}

.HUDButton.Activated
{
	sound: "ui_quit_menu_fadeout";
}

.BlueButton
{
	margin: 8px;
	border: 1px solid #3366aa55;
	height: 34px;
	background-color: #3366aa11;
}

.BlueButton Label
{
	margin: 7px 24px 0px 24px;
	color: #66aadd;
	font-size: 16px;
	letter-spacing: normal;
//	text-transform: uppercase;
}

.BlueButton:enabled:hover Label
{
	color: white;
}

.BlueButton:enabled:hover
{
	border: 1px solid #22aaffaa;
	background-color: #3366aa44;
}

.BlueButton:active
{
	background-color: #23468a44;
	sound: "ui_select_blue";
}

.BlueButton:active Label
{
	color: #76baed;
}

.BlueButton:disabled
{
	wash-color: #000000DD;
	saturation: 0;
}

//
//  Flat Button for the times when the understated look says more
//

.FlatButton
{
	margin: 8px;
	height: 28px;
	background-color: #202626;
}

.FlatButton Label
{
	margin: 4px 24px 0px 24px;
	color: #737e7e;
	font-size: 16px;
	letter-spacing: normal;
	text-transform: uppercase;
	letter-spacing: 1px;
}

.FlatButton:hover Label
{
	color: white;
}

.FlatButton:hover
{
	background-color: #333d3c;
}

.FlatButton:active
{
	background-color: #181c1c;
	sound: "ui_select_blue";
}

.FlatButton:active Label
{
	color: #6c6c6c;
}


//
//  Play Button Looking Button
//

.PlayGameButton
{
	vertical-align: bottom;
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #5A615Ecc ), to( #879695cc ));
	box-shadow: fill #002a6644 -4px -4px 8px 9px;
	border-top: 1px solid #ffffff44;
	border-right: 1px solid #00000088;
	border-left: 1px solid #ffffff44;
	border-bottom: 1px solid #00000088;

	transition-property: background-color;
	transition-duration: .2s;

	wash-color: #99999922;
}

.PlayGameButton:hover
{

	background-color: gradient( linear, 0% 0%, 0% 100%, from( #5f6663 ), to( #b4c2c1 ));
}

.PlayGameButton:active
{
	wash-color: #ffffff;
}

.PlayGameButton Label
{
	font-size: 24px;
	font-weight: normal;
	letter-spacing: 1px;
	text-transform: uppercase;
	color: #d5d7d7;
	vertical-align: middle;
}

.PlayGameButton:hover Label
{
	color: white;
}


.BigButtonPanel
{
	width: 150px;
	height: 32px;
	horizontal-align: center;

	flow-children: down;

	border: 2px solid #AAAAAAFF;

  	background-color: #666666FF;
	border-radius: 3%;
	box-shadow: #00000066 -4px -4px 8px 8px;

	margin: 4px;
}

.BigButtonPanel Label
{
	vertical-align: center;
	horizontal-align: center;
	font-size: 24px;
	text-shadow: 0px 0px 6px 3.0 #000000;
}

.BigButtonPanel:hover Label
{
	color: white;
}

.BigButtonPanel:hover
{
	border: 1px solid #22aaffaa;
	background-color: #3366aa44;
}

.BigButtonPanel:active
{
	background-color: #23468a44;
}

.BigButtonPanel:active Label
{
	color: #76baed;
}


.BigButtonPanelWide
{
	width: 308px;
	height: 32px;
	horizontal-align: center;

	flow-children: down;

	border: 2px solid #AAAAAAFF;

  	background-color: #666666FF;
	border-radius: 3%;
	box-shadow: #00000066 -4px -4px 8px 8px;

	margin: 4px;
}

.BigButtonPanelWide Label
{
	vertical-align: center;
	horizontal-align: center;
	font-size: 24px;
	text-shadow: 0px 0px 6px 3.0 #000000;
}

.BigButtonPanelWide:hover Label
{
	color: white;
}

.BigButtonPanelWide:hover
{
	border: 1px solid #22aaffaa;
	background-color: #3366aa44;
}

.BigButtonPanelWide:active
{
	background-color: #23468a44;
}

.BigButtonPanelWide:active Label
{
	color: #76baed;
}

.ControlIconButton
{
    width: 28px;
    height: 28px;
    wash-color: #888888;
    background-image: url("s2r://panorama/images/control_icons/dota_logo_white_png.vtex");
    background-size: 100% 100%;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    pre-transform-scale2d: 1;
    margin: 4px;
    transition-property: wash-color, pre-transform-scale2d;
    transition-duration: 0.1s;
    transition-timing-function: ease-in;
}

.ControlIconButton:hover
{
    wash-color: #bbbbbb;
}

.ControlIconButton:active
{
    wash-color: white;
    background-size: 24px 24px;
}

.RefreshButton
{
    background-image: url("s2r://panorama/images/control_icons/refresh_psd.vtex");
}

.RefreshButton.Activated
{
    animation-name: RefreshButtonAnimation;
    animation-duration: 0.55s;
    animation-delay: 0.15s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 1;
    animation-direction: reverse;
}


@keyframes 'RefreshButtonAnimation'
{
    0%
    {
        transform: rotateZ( 0deg );
    }

    100%
    {
        transform: rotateZ( 180deg );
    }
}

.CloseButton
{
    width: 24px;
    height: 24px;
    wash-color: #888888;
    background-image: url("s2r://panorama/images/control_icons/x_close_png.vtex");
    background-size: 24px 24px;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    margin: 4px;
    transition-property: wash-color, pre-transform-scale2d, background-color;
    transition-duration: 0.1s;
    transition-timing-function: ease-in;
}

.CloseButton:hover
{
    wash-color: #bbbbbb;
}

.CloseButton:active
{
    wash-color: white;
    background-size: 20px 20px;
    //pre-transform-scale2d: 0.8;
    sound: "ui_friends_slide_in";
}

.CloseButtonPanel
{
	width: 32px;
	height: 32px;
	horizontal-align: right;

	flow-children: down;

	border: 2px solid #AAAAAAFF;

  	background-color: #666666FF;
	border-radius: 3%;
	box-shadow: #00000066 -4px -4px 8px 8px;

	margin: 4px;
}

.CloseButtonPanel Label
{
	vertical-align: center;
	horizontal-align: center;
	font-size: 24px;
	text-shadow: 0px 0px 6px 3.0 #000000;
}

.CloseButtonPanel:hover Label
{
	color: white;
}

.CloseButtonPanel:hover
{
	border: 1px solid #22aaffaa;
	background-color: #3366aa44;
}

.CloseButtonPanel:active
{
	background-color: #23468a44;
}

.CloseButtonPanel:active Label
{
	color: #76baed;
}

#Tooltips, #ContextMenuManager
{
	width: 100%;
	height: 100%;
}

#ContextMenuManager, #Tooltips
{
	z-index: 2;
}

.Arrow
{
    width: 60px;
    height: 60px;
    vertical-align: middle;
    wash-color: #9db1b7;
    background-image: url("s2r://panorama/images/control_icons/arrow_right_png.vtex");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: 50% 50%;
    margin-right: 3px;
    margin-left: 3px;
    transition-property: wash-color, transform;
    transition-duration: 0.2s;
    transition-timing-function: ease-in-out;
}

.Arrow:enabled:hover
{
    wash-color: white;
}

.Arrow.Left
{
    horizontal-align: left;
    transform: scaleX(-1);
}

.Arrow.Left:enabled:hover
{
    transform: scaleX(-1) translateX(-3px);
}

.Arrow.Right
{
    horizontal-align: right;
}

.Arrow.Right:enabled:hover
{
    transform: translateX(3px);
}

.Arrow.Left:active
{
    transform: scaleX(-1) translateX(-6px);
    sound: "ui_select_arrow";
}

.Arrow.Right:active
{
    transform: translateX(6px);
    sound: "ui_select_arrow";
}

.Arrow.Left:disabled
{
    opacity: 0.1;
    transform: scaleX(-1) translateX(0px);
    pre-transform-scale2d: .1;
}

.Arrow.Right:disabled
{
    opacity: 0.1;
    transform: translateX(0px);
    pre-transform-scale2d: .1;
}

.ExpandDownArrow
{
    height: 16px;
    width: 16px;
    background-image: url("s2r://panorama/images/control_icons/arrow_dropdown_png.vtex");
    background-size: contain;
    wash-color: #888888;
    margin-left: 4px;
    margin-right: 4px;
    margin-top: -1px;
    transition-property: wash-color, transform, opacity;
    transition-duration: 0.24s;
    transition-timing-function: ease-in-out;
}

.PaginationArrow
{
    background-image: url("s2r://panorama/images/control_icons/arrow_solid_right_png.vtex");
    background-repeat: no-repeat;
    background-color: #90a3a8;
    background-size: 12px 12px;
    background-position: 63% 50%;
    border-radius: 50%;
    width: 23px;
    height: 23px;
    vertical-align: top;
    margin-right: 4px;
    opacity: 0.2;
    transition-property: opacity;
    transition-duration: 0.2s;
}

.PaginationArrow:enabled:hover
{
    opacity: 0.6;
}

.PaginationArrow:active
{
    opacity: 1.0;
}

.PaginationArrow:disabled
{
    brightness: 0.5;
}

.PaginationArrow.Left
{
    transform: scaleX( -1.0 );
}

.PaginationArrow.Right
{
}

.PaginationArrow.Up
{
    transform: rotateZ( -90.0deg );
}

.PaginationArrow.Down
{
    transform: rotateZ( 90.0deg );
}

.PaginationButton
{
    //background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( #7e8f93 ), to( #000000 ) );
    background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, color-stop(0.0, #7e8f93 ), color-stop(0.5, #7e8f93), color-stop(0.6, #00000000 ) );
    //background-color: #7e8f93;
    background-repeat: no-repeat;
    //background-size: 10px 20px;
    background-position: 50% 50%;
    width: 16px;
    height: 16px;
    //padding: 10px;
    margin: 1px 0px 1px 1px;
    vertical-align: center;
    opacity: .2;
    border-radius: 50%;
}

.Gold.PaginationButton,
.Gold.PaginationButton:selected
{
    background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, color-stop(0.0, #FAAB36 ), color-stop(0.5, #FAAB36), color-stop(0.6, #00000000 ) );
}

.Silver.PaginationButton,
.Silver.PaginationButton:selected
{
    background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, color-stop(0.0, #B7B7B7 ), color-stop(0.5, #B7B7B7), color-stop(0.6, #00000000 ) );
}

.Red.PaginationButton,
.Red.PaginationButton:selected
{
    background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, color-stop(0.0, #aa2305 ), color-stop(0.5, #aa2305), color-stop(0.6, #00000000 ) );
}

.Green.PaginationButton,
.Green.PaginationButton:selected
{
    background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, color-stop(0.0, #0caa05 ), color-stop(0.5, #20aa05), color-stop(0.6, #00000000 ) );
}

.Blue.PaginationButton,
.Blue.PaginationButton:selected
{
    background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, color-stop(0.0, #0563aa ), color-stop(0.5, #0563aa), color-stop(0.6, #00000000 ) );
}


.PaginationButton:enabled:hover
{
    opacity: 0.6;
}

.PaginationButton:selected
{
    //background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, from( #e7f6f5 ), to( #333399 ) );
    background-color: gradient( radial, 50% 50%, 0% 0%, 50% 50%, color-stop(0.0, #9db1b7 ), color-stop(0.5, #9db1b7), color-stop(0.6, #00000000 ) );
    //background-color: #90a3a8;
    opacity: 1;
    border-radius: 50%;
}

@keyframes 'OpacityPulse'
{
    0%
    {
        opacity: 1.0;
    }

    50%
    {
        opacity: 0.2;
    }

    100%
    {
        opacity: 1.0;
    }

}

/* ------------------------------------------------------------------------- */
/*  DropDown                                                                 */
/* ------------------------------------------------------------------------- */
DropDown
{
	background-color: #292e2e;
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #292e2e ), to( #191e1e ) );

	background-image: url("s2r://panorama/images/control_icons/arrow_dropdown_png.vtex");

	background-repeat: no-repeat;
	background-position: right 38px 35%;
	background-size: 32px 32px;
	box-shadow: #00000055 -2px -2px 1px 4px;

	border: 2px solid #5e686966;

	font-size: 24px;
	width: 320px;
	height: 41px;
	padding: 4px 8px;
	z-index: 1;
	vertical-align: center;

	transition-property: background-color, border;
	transition-duration: 0.15s;
	transition-timing-function: linear;
}

DropDown:enabled:hover
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #393e3e ), to( #292e2e ) );
}

DropDown:focus .TickBox
{
	text-overflow: clip;
	white-space: nowrap;
}

DropDown:focus
{

}

DropDown:disabled
{
	background-color: gradient( linear, 0% 0%, 0% 100%, from( #292e2e ), to( #191e1e ) );
	border: 2px solid #3b414266;
	background-image: url("s2r://panorama/images/control_icons/arrow_dropdown_disabled_png.vtex");
}

DropDown:disabled Label
{
	color: #444444;
}

DropDown.DropDownMenuVisible:hover
{

}

DropDown.DropDownMenuVisible:focus
{
	animation-name: none;
}

DropDown Label
{
	width: 100%;
	margin: 0px 29px 0px 6px;
	font-size: 18px;
    vertical-align: center;

	transition-property: color;
	transition-duration: 0.15s;
	transition-timing-function: linear;
}

DropDown:focus Label
{
	color: white;
}

DropDown.DropDownMenuVisible:focus Label
{
	color: white;
}

DropDownMenu
{

//	width: fill-parent-flow (1.0);
	width: 320px;
	flow-children: down;
	background-color: #3d4448;
	color: #e1e1e1;
	font-size: 28px;
	overflow: squish scroll;
	z-index: 0;
	transform: translateY(-40px);
	opacity: 0.0;

	transition-property: opacity, transform;
	transition-duration: 0.15s;
	transition-timing-function: ease-in;

	box-shadow: fill #00000066 -3px -3px 6px 6px;
}

DropDownMenu Label
{
	width: 100%;
	padding: 6px 0px 2px 0px;
	margin-top: 0px 0px;
	margin-right: 0px;
	margin-left: 0px;
	padding-left: 16px;

	color: #ffffff99;
	background-color: #3d4448;

	font-size: 18px;
	font-weight: normal;
	z-index: 0;
	border-top: 1px solid #00000066;
	border-bottom: 1px solid #00000066;

	transition-property: background-color;
	transition-duration: 0.2s;
	transition-timing-function: ease-in-out;
}

DropDownMenu Label:hover
{
	background-color: #585e62;
}

DropDownMenu.DropDownMenuVisible
{
	opacity: 1.0;

	max-height: 444px;
	transition-property: box-shadow;
	transform: translateY(0px);
}

DropDown.ThinDropDown
{
	height: 32px;

	background-size: 24px 24px;
	background-position: right 32px 35%;
}

.ThinDropDown Label
{
	font-size: 18px;
}

// AvatarImage
DCGAvatarImage .AvatarImage
{
	width: 100%;
	height: 100%;
	z-index: 2;
}

DCGAvatarImage .AvatarBorderImage
{
	width: 100%;
	height: 100%;
	opacity: 0;
}

/* Rich Presence colors */
.StateFindingMatch DCGUserRichPresence.FriendPlayingGame Label, .StateFindingMatch DCGUserName.FriendPlayingGame Label a .PersonaName		{ color: #CDFFC9; text-shadow: 0px 0px 6px 2.0 #6A9561;}
DCGUserRichPresence.FriendPlayingGame Label, DCGUserName.FriendPlayingGame Label a .PersonaName			{ color: #d0b891; }
DCGUserRichPresence.FriendPlayingGameIdle Label, DCGUserName.FriendPlayingGameIdle Label a .PersonaName	{ color: #d0b891; }
DCGUserRichPresence.FriendPending Label, DCGUserName.FriendPending Label a .PersonaName					{ color: #d0b891; }
DCGUserRichPresence.FriendOnline Label, DCGUserName.FriendOnline Label a .PersonaName					{ color: #d0b891; }
DCGUserRichPresence.FriendOffline Label, DCGUserName.FriendOffline Label a .PersonaName					{ color: #aaaaaa; }

DCGCardName,
.CardNameColor_Neutral,
.CardNameColor_Colorless
{
    color: goldenrod;
}

DCGCardName.CardColor_Red,
.CardNameColor_Red
{
    color: cardColorRed;
}

DCGCardName.CardColor_Green,
.CardNameColor_Green
{
    color: cardColorGreen;
}

DCGCardName.CardColor_Blue,
.CardNameColor_Blue
{
    color: cardColorBlue;
}

DCGCardName.CardColor_Black,
.CardNameColor_Black
{
    color: cardColorBlack;
}

DCGCardName.ClickForCardInfo:hover
{
   text-decoration: underline;
}


.CurrencyIcon
{
    width: 20px;
    height: 20px;
	background-size: 100% 100%;
	background-color: none;
}

.CurrencyIcon.CurrencyID_0
{
    background-image: url("s2r://panorama/images/dcg/card_artwork/buyback_png.vtex");
}

.CurrencyValue.CurrencyID_0
{
    color: gold;
}

.RatingsValue.RatingsID_3
{
    color: green;
}

ProgressBar
{
    width: 320px;
    height: 22px;
    border: 3px solid black;
    border-radius: 2px;
    background-color: #000000ff;
    box-shadow: #00000066 -3px -3px 6px 6px;
}

.ProgressBarLeft
{
    background-color: gradient( linear, 0% 0%, 100% 0%, from( #222222FF ), to( #444f52FF ) );
}

//
// Slider
//

Slider
{
    // needs to be at least as wide as the thumb and, as the thumb center stops at end // of track, needs to allow for 1/2 the height of the thumb on each end width: 30px;
    height: 130px;
    margin-bottom: 20px;
}

#SliderTrack {
    height: 120px;
    width: 16px;
    background-color: #283842;
    align: center center;
    background-color: black;
    border: 2px solid #5e686966;
    box-shadow: #00000055 -2px -2px 1px 4px;
    z-index: 2;
}

SlottedSlider.HorizontalSlider .SliderNotch {
    margin-top: 14px;
    border-bottom: 2px solid #5e686966;
    border-left: 2px solid #5e686966;
    border-right: 2px solid #5e686966;
    background-color: black;
    //border-radius: 13%;
    width: 12px;
    height: 12px;
    vertical-align: bottom;
    z-index: 3;
}

#SliderTrackProgress {
    width: 10px;
    height: 99%;
    background-color: gradient( linear, 0% 100%, 0% 0%, from( #222222FF ), to( #444f52FF ) );
    align: center center;
    border-radius: 3px;
    z-index: 3;
}

#SliderThumb {
    background-color: gradient( radial, 50% 50%, -5% -5%, 60% 60%, from( #91a5b9 ), to( #444f52 ) );
    border-radius: 13%;
    width: 30px;
    height: 16px;
    box-shadow: fill black 1px 1px 32px 0px;
    z-index: 4;
}

// VR
ClientUIDialogPanel #SliderThumb
{
    box-shadow: none;
}

#SliderThumb:hover
{
    background-color: gradient( radial, 50% 50%, -5% -5%, 60% 60%, from( #b8c5d3 ), to( #444f52 ) );
}

Slider.HorizontalSlider, SlottedSlider.HorizontalSlider
{
    width: 420px;
    height: 30px;
}

Slider.HorizontalSlider #SliderTrack, SlottedSlider.HorizontalSlider #SliderTrack
{
    height: 16px;
    width: 100%;
    padding: 10px;
}

Slider.HorizontalSlider #SliderTrackProgress, SlottedSlider.HorizontalSlider #SliderTrackProgress
{
    width: 100%;
    height: 10px;
    background-color: gradient( linear, 0% 0%, 100% 0%, from( #222222FF ), to( #444f52FF ) );
    box-shadow: inset black 0px 1px 4px 0px;
    margin-left: 1px;
}

Slider.HorizontalSlider #SliderTrackProgress:disabled, SlottedSlider.HorizontalSlider #SliderTrackProgress:disabled
{
    width: 100%;
    height: 10px;
    background-color: gradient( linear, 0% 0%, 100% 0%, from( #010101FF ), to( #333333FF ) );
    box-shadow: inset black 0px 1px 4px 0px;
    // flickering when sliding...bug? margin-left: 1px;
}

Slider.HorizontalSlider #SliderThumb, SlottedSlider.HorizontalSlider #SliderThumb
{
    background-color: gradient( radial, 50% 50%, -5% -5%, 60% 60%, from( #91a5b9 ), to( #444f52 ) );
    border-radius: 13%;
    width: 16px;
    height: 30px;
}

Slider.HorizontalSlider #SliderThumb:hover, SlottedSlider.HorizontalSlider #SliderThumb:hover
{
    background-color: gradient( radial, 50% 50%, -5% -5%, 60% 60%, from( #b8c5d3 ), to( #444f52 ) );
}

Slider.HorizontalSlider #SliderThumb:disabled, SlottedSlider.HorizontalSlider #SliderThumb:disabled
{
    background-color: #333333;
}

.PreGame #PreGameLabel
{
    opacity: 1;
}

.SliderTick {
    width: 4px;
    height: 14px;
    background-color: #3B4242;
}

@define toastExitDuration: 0.3s;
#ToastManager
{
	margin-top: 400px;
	height: 100%;
	width: 350px;
	flow-children: down;
}

#ToastManager > .ToastPanel
{
	opacity: 0.0;
	transform: translateX( -40px );
    width:100px;
    height:100px;
	transition-property: position, opacity, transform;
	transition-duration: toastExitDuration;
}

#ToastManager > .ToastPanel.ToastVisible
{
	opacity: 1.0;
	transform: none;
}

DCGDashboardPopupManager #DimBackground
{
	background-blur: gaussian( 7 );
	background-color: #000000ee;
}

DCGDashboardPopupManager #DimBackground.Hidden
{
	visibility: collapse;
}
