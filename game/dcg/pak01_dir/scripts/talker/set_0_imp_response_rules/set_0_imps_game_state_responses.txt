
// this file handles responses for changes in key game states



//====  LANE UNITS ========================================================================================================================================================================================================================================
//=========================================================================================================================================================================================================================================================


// player has NO LOCAL UNITS: 


// player:

Response imps_local_negative_no_local_units_broad
{
	activity "ACT_DECK_IMP_REACT_NO_LOCAL_UNITS_PLAYER:98" then self TLK_DCG_SPECIAL IsChainingToPlayerNoLocalUnitsIdleLoop:1 0.2

}

Response imps_local_negative_no_local_units_idle
{
	activity "ACT_DECK_IMP_REACT_NO_LOCAL_UNITS_IDLE_LOOP_PLAYER" 
}


// opponent's reaction:


Response imps_opponent_positive_no_local_units_idle
{
	activity "ACT_DECK_IMP_REACT_NO_LOCAL_UNITS_IDLE_LOOP_OPPONENT" 
}


Response imps_opponent_positive_no_local_units_player_losing
{
	activity "ACT_DECK_IMP_REACT_NO_LOCAL_UNITS_OPPONENT" 
}



// opponent has NO OPPONENT UNITS: 

// player:

Response imps_local_positive_no_opponent_units_broad
{
	activity "ACT_DECK_IMP_REACT_NO_OPPONENT_UNITS_PLAYER:98" then self TLK_DCG_SPECIAL IsChainingToPlayerNoOpponentUnitsIdleLoop:1 0.2
}


Response imps_local_positive_no_opponent_units_idle
{
	activity "ACT_DECK_IMP_REACT_NO_OPPONENT_UNITS_IDLE_LOOP_PLAYER" 
}


// opponent's reaction:


Response imps_opponent_negative_no_opponent_units_idle
{
	activity "ACT_DECK_IMP_REACT_NO_OPPONENT_UNITS_IDLE_LOOP_OPPONENT" 
}





//====   TIMER ============================================================================================================================================================================================================================================
//=========================================================================================================================================================================================================================================================

// player:

Response imps_local_10_secs_remain
{
	activity "ACT_DECK_IMP_10_SECS_REM_PLAYER_PLAYER:100"
}

Response imps_local_0_secs_remain
{
	activity "ACT_DECK_IMP_0_SECS_REM_PLAYER_PLAYER:100"
}


// opponent:

Response imps_opponent_10_secs_remain
{
	activity "ACT_DECK_IMP_10_SECS_REM_OPPONENT_OPPONENT"
}



//====   WINNING \ LOSING IDLE TRIGGERS  ======================================================================================================================================================================================================
//=============================================================================================================================================================================================================================================


Response imps_local_winning_game_idle
{
	activity "ACT_DECK_IMP_IDLE_WINNING_PLAYER"
}

Response imps_opponent_winning_game_idle
{
	activity "ACT_DECK_IMP_IDLE_OPPONENT_WINNING_OPPONENT"
}

Response imps_local_losing_game_idle_intro
{
	
	activity "ACT_DECK_IMP_IDLE_LOSING_INTRO_PLAYER" then self TLK_DCG_SPECIAL IsChainingToPlayerLoseIdleLoop:1 -0.2
}

Response imps_local_losing_game_idle_loop
{
	
	activity "ACT_DECK_IMP_IDLE_LOSING_LOOP_PLAYER" 
	
}















// this handles the idle states for low local units thats gets fired after the initial broader reaction to that state

// player:





//====   PAUSE  ===========================================================================================================================================================================================================================================
//=========================================================================================================================================================================================================================================================



// note: responses use above criterion to force a second response (rule_imps_local_paused_loop) after the paused_intro activity finishes. The variables above are checked against in the RULES 


// player:


Response imps_local_paused_intro
{
	activity "ACT_DECK_IMP_REACT_PLAYER_PAUSE_START" then self TLK_DCG_SPECIAL IsChainingToPlayerPauseLoop:1 0.2
}

Response imps_local_paused_loop
{
	activity "ACT_DECK_IMP_REACT_PLAYER_PAUSE_LOOP" 
}

Response imps_local_paused_end
{
	activity "ACT_DECK_IMP_REACT_PLAYER_PAUSE_END" 
}


// opponent:


Response imps_opponent_paused_intro
{
	activity "ACT_DECK_IMP_REACT_OPPONENT_PAUSE_START" then self TLK_DCG_SPECIAL IsChainingToOpponentPauseLoop:1 0.2
}

Response imps_opponent_paused_loop
{
	activity "ACT_DECK_IMP_REACT_OPPONENT_PAUSE_LOOP" 
}

Response imps_opponent_paused_end
{
	activity "ACT_DECK_IMP_REACT_OPPONENT_PAUSE_END" 
}






//====   TOWERS  ==========================================================================================================================================================================================================================================
//=========================================================================================================================================================================================================================================================





// GAINED death skulls:
// ==============================================================


// player tower:


Response imps_local_negative_player_tower_gained_death_skull
{
	
	activity "ACT_DECK_IMP_REACT_LOCAL_TOWER_GAINED_SKULL_PLAYER:100" then self TLK_DCG_SPECIAL IsChainingToPlayerLocalTowerHasDeathSkullIdle:1 0.2
}

Response imps_local_negative_player_tower_has_death_skull_idle
{
 
  activity "ACT_DECK_IMP_REACT_LOCAL_TOWER_HAS_DEATH_SKULL_IDLE_PLAYER:98" 
 
}


Response imps_opponent_positive_player_tower_has_death_skull_idle
{
	activity "ACT_DECK_IMP_REACT_LOCAL_TOWER_HAS_DEATH_SKULL_IDLE_OPPONENT:98"   
}


Response imps_opponent_positive_player_tower_gained_death_skull_player_losing 
{
	activity "ACT_DECK_IMP_REACT_LOCAL_TOWER_GAINED_DEATH_SKULL_OPPONENT:98"   then self TLK_DCG_SPECIAL IsChainingToOpponentLocalTowerHasDeathSkullIdle:1 0.2
}




// opponent's tower:



Response imps_local_positive_opponent_tower_gained_death_skull
{
	activity "ACT_DECK_IMP_REACT_OPPONENT_TOWER_GAINED_SKULL_PLAYER:100"   then self TLK_DCG_SPECIAL IsChainingToPlayerOpponentTowerHasDeathSkullIdle:1 0.2	
}


Response imps_local_positive_opponent_tower_has_death_skull_idle
{
 
  activity "ACT_DECK_IMP_REACT_OPPONENT_TOWER_HAS_DEATH_SKULL_IDLE_PLAYER:98" 
 
}


Response imps_opponent_negative_opponent_tower_has_death_skull_idle
{
 
  activity "ACT_DECK_IMP_REACT_OPPONENT_TOWER_HAS_DEATH_SKULL_IDLE_OPPONENT:98" 
 
}



// REMOVED death skulls:
// ==============================================================

// player tower:



Response imps_local_positive_player_tower_removed_death_skull
{
  
  activity "ACT_DECK_IMP_LOCAL_REMOVED_DEATH_SKULL_POSITIVE_PLAYER:99" then self TLK_DCG_SPECIAL IsChainingToPlayerBlinkReturn:1 0.2
  
}

Response imps_opponent_negative_player_tower_removed_death_skull
{
 
  activity "ACT_DECK_IMP_REACT_BROAD_NEGATIVE_OPPONENT:99"
  
}


// opponent tower:


Response imps_local_negative_opponent_tower_removed_death_skull
{
  
  activity "ACT_DECK_IMP_REACT_BROAD_NEGATIVE_PLAYER:99" 
  
}

Response imps_opponent_positive_opponent_tower_removed_death_skull
{
 
  activity "ACT_DECK_IMP_REACT_BROAD_POSITIVE_OPPONENT:99"
  
}







// TIMER BASED DEATH SKULL IDLE (WITH LOOP):
// ==============================================================


// note: because of the :98 priority, this will loop until the death skull is removed from the lane (by the avove priority :99), so normal reactions to buffs etc wont interrupt it





// destroyed towers (not game win or lose):
// ==============================================================



// opponent's tower:

Response imps_local_opponent_tower_destroyed_player_wait
{
	activity "ACT_DECK_IMP_REACT_WAIT_PLAYER" then self TLK_DCG_SPECIAL IsChainingToPlayerOpponentTowerDestroyed:1 1	
}

Response imps_local_positive_opponent_tower_destroyed_player
{
	//activity "ACT_DECK_IMP_REACT_OPPONENT_TOWER_DESTROYED:99"   then self TLK_DCG_SPECIAL IsChainingToPlayerBlinkReturn:1 0.2		
	
	activity "ACT_DECK_IMP_REACT_OPPONENT_TOWER_GAINED_SKULL_PLAYER:100"   then self TLK_DCG_SPECIAL IsChainingToPlayerBlinkReturn:1 0.2	
	
  // NEEDS CONTENT!!!!
}


// player's tower:

Response imps_local_player_tower_destroyed_player_wait
{
	activity "ACT_DECK_IMP_REACT_WAIT_PLAYER" then self TLK_DCG_SPECIAL IsChainingToPlayerTowerDestroyed:1 2	
}

Response imps_local_negative_tower_destroyed_player
{
	
	//activity "ACT_DECK_IMP_REACT_PLAYER_TOWER_DESTROYED:99"   then self TLK_DCG_SPECIAL IsChainingToPlayerBlinkReturn:1 0.2		
	
	activity "ACT_DECK_IMP_REACT_LOCAL_TOWER_GAINED_SKULL_PLAYER" then self TLK_DCG_SPECIAL IsChainingToPlayerBlinkReturn:1 0.2
	
  // NEEDS CONTENT!!!!	
}




// game win and lose:
// ==============================================================





// player wins game:
//====================

// player reaction to player win:

Response imps_end_game_player_win_wait_player
{
	activity "ACT_DECK_IMP_REACT_WAIT_PLAYER" then self TLK_DCG_SPECIAL IsChainingToPlayerWaitGameVictory:1 4
}


Response imps_end_game_player_win_player
{
	activity "ACT_DECK_IMP_REACT_VICTORY" 
}


// opponent reaction to player win:


Response imps_end_game_player_win_opponent
{
	activity "ACT_DECK_IMP_REACT_DEFEAT_OPPONENT" 
}



// opponent wins game:
//======================


// opponent reaction to opponent win:


Response imps_end_game_opponent_win_opponent
{
	activity "ACT_DECK_IMP_REACT_VICTORY_OPPONENT" 
}


// player reaction to player win:


Response imps_end_game_opponent_win_player
{
	activity "ACT_DECK_IMP_REACT_DEFEAT" 
}




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//  BLUE_BUTTON
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Response imps_dev_blue_button_Pp_Pr_chain_outro
{
    Activity "ACT_DECK_IMP_BLINK_RETURN_PLAYER:200"
}

Response imps_dev_blue_button_Pp_Pr_chain_intro
{
    Activity "ACT_DECK_IMP_BLUE_BUTTON_POSITIVE_PLAYER:200" then self TLK_DCG_SPECIAL p_var_chains_dev_blue_button_:1:1 0.2
}

Response imps_dev_blue_button_Op_Or
{
    Activity "ACT_DECK_IMP_REACT_VICTORY_OPPONENT:200"
}