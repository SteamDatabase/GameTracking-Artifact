
!
!g*
!£ﬁÅsæ
!Ÿæˇ!Ÿæ
"
" because it is missing required fields:
" conflicts with the existing symbol "
" for field "
" for option "
" has no field named "
" has no value named "
" has not been loaded.
" implements neither SetCachedSize() nor ByteSize().  Must implement one or the other.
" imports "
" in type "
" is a message. To set the entire message, use syntax like "
" is a repeated message. Repeated message options must be initialized using an aggregate value.
" is already defined (as something other than a package) in file "
" is already defined in "
" is already defined in file "
" is already defined.
" is an atomic type, not a message.
" is missing required fields:
" is not a field or extension of message "
" is not a message type.
" is not a type.
" is not a valid identifier.
" is not an enum type.
" is not defined or is not an extension of "
" is not defined.
" is resolved to "
" is resolved to "(
" is specified along with field "
" is specified multiple times.
" must be unique within
" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.
" seems to be defined in "
" unknown.
" uses the same enum value as "
" was already set.
" was listed twice.
" was not found or had errors.
" which is not used.
" which is.
"$0" does not declare $1 as an extension number.
") is not compatible with this reflection object (which is for type "
") to start from the outermost scope.
").  Note that the exact same class is required; not just the same descriptor.
", another member of oneof "
", but only
", field number
", found "
", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., ".
", which is not imported by "
".  To use it here, please add the necessary import.
". If this is intended, set 'option allow_alias = true;' to the enum definition.
". This appears to be a value from a sibling type.
". Value: "
".)
"/*" inside block comment.  Block comments cannot be nested.
"0x" must be followed by hex digits.
":
"MutableRawRepeatedField"
"e" must be followed by exponent.
"g*
#
#%u %s
#%u %s '%s'
#g*
$
$0  extend .$1 {
$0  extensions $1 to $2;
$0  message $1
$0  }
$0 oneof $1 {
$0$1 = $2
$0$1$2 $3 = $4
$0enum $1 {
$0option $1;
$0rpc $1(.$2) returns (.$3)
$0}
$@
$g*
%
%%%d
%.*g
%.0f
%.18g
%.1f
%.2f
%019lu
%5lu file=%s, line=%d,
%[0-9]-%[0-9]
%d byte packet is too small
%d consecutive session request timeouts at %s; marking address as failed.
%d%+d/%d%+d
%d%n
%d.%d.%d
%d.%d.%d.%d:%d
%f
%g
%g*
%hu:%u:%u%c
%i.%i.%i.%i
%i.%i.%i.%i:%i
%ld
%ld bytes leaked in %d chunks
%lli
%s
%s      0-25  :%5d  %3.0f%%
%s      1024+ KB/s:%5d  %3.0f%%
%s      300+  :%5d  %3.0f%%
%s     0 - 16 KB/s:%5d  %3.0f%%
%s     100  :%5d  %3.0f%%   (All packets received in order)
%s     25-50  :%5d  %3.0f%%
%s     5%% of pings <= %4dms
%s     5%% of speeds <= %4d KB/s
%s     50-75  :%5d  %3.0f%%
%s     75-100 :%5d  %3.0f%%
%s     99+  :%5d  %3.0f%%
%s     <1  :%7d  %3.0f%%
%s     <50  :%5d  %3.0f%%
%s    1-2  :%7d  %3.0f%%
%s    100-125 :%5d  %3.0f%%
%s    125-150 :%5d  %3.0f%%
%s    150-200 :%5d  %3.0f%%
%s    16 - 32 KB/s:%5d  %3.0f%%
%s    2-5  :%7d  %3.0f%%
%s    200-300 :%5d  %3.0f%%
%s    32 - 64 KB/s:%5d  %3.0f%%
%s    5-10 :%7d  %3.0f%%
%s    50%% of intervals >= %3d%%
%s    50%% of pings <= %4dms
%s    50%% of speeds <= %4d KB/s
%s    50-75 :%5d  %3.0f%%
%s    75%% of intervals >= %3d%%
%s    75%% of pings <= %4dms
%s    75%% of speeds <= %4d KB/s
%s    75-90 :%5d  %3.0f%%
%s    90-95 :%5d  %3.0f%%
%s    95%% of intervals >= %3d%%
%s    95%% of pings <= %4dms
%s    95%% of speeds <= %4d KB/s
%s    95-97 :%5d  %3.0f%%
%s    97-99 :%5d  %3.0f%%
%s    98%% of intervals >= %3d%%
%s    98%% of pings <= %4dms
%s    98%% of speeds <= %4d KB/s
%s    >20  :%7d  %3.0f%%
%s    Dropped   :%11s pkts%7.2f%%
%s    Duplicate :%11s pkts%7.2f%%
%s    OutOfOrder:%11s pkts%7.2f%%
%s    Recv w seq:%11s pkts
%s    Recv:%11s pkts %15s bytes
%s    Sent:%11s pkts %15s bytes
%s    SeqLurch  :%11s pkts%7.2f%%
%s    dead  :%5d  %3.0f%%   (Expected to receive something but didn't)
%s   10-20 :%7d  %3.0f%%
%s   64 - 128 KB/s:%5d  %3.0f%%
%s  128 - 256 KB/s:%5d  %3.0f%%
%s  256 - 512 KB/s:%5d  %3.0f%%
%s (%d) :
%s 512 - 1024 KB/s:%5d  %3.0f%%
%s [%s] appears preferable to current primary %s [%s], but most recent communication is too long ago or ping sample is too stale.  Pinging.
%s ack was pended for %lld usec, cannot pack delay properly!  usecNow=%llx, timestamp=%llx, usecThen=%llx
%s acked our routes for connection %u at revision %u, but our latest revision is %u!
%s appears to be SDR public address.
%s downtime warning expired; assumed back online.
%s isn't valid SteamID for identity.
%s#%d (%s)
%s(%d): OpenSSL internal error, assertion failed: %s
%s=%lld
%s=%llu
%s=%s
%sBytes buffered: %s
%sConnection quality distribution:
%sConnection quality histogram: (%d measurement intervals)
%sCurrent rates:
%sEst avail bandwidth: %.1fKB/s
%sLatency variance histogram not available
%sLatency variance histogram: (%d total measurements)
%sLifetime stats received from remote host %.1fs ago:
%sLifetime stats:
%sNo connection quality distribution available.  (%d measurement intervals)
%sNo connection recieve speed distribution available.  (%d measurement intervals)
%sNo connection transmit speed distribution available.  (%d measurement intervals)
%sNo lifetime stats received from remote host
%sNo ping distribution available.  (%d samples)
%sNo rate stats received from remote host
%sPing distribution:
%sPing histogram: (%d total samples)
%sPing:%sms    Max latency variance: %sms
%sQuality:%5s%%  (Dropped:%4s%%  WeirdSeq:%4s%%)
%sRX Speed histogram: (%d total samples)
%sRate stats received from remote host %.1fs ago:
%sReceive speed distribution:
%sRecv:%6.1f pkts/sec%6.1f K/sec
%sSenderState x . . . . . . %d x_calc. . . . %d rtt . . . . . %dms tx_s. . . . . %d pendingB. . . %d outReliableB. %d msgsReliable. %lld msgs. . . . . %lld minRate . . . %d maxRate . . . %dReceiverState x_recv. . . . %d rx_s. . . . . %d i_mean. . . . %d (%.8f) msgsReliable. %lld msgs. . . . . %lld
%sSent:%6.1f pkts/sec%6.1f K/sec
%sTX Speed histogram: (%d total samples)
%sTotals
%sTransmit speed distribution:
%u.%u.%u.%u
%u.%u.%u.%u:%u
%u:%u:%u
%x
%ˇùˇ%ˇù
&
&g*
&Ò√ﬁì¯‚ÛÔ˝tˇ
'
')
','
'g*
'out_location' must not be NULL
'˚ƒ‘1¢cÌ¢
(
(%u)
(But connection is idle, so treating this as idle timeout on our end.)
(cannot determine missing fields for lite message)
(g*
(merge
)
)", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., "(.
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
)g*
*
*N6google8protobuf12_GLOBAL__N_123AggregateErrorCollectorE
*N6google8protobuf12_GLOBAL__N_123GeneratedMessageFactoryE
*N6google8protobuf12_GLOBAL__N_129FieldValuePrinterUtf8EscapingE
*Z68SteamAPI_ISteamNetworkingSockets_RunConnectionStatusChangedCallbacksE15CallbackAdapter
*g*
*∏uˇ*∏u
+
+%d load balance penalty.
+%d route penalty.
+g*
,
, from:
, not just within "
,AlsoSentViaRelay
,RoutesChanged
,g*
,› N©S
-
----------------
-----BEGIN OPENSSH PRIVATE KEY-----
-----BEGIN PRIVATE KEY-----
-----BEGIN PUBLIC KEY-----
-----END PRIVATE KEY-----
-;eU™∞köß˚ƒ˛
->
-g*
-inf
.
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
.%lu
../../common/crypto.cpp
../../common/crypto_textencode.cpp
../../common/keypair.cpp
../../common/steamdatagram_messages_auth.pb.cc
../../common/steamdatagram_messages_sdr.pb.cc
../../common/steamid.cpp
../../common/steamnetworkingsockets_messages.pb.cc
../../common/steamnetworkingsockets_messages_udp.pb.cc
../../tier1/netadr.cpp
../../tier1/utlmemory.cpp
../../vstdlib/strtools.cpp
../percentile_generator.h
../steamdatagram_internal.h
../steamdatagram_network.cpp
../steamdatagram_network.h
../steamdatagram_pinglocation.cpp
../steamdatagram_tickets.cpp
../steamnetworking_statsutils.h
../steamnetworkingsockets_certs.cpp
./google/protobuf/descriptor.pb.h
./google/protobuf/generated_message_util.h
./google/protobuf/repeated_field.h
./google/protobuf/stubs/common.h
./google/protobuf/unknown_field_set.h
.PLACEHOLDER_VALUE
.dummy
.foo = value".
.g*
.placeholder.proto
/
/dev/urandom
/g*
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/external/protobuf-2.6.1/src/google/protobuf/repeated_field.h
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/public/tier1/bitstring.h
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/public/tier1/netadr.h
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/public/tier1/utlhashmap.h
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/public/tier1/utllinkedlist.h
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/public/tier1/utlmemory.h
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/public/tier1/utlpriorityqueue.h
/home/buildbot/buildslave/sdr_public_ubuntu64_linux/build/src/public/tier1/utlvector.h
/proc/%d/status
0
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899ˇˇˇˇˇˇÔˇstrings::Substitute format string invalid: asked for "$
0123456789
0123456789ABCDEF
0123456789abcdef
0^ì‘ß‡
0g*
1
13CCallbackBase
18CUtlCharConversion
19CUtlNoEscConversion
1g*
2
21CSteamNetworkingUtils
21CUtlCStringConversion
21ISteamNetworkingUtils
22IClientNetworkingUtils
23ISteamNetworkingSockets
24IClientNetworkingSockets
24ISteamNetworkingMessages
26CMsgSteamDatagramConnectOK
26CMsgSteamDatagramP2PRoutes
26CMsgSteamSockets_UDP_Stats
27CMsgSteamDatagramDiagnostic
27CMsgSteamNetworkingIdentity
28CMsgSteamDatagramCertificate
29CMsgSteamDatagramNoConnection
29CMsgSteamDatagramRouterHealth
2g*
3
30CMsgSteamDatagramP2PRendezvous
30CMsgSteamSockets_UDP_ConnectOK
31CMsgSteamDatagramConnectRequest
31CMsgSteamDatagramGameserverPing
32CMsgSteamDatagramDataCenterState
32CMsgSteamDatagramP2PRoutes_Route
32CMsgSteamDatagramRelayAuthTicket
32CMsgSteamDatagramRouterPingReply
32ISteamNetworkingSocketsCallbacks
33CMsgSteamDatagramConnectionClosed
33CMsgSteamDatagramRelayToRelayPing
33CMsgSteamDatagramSessionCryptInfo
33CMsgSteamSockets_UDP_NoConnection
34CMsgSteamDatagramCertificateSigned
34CMsgSteamDatagramConnectionQuality
34CMsgSteamDatagramLinkLifetimeStats
34CMsgSteamDatagramP2PSessionRequest
35CMsgSteamSockets_UDP_ChallengeReply
35CMsgSteamSockets_UDP_ConnectRequest
37CMsgSteamDatagramNoSessionRelayToPeer
37CMsgSteamSockets_UDP_ChallengeRequest
37CMsgSteamSockets_UDP_ConnectionClosed
38CMsgSteamDatagramClientPingSampleReply
38CMsgSteamDatagramClientSwitchedPrimary
38CMsgSteamDatagramP2PSessionEstablished
38CMsgSteamDatagramP2PSessionRequestBody
38CMsgSteamDatagramSignedRelayAuthTicket
39CMsgSteamDatagramDataCenterState_Server
39CMsgSteamDatagramLinkInstantaneousStats
39CMsgSteamDatagramNoSessionRelayToClient
39CMsgSteamDatagramP2PRoutes_RelayCluster
39CMsgSteamDatagramSessionCryptInfoSigned
3g*
4
40CMsgSteamDatagramCachedCredentialsForApp
40CMsgSteamDatagramClientPingSampleRequest
40CMsgSteamDatagramRouterHealth_DataCenter
41CMsgSteamDatagramGameserverSessionRequest
42CMsgSteamDatagramP2PBadRouteRouterToClient
42CMsgSteamDatagramP2PBadRouteRouterToRouter
43CMsgSteamDatagramDataCenterState_DataCenter
43CMsgSteamDatagramRelayAuthTicket_ExtraField
45CMsgSteamDatagramGameserverSessionEstablished
46CMsgSteamDatagramConnectionStatsClientToRouter
46CMsgSteamDatagramConnectionStatsRouterToClient
46CMsgSteamDatagramConnectionStatsRouterToServer
46CMsgSteamDatagramConnectionStatsServerToRouter
47CMsgSteamDatagramRouterPingReply_RouteException
49CMsgSteamDatagramClientPingSampleReply_DataCenter
49CMsgSteamDatagramConnectionStatsP2PClientToRouter
49CMsgSteamDatagramConnectionStatsP2PRouterToClient
49CMsgSteamDatagramConnectionStatsP2PRouterToRouter
4B
4g*
5
52CMsgSteamDatagramClientSwitchedPrimary_RouterQuality
53CMsgSteamDatagramClientPingSampleReply_RoutingCluster
5g*
6
6666666666666666\\\\\\\\\\\\\\\\../../common/crypto_25519.cpp
6g*
7
7g*
8
8J
8g*
8÷ˇX÷ˇÿ÷ˇÄ◊ˇHÿˇHÿˇHÿˇHÿˇHÿˇHÿˇHÿˇHÿˇHÿˇHÿˇHÿˇHÿˇË◊ˇx’ˇh·ˇÄ·ˇ
9
9g*
:
: 0x
: Protocol message serialized to a size different from what was originally expected.  Perhaps it was modified by another thread during serialization?
: Tried to copy from a message with a different type. to:
: Tried to merge from a message with a different type.  to:
: [
::google::protobuf::FieldDescriptorProto_Label_IsValid(value)
::google::protobuf::FieldDescriptorProto_Type_IsValid(value)
::google::protobuf::FieldOptions_CType_IsValid(value)
::google::protobuf::FileOptions_OptimizeMode_IsValid(value)
:g*
;
;?∆“ﬂ‘»Ñk˝Lˇ
;g*
<
<<ERROR>>
<INVALID>
<NULL>
<g*
=
= { <proto text format> }". To set fields within it, use syntax like "
=g*
>
>g*
>ˇˇˇ?456789:;<=ˇˇˇ˛ˇˇˇ
?
???
?g*
@
@?33s?H·z?
@@
@g*
@è@
@Âú0¢B
A
A connection with that ID already exists.
A file with this name is already in the pool.
A protocol message was rejected because it was too big (more than
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
AD Time Stamping
AD_DVCS
AES-128-CBC
AES-128-CBC-HMAC-SHA1
AES-128-CBC-HMAC-SHA256
AES-128-CFB
AES-128-CFB1
AES-128-CFB8
AES-128-CTR
AES-128-ECB
AES-128-OFB
AES-128-XTS
AES-192-CBC
AES-192-CBC-HMAC-SHA1
AES-192-CBC-HMAC-SHA256
AES-192-CFB
AES-192-CFB1
AES-192-CFB8
AES-192-CTR
AES-192-ECB
AES-192-OFB
AES-256-CBC
AES-256-CBC-HMAC-SHA1
AES-256-CBC-HMAC-SHA256
AES-256-CFB
AES-256-CFB1
AES-256-CFB8
AES-256-CTR
AES-256-ECB
AES-256-OFB
AES-256-XTS
ANSI X9.62
APISendMessageToConnection failed with result code %d
ASN1 lib
Abandoning attempt to migrate to %s, relay is shutting down soon.
Abandoning migration to %s.  We obtained a session on this relay, but decided to use %s as the primary instead.
Acceptable OCSP Responses
Ack count of %llu<<3 is crazy
Ack range underflow, end=%lld, num=%lld
AckPeerRoutes
AckTimeout
Actual    :
AddBool
AddDouble
AddEnum
AddFloat
AddInt32
AddInt64
AddMessage
AddString
AddUInt32
AddUInt64
Adding SDR ticket for server %s vport %d to cache.  Expiry=%u
Address mismatch in shared cluster data and global network config?
Address too small!
Ag*
Already have a listen socket on P2P virtual port %d
Already have a ticket for server '%s' vport %d with expiry at %u.  Discarding ticket with expiry at %u
Already have a ticket for server '%s' with older expiry %u.  Discarding and replacing with new ticket expiring at %u
Already saw decimal point or exponent; can't have another one.
Already talking to %s on this shared socket, cannot add another remote host!
Any Extended Key Usage
Any language
App didn't accept or close incoming connection in time.
Application closed connection
Application closed connection in an unusual way
Application didn't accept or close incoming connection in a reasonable amount of time.  This is probably a bug.
Assertion Failed: !( msgStatsIn.flags() & msgStatsIn.ACK_REQUEST_E2E )
Assertion Failed: !(pQueue->m_pLast->*pMbrLinks).m_pNext
Assertion Failed: !BNeedToSendEndToEndStatsOrAcks( usecNow )
Assertion Failed: !HasOverlappingRange( range, m_senderState.m_listInFlightReliableRange )
Assertion Failed: !HasOverlappingRange( range, m_senderState.m_listReadyRetryReliableRange )
Assertion Failed: !IsExternallyAllocated()
Assertion Failed: !bTrySendEndToEndStats
Assertion Failed: !data.m_bLast
Assertion Failed: !g_bWantThreadRunning
Assertion Failed: !g_mapConnections.IsValidIndex( idx )
Assertion Failed: !g_mapListenSockets.IsValidIndex( idx )
Assertion Failed: !g_mapSharedClusterData[ hCluster ]->m_pConfig
Assertion Failed: !g_sLauncherPartner.empty()
Assertion Failed: !identityRemote.IsInvalid()
Assertion Failed: !m_bCryptKeysValid
Assertion Failed: !m_bDisconnected
Assertion Failed: !m_identityRemote.IsInvalid()
Assertion Failed: !m_pInt
Assertion Failed: !m_pLast
Assertion Failed: !m_pParentListenSocket
Assertion Failed: !m_pPartner
Assertion Failed: !m_senderState.m_mapInFlightPacketsByPktNum.empty()
Assertion Failed: !m_stats.m_expectedAcks.m_vecAcks.empty() && m_stats.m_expectedAcks.m_vecAcks[ len( m_stats.m_expectedAcks.m_vecAcks )-1 ].Timestamp( usecNow ) == usecNow
Assertion Failed: !m_statsEndToEnd.BNeedToSendPingImmediate( usecNow )
Assertion Failed: !msg.has_connection_closed()
Assertion Failed: !msg.has_to_connection_id()
Assertion Failed: !msgStatsIn.has_quality_e2e()
Assertion Failed: !pArray || (Base() >= (pArray + size)) || (pArray >= (Base() + Count()) )
Assertion Failed: !pClient->m_listRelaySessions.IsEmpty()
Assertion Failed: !pMsg->m_linksSameConnection.m_pNext
Assertion Failed: !pMsg->m_linksSameConnection.m_pPrev
Assertion Failed: !pMsg->m_linksSameConnection.m_pQueue
Assertion Failed: !pMsg->m_linksSecondaryQueue.m_pNext
Assertion Failed: !pMsg->m_linksSecondaryQueue.m_pPrev
Assertion Failed: !pMsg->m_linksSecondaryQueue.m_pQueue
Assertion Failed: !pQueue->m_pFirst
Assertion Failed: !pResult
Assertion Failed: !relay.m_stats.BNeedToSendPingImmediate( usecNow )
Assertion Failed: !relay.m_stats.BNeedToSendStatsOrAcks( usecNow )
Assertion Failed: !remoteCluster.m_sRemoteSessionToken.empty()
Assertion Failed: !s_mapP2PConnections.HasElement( key )
Assertion Failed: !s_pSDRPhsyicalSocket->m_mapClientBySessionKey.HasElement( relaySessKey )
Assertion Failed: !s_pThreadSteamDatagram
Assertion Failed: %s
Assertion Failed: &p2p.m_steamNetworkingSockets == this
Assertion Failed: ( nCurMsgNum & nMask ) == nLowerBits
Assertion Failed: ( nDecodeReliablePos & nMask ) == nOffset
Assertion Failed: ( nLatestRecvSeqNum & nMask ) == nLowerBits
Assertion Failed: ( usecNow & ~k_nTimestampMask ) == 0
Assertion Failed: ( usecRef & ~k_nTimestampMask ) == 0
Assertion Failed: (&src < Base()) || (&src >= (Base() + Count()) )
Assertion Failed: (&src < Base()) || (&src >= (Base() + Count()))
Assertion Failed: (elem == Count()) || IsValidIndex(elem)
Assertion Failed: (int)cbEncrypted <= k_cbSteamNetworkingSocketsMaxEncryptedPayloadSend
Assertion Failed: (int)cbEncrypted >= cbPlainText
Assertion Failed: (links.m_pNext->*pMbrLinks).m_pPrev == this
Assertion Failed: (links.m_pPrev->*pMbrLinks).m_pNext == this
Assertion Failed: *pcubDecodedData
Assertion Failed: *pcubEncryptedData
Assertion Failed: *pcubPlaintextData
Assertion Failed: *poutnShell <= m_vecPOPs[ lookup.m_idxPOP ].m_nTotalRelayPorts
Assertion Failed: *ppMsg != pMsg
Assertion Failed: 0
Assertion Failed: 0 < flPct && flPct < 1.0f
Assertion Failed: 0 <= nNeed && nNeed <= 2
Assertion Failed: BStateIsConnectedForWirePurposes()
Assertion Failed: CollapseConnectionStateToAPIState( m_pPartner->GetState() ) == k_ESteamNetworkingConnectionState_None
Assertion Failed: GetInts()
Assertion Failed: GetState() == k_ESteamNetworkingConnectionState_Connecting
Assertion Failed: GetState() == k_ESteamNetworkingConnectionState_ProblemDetectedLocally
Assertion Failed: IsInList(before)
Assertion Failed: IsValid()
Assertion Failed: IsValidIndex(elem)
Assertion Failed: ListenSocket()
Assertion Failed: PendingBytesTotal() == 0
Assertion Failed: Size() == operand.Size()
Assertion Failed: SteamDatagramTransportLock::s_nLocked == 1
Assertion Failed: TLinkStatsTracker::m_pktNumInFlight == 0
Assertion Failed: a.MicrosecondsAge( usecNow ) < k_nMillion*10
Assertion Failed: aScore >= 0
Assertion Failed: adr.GetIP() != 0
Assertion Failed: adr.GetType() == NA_IP
Assertion Failed: bScore >= 0
Assertion Failed: bStillInQueue == ( ( seg.m_hdr[0] & 0x20 ) == 0 )
Assertion Failed: bStillInQueue == ( seg.m_nOffset + seg.m_cbSize < seg.m_pMsg->m_cbSize )
Assertion Failed: bStillInQueue || seg.m_pMsg->m_pNext == nullptr
Assertion Failed: bTrySendEndToEndStats
Assertion Failed: bestRoute.m_idxViaCluster >= 0
Assertion Failed: bitNum >= 0 && bitNum < this->Size()
Assertion Failed: bufferLen == 0 || pDest != NULL
Assertion Failed: bufferLen > 0
Assertion Failed: c <= k_cchMaxEncodedMarker
Assertion Failed: cBytes < 1024*1024*10
Assertion Failed: cbAckBytesWritten == cbReserveForAcks
Assertion Failed: cbBytesRemainingForSegments >= -1
Assertion Failed: cbBytesRemainingForSegments >= 0 || ( cbBytesRemainingForSegments == -1 && vecSegments.size() > 0 )
Assertion Failed: cbDecrypted >= k_cbSteamNetworkingSocketsMaxPlaintextPayloadRecv
Assertion Failed: cbNewSize > len( m_receiverState.m_bufReliableStream )
Assertion Failed: cbPkt == int( sizeof(*hdr) + nMsgLength )
Assertion Failed: cbPkt == pEnd - pkt
Assertion Failed: cbSegData > 0
Assertion Failed: cbSegData > 0 || ( cbSegData == 0 && pMsg->m_cbSize == 0 )
Assertion Failed: cbSegmentSize > 0
Assertion Failed: cbSegmentSize >= 0
Assertion Failed: cbSend <= sizeof(pkt)
Assertion Failed: cbSent > 0
Assertion Failed: cbSize > 0
Assertion Failed: cchEncodedData > 0
Assertion Failed: cchEncodedData >= ( cubData * 2 ) + 1
Assertion Failed: cluster.m_nPenaltyLocal >= 1000
Assertion Failed: clusterMetrics.m_nDataCenterPing >= 0
Assertion Failed: clusterMetrics.m_nFrontPingLocal >= 0
Assertion Failed: clusterRemote.m_nPingRemote >= 0
Assertion Failed: count == 0 || s1 != NULL
Assertion Failed: count == 0 || s2 != NULL
Assertion Failed: count >= 0
Assertion Failed: cubData
Assertion Failed: cubData > 0
Assertion Failed: cubEncryptedData
Assertion Failed: cubEncryptedData >= cubTotalOutput
Assertion Failed: cubIV
Assertion Failed: cubIV >= k_nSymmetricBlockSize
Assertion Failed: cubInput >= 0
Assertion Failed: cubKey > 0
Assertion Failed: cubPlaintextData
Assertion Failed: d.m_nDirectPing <= k_nMaxReasonablePing || d.m_nDirectPing == INT16_MAX
Assertion Failed: d.m_nID
Assertion Failed: d.m_nIndirectPing <= k_nMaxReasonablePing
Assertion Failed: eMode == k_eFindClient_Other
Assertion Failed: eReason > k_ESteamNetConnectionEnd_AppException_Max
Assertion Failed: false
Assertion Failed: firstGap->first >= m_receiverState.m_nReliableStreamPos
Assertion Failed: firstGap->first >= nSegEnd
Assertion Failed: firstGap->second <= nSegBegin
Assertion Failed: g_SteamDatagramNetwork.FindRelayPOPByAddress( adr ) == pClusterData->m_idxInConfig
Assertion Failed: g_SteamDatagramNetwork.m_nRevision != SteamDatagramNetwork::k_nRevision_None
Assertion Failed: g_SteamDatagramNetwork.m_nRevision == nOldRevision
Assertion Failed: g_SteamDatagramNetwork.m_vecPOPs.size() == g_vecCachedCachedDataCenterRoutes.size()
Assertion Failed: g_bWantThreadRunning
Assertion Failed: g_eAvailAnyRouterCommunication == k_ESteamDatagramAvailability_Current
Assertion Failed: g_mapListenSockets.IsValidIndex( idx ) && g_mapListenSockets[ idx ] == pSock
Assertion Failed: g_mapRelayServersByAddr.Find( adr ) == g_mapRelayServersByAddr.InvalidIndex()
Assertion Failed: g_mapRelayServersByAddr[idxServer]->m_adr == adr
Assertion Failed: g_mapRelayServersByAddr[idxServer]->m_hRoutingCluster == hCluster
Assertion Failed: g_mapRelayServersByAddr[idxServer]->m_idx == idxServer
Assertion Failed: g_mapSharedClusterData[ m_hRoutingCluster ]->m_ping.m_usecTimeLastSentPingRequest == usecNow
Assertion Failed: g_nRouteSelectionDataRevisionNumber != 0
Assertion Failed: g_vecCachedCachedDataCenterRoutes.size() == m_vecClusters.size()
Assertion Failed: g_vecSharedClusterDataInConfigOrder.size() == g_SteamDatagramNetwork.m_vecPOPs.size()
Assertion Failed: gapFilled->first < gapFilled->second
Assertion Failed: gapFilled->first <= nSegBegin
Assertion Failed: head->first.m_nBegin < nReliableEnd
Assertion Failed: head->first.m_nBegin >= nReliableEnd
Assertion Failed: head->first.m_nBegin >= pMsg->m_nReliableStreamPos
Assertion Failed: identity.m_cbSize <= sizeof( identity.m_genericBytes )
Assertion Failed: identity.m_cbSize <= sizeof( identity.m_szGenericString )
Assertion Failed: identity.m_cbSize <= sizeof( identity.m_szXboxPairwiseID )
Assertion Failed: identity.m_cbSize == (int)V_strlen( identity.m_szGenericString ) + 1
Assertion Failed: identity.m_cbSize == (int)V_strlen( identity.m_szXboxPairwiseID ) + 1
Assertion Failed: identity.m_cbSize == sizeof( SteamNetworkingIPAddr )
Assertion Failed: identity.m_cbSize == sizeof(identity.m_steamID64)
Assertion Failed: identity.m_cbSize > 1
Assertion Failed: idx < 0 || ( m_vecClusters[idx].m_pData->m_idxInConfig == idx && m_vecClusters[idx].m_pData->m_pConfig->m_id == id )
Assertion Failed: idx < 0x1000
Assertion Failed: idxSession >= 0
Assertion Failed: inFlightPkt != m_senderState.m_itNextInFlightPacketToTimeout
Assertion Failed: inFlightPkt->first < 0
Assertion Failed: inFlightPkt->first < nPktNumAckEnd
Assertion Failed: inFlightPkt->first <= nLatestRecvSeqNum
Assertion Failed: inFlightPkt->second.m_bNack
Assertion Failed: info.m_pReplacementString == 0
Assertion Failed: itCur->first < itCur->second.m_nEnd
Assertion Failed: itCur->second.m_nEnd < nAckEnd
Assertion Failed: itGap->first < itGap->second.m_nEnd
Assertion Failed: itGap->first <= nPktNum
Assertion Failed: itMsgStart != end
Assertion Failed: itMsgStart->first.m_nMsgNum == nMsgNum
Assertion Failed: itNext == m_receiverState.m_mapPacketGaps.end()
Assertion Failed: k_nSymmetricKeyLen256 == cubKey || k_nSymmetricKeyLen128 == cubKey
Assertion Failed: keyPrivate.IsValid()
Assertion Failed: l->first.m_nBegin >= range.m_nBegin
Assertion Failed: last.MicrosecondsAge( usecNow ) < k_nMillion*10
Assertion Failed: last.m_usecTimestamp == uint64( usecNow&PacketAck::k_nTimestampMask)
Assertion Failed: len( g_vecSDRClients ) == i
Assertion Failed: localPrivateKey.IsValid()
Assertion Failed: lookup.m_nFirstShell > 0
Assertion Failed: m->GetConnection() == m_hConnectionSelf
Assertion Failed: m.m_nIndirectPing >= 0
Assertion Failed: m_Put >= 0
Assertion Failed: m_TotalElements != InvalidIndex()
Assertion Failed: m_arMarker[n-1].m_nID != m_arMarker[n].m_nID
Assertion Failed: m_bCryptKeysValid
Assertion Failed: m_bInittedSocketsCommon
Assertion Failed: m_eClientType == k_EClientType_P2PConnection
Assertion Failed: m_eConnectionState == k_ESteamNetworkingConnectionState_Dead
Assertion Failed: m_hConnectionSelf == k_HSteamNetConnection_Invalid
Assertion Failed: m_heap.IsValidIndex(index)
Assertion Failed: m_identityRemote.GetSteamID64()
Assertion Failed: m_identityRemote.IsInvalid()
Assertion Failed: m_idxServerMigrationTarget != m_vecActiveSessions[0]->m_pServer->m_idx
Assertion Failed: m_idxServerMigrationTarget < 0
Assertion Failed: m_idxServerMigrationTarget == -1
Assertion Failed: m_listRelaySessions.IsEmpty()
Assertion Failed: m_mapChildConnections.Count() == n-1
Assertion Failed: m_mapChildConnections.Find( key ) == m_mapChildConnections.InvalidIndex()
Assertion Failed: m_mapClientBySessionKey.Count() == 0
Assertion Failed: m_mapLogicalListenSocketsByVirtualPort.Count() == 0
Assertion Failed: m_mapSessions.Count() == 0
Assertion Failed: m_msgCert.has_key_data()
Assertion Failed: m_msgCert.has_time_expiry()
Assertion Failed: m_msgCryptLocal.has_key_data()
Assertion Failed: m_msgCryptLocal.has_key_type()
Assertion Failed: m_msgCryptLocal.has_nonce()
Assertion Failed: m_msgSignedCert.has_ca_signature()
Assertion Failed: m_msgSignedCert.has_cert()
Assertion Failed: m_msgSignedCertLocal.has_cert()
Assertion Failed: m_msgSignedCryptLocal.has_info()
Assertion Failed: m_nEnd >= m_nBegin
Assertion Failed: m_nPktsRecvWeirdSequenceCurrentInterval <= m_nPktsRecvSequencedCurrentInterval
Assertion Failed: m_nReplyTimeoutsSinceLastRecv == 0
Assertion Failed: m_nSamples > 0
Assertion Failed: m_pFirst != pMsg
Assertion Failed: m_pFirst->m_nMsgNum > pResult->m_nMsgNum
Assertion Failed: m_pFirst->m_pPrev == pResult
Assertion Failed: m_pLast
Assertion Failed: m_pLast != nullptr
Assertion Failed: m_pLast == nullptr
Assertion Failed: m_pLast == pResult
Assertion Failed: m_pLast->m_pNext == nullptr
Assertion Failed: m_pMaxOut >= m_pOut
Assertion Failed: m_pMemory
Assertion Failed: m_pOut <= m_pMaxOut
Assertion Failed: m_pParentListenSocket
Assertion Failed: m_pParentListenSocket == nullptr
Assertion Failed: m_pParentListenSocket == nullptr || m_pSteamNetworkingSocketsInterface == m_pParentListenSocket->m_pSteamNetworkingSocketsInterface
Assertion Failed: m_pPartner
Assertion Failed: m_pPartner->m_pPartner == nullptr
Assertion Failed: m_pRawSock == nullptr
Assertion Failed: m_pSock == nullptr
Assertion Failed: m_pSock->GetRemoteHostAddr() == m_adr
Assertion Failed: m_pSteamNetworkingP2PSession->m_pConnection == nullptr
Assertion Failed: m_pSteamNetworkingSocketsInterface->m_keyPrivateKey.IsValid()
Assertion Failed: m_queueIndex == -1
Assertion Failed: m_queueIndex >= 0
Assertion Failed: m_queueRecvMessages.IsEmpty()
Assertion Failed: m_receiverState.m_mapPacketGaps.empty() || m_receiverState.m_mapPacketGaps.rbegin()->second.m_nEnd <= m_statsEndToEnd.m_nLastRecvSequenceNumber
Assertion Failed: m_receiverState.m_mapReliableStreamGaps.rbegin()->second < nExpectNextStreamPos
Assertion Failed: m_senderState.m_cbCurrentSendMessageSent + seg.m_cbSize == pSendMsg->m_cbSize
Assertion Failed: m_senderState.m_cbCurrentSendMessageSent < pSendMsg->m_cbSize
Assertion Failed: m_senderState.m_cbPendingReliable >= 0
Assertion Failed: m_senderState.m_cbPendingUnreliable >= 0
Assertion Failed: m_senderState.m_itNextInFlightPacketToTimeout == m_senderState.m_mapInFlightPacketsByPktNum.end()
Assertion Failed: m_senderState.m_itNextInFlightPacketToTimeout->first > 0
Assertion Failed: m_senderState.m_listReadyRetryReliableRange.count( relRange ) == 0
Assertion Failed: m_senderState.m_mapInFlightPacketsByPktNum.begin()->first < 0
Assertion Failed: m_senderState.m_mapInFlightPacketsByPktNum.lower_bound( m_statsEndToEnd.m_nNextSendSequenceNumber ) == m_senderState.m_mapInFlightPacketsByPktNum.end()
Assertion Failed: m_socket != INVALID_SOCKET
Assertion Failed: m_statsEndToEnd.BNeedToSendKeepalive( usecNow )
Assertion Failed: m_statsEndToEnd.BNeedToSendPingImmediate( usecNow )
Assertion Failed: m_statsEndToEnd.IsDisconnected()
Assertion Failed: m_statsEndToEnd.m_flInPacketsWeirdSequencePct >= 0.0f
Assertion Failed: m_statsEndToEnd.m_latestRemote.m_flPacketsWeirdSequenceNumberPct >= 0.0f
Assertion Failed: m_statsEndToEnd.m_nReplyTimeoutsSinceLastRecv > 0
Assertion Failed: m_statsEndToEnd.m_nReplyTimeoutsSinceLastRecv > 0 || m_statsEndToEnd.m_recv.m_packets.m_nTotal == 0
Assertion Failed: m_statsEndToEnd.m_usecInFlightReplyTimeout != 0
Assertion Failed: m_statsEndToEnd.m_usecTimeLastRecv > 0
Assertion Failed: m_statsEndToEnd.m_usecWhenTimeoutStarted > 0
Assertion Failed: m_unConnectionIDLocal
Assertion Failed: m_unConnectionIDLocal == 0
Assertion Failed: m_unConnectionIDRemote
Assertion Failed: m_unConnectionIDRemote != 0
Assertion Failed: m_unMinPort == rhs.m_unMinPort && m_unMaxPort == rhs.m_unMaxPort
Assertion Failed: m_unSizeOfElements == mem.m_unSizeOfElements
Assertion Failed: m_unSizeOfElements > 0
Assertion Failed: m_usecIdleTimeout > 0
Assertion Failed: m_usecNextThinkTimeEarliest <= m_usecNextThinkTimeTarget
Assertion Failed: m_usecNextThinkTimeEarliest+1000 <= m_usecNextThinkTimeLatest
Assertion Failed: m_usecNextThinkTimeTarget != k_nThinkTime_Never
Assertion Failed: m_usecNextThinkTimeTarget <= m_usecNextThinkTimeLatest
Assertion Failed: m_usecNextThinkTimeTarget == k_nThinkTime_Never
Assertion Failed: m_vecActiveSessions.Count() == 0
Assertion Failed: m_vecActiveSessions.Count() > 0
Assertion Failed: m_vecActiveSessions.Count() >= idxCurrentBackup
Assertion Failed: m_vecActiveSessions.IsEmpty()
Assertion Failed: m_vecActiveSessions[i] != m_vecActiveSessions[j]
Assertion Failed: m_vecAllRelaySessions.Count() == i
Assertion Failed: m_vecAllRelaySessions.IsEmpty()
Assertion Failed: m_vecRoutes.empty()
Assertion Failed: marker.m_nIndirectPing >= 0 && marker.m_nIndirectPing <= SteamNetworkPingLocationInternal_t::k_nMaxReasonablePing
Assertion Failed: maxLen == 0 || pDest != NULL
Assertion Failed: metrics.m_hRoutingCluster == server.m_hRoutingCluster
Assertion Failed: metrics.m_nClusterPenaltyLocal == clusterLocal.m_nPenaltyLocal
Assertion Failed: metrics.m_nDataCenterPing >= 0
Assertion Failed: metrics.m_nFrontPingLocal == clusterLocal.m_nPingLocal
Assertion Failed: metrics.m_nFrontPingLocal == pClusterData->m_ping.m_nSmoothedPing
Assertion Failed: metrics.m_nFrontPingLocal >= 0
Assertion Failed: metrics.m_nFrontPingRemote == 0
Assertion Failed: metrics.m_nFrontPingRemote >= 0
Assertion Failed: msWait >= 1
Assertion Failed: msg.has_connect_request()
Assertion Failed: msg.relay_mode() != CMsgSteamDatagramConnectionClosed_ERelayMode_ClosedByPeer
Assertion Failed: msg.relay_mode() == CMsgSteamDatagramConnectionClosed_ERelayMode_None
Assertion Failed: msg.server_time() != 0
Assertion Failed: msg.your_public_ip() != 0
Assertion Failed: msgConnectionClosed.relay_mode() == CMsgSteamDatagramConnectionClosed_ERelayMode_None
Assertion Failed: msgSessionEstablished.connection_id() == m_unConnectionIDLocal
Assertion Failed: msgSignedCert.has_cert()
Assertion Failed: msgStatsIn.has_seq_num_r2c()
Assertion Failed: msgStatsIn.has_seq_num_r2s()
Assertion Failed: msgStatsIn.legacy_ack_e2e_size() == 0
Assertion Failed: msgStatsOut.ack_peer_routes_revision() == m_msgPeerRoutes.revision()
Assertion Failed: n == 0 || s1 != NULL
Assertion Failed: n == 0 || s2 != NULL
Assertion Failed: n >= 0
Assertion Failed: nAckEnd > 0
Assertion Failed: nAddressFamilies & k_nAddressFamily_IPv4
Assertion Failed: nBackPing >= 0
Assertion Failed: nBegin + k_cbSteamNetworkingSocketsMaxReliableMessageSegment >= nEnd
Assertion Failed: nBegin < nEnd
Assertion Failed: nBegin >= nLastReliableStreamPosEnd
Assertion Failed: nBegin >= pMsg->m_nReliableStreamPos
Assertion Failed: nBlocks == uint8(nBlocks)
Assertion Failed: nBufOffset >= 0
Assertion Failed: nBufOffset+cbSegmentSize <= len( m_receiverState.m_bufReliableStream )
Assertion Failed: nBytesWritten >= 0
Assertion Failed: nCheckSignature == 0
Assertion Failed: nDecrypted == cubEncryptedData - k_nSymmetricBlockSize
Assertion Failed: nDiff > 0 && nDiff < 0x4000
Assertion Failed: nEnd <= pMsg->m_nReliableStreamPos + pMsg->m_cbSize
Assertion Failed: nExpectNextStreamPos + (nMask>>1) >= nDecodeReliablePos
Assertion Failed: nExpectNextStreamPos < nDecodeReliablePos
Assertion Failed: nFrontPing >= 0
Assertion Failed: nGrowSize >= 0
Assertion Failed: nMsgNumGap >= 1
Assertion Failed: nNumReliableBytes < len( m_receiverState.m_bufReliableStream )
Assertion Failed: nNumReliableBytes > 0
Assertion Failed: nPenalty >= 0 && nPenalty < 5000
Assertion Failed: nPingMS >= 0
Assertion Failed: nPktNumAckBegin >= 0
Assertion Failed: nPktNumNackBegin >= 0
Assertion Failed: nPut + nPutDelta <= outBuf.TellMaxPut()
Assertion Failed: nSegBegin < gapFilled->second
Assertion Failed: nSegBegin < nSegEnd
Assertion Failed: nSegBegin > gapFilled->first
Assertion Failed: nSegEnd < gapFilled->second
Assertion Failed: nSize >= 0
Assertion Failed: nSlackMS != 0
Assertion Failed: nUpper3Bits <= 4
Assertion Failed: nVirtualPort >= 0
Assertion Failed: num > 0
Assertion Failed: num >= 0
Assertion Failed: numElements <= m_nAllocationCount
Assertion Failed: numElements >= 0
Assertion Failed: offset != INT_MIN && offset <= m_nMaxPut && -offset <= INT_MAX-m_nMaxPut
Assertion Failed: offset >= -m_Put && offset <= INT_MAX-m_Put
Assertion Failed: offset >= 0
Assertion Failed: p == temp.m_msg + temp.m_cbMsg
Assertion Failed: pAckEnd <= pPayloadEnd
Assertion Failed: pChild->m_hSelfInParentListenSocketMap == h
Assertion Failed: pChild->m_pParentListenSocket == this
Assertion Failed: pClient->m_identityRemote == identity
Assertion Failed: pClient->m_unConnectionIDRemote == unConnectionID
Assertion Failed: pCluster->m_ping.m_nSmoothedPing >= 0
Assertion Failed: pConn
Assertion Failed: pConn->GetState() == k_ESteamNetworkingConnectionState_Connecting
Assertion Failed: pConn->m_hConnectionSelf == k_HSteamNetConnection_Invalid
Assertion Failed: pConn->m_hSelfInParentListenSocketMap == -1
Assertion Failed: pConn->m_identityRemote == identityRemote
Assertion Failed: pConn->m_pParentListenSocket == nullptr
Assertion Failed: pConn->m_pParentListenSocket == this
Assertion Failed: pConn->m_pSteamNetworkingP2PSession == this
Assertion Failed: pConn->m_unConnectionIDRemote == pInfo->m_unConnectionIDSrc
Assertion Failed: pConv && pConv->GetDelimiterLength() > 0
Assertion Failed: pDest != NULL
Assertion Failed: pEndingDelim && pEndingDelim[0]
Assertion Failed: pFmt
Assertion Failed: pFormat != NULL
Assertion Failed: pHdr
Assertion Failed: pIV
Assertion Failed: pMsg->m_cbSize > 0
Assertion Failed: pMsg->m_nMsgNum > m_pLast->m_nMsgNum
Assertion Failed: pMsg->m_nMsgNum > nLastMsgNum
Assertion Failed: pMsg->m_nReliableStreamPos > 0
Assertion Failed: pMsg->m_sender == identityRemote
Assertion Failed: pOldConn->GetRemoteAddr() != adrFrom
Assertion Failed: pOldConn->m_identityRemote == identityRemote
Assertion Failed: pOut <= pOutEnd
Assertion Failed: pOut == pExpectedOutEnd
Assertion Failed: pOutDigest
Assertion Failed: pOutputDigest
Assertion Failed: pPayloadPtr <= pPayloadEnd
Assertion Failed: pPayloadPtr+seg.m_cbSize <= pPayloadEnd
Assertion Failed: pPrimarySession->m_pServer->m_stats.m_usecTimeLastRecv > 0
Assertion Failed: pPublicKey->GetKeyType() == k_ECryptoKeyTypeKeyExchangePublic
Assertion Failed: pPublicKey->GetKeyType() == k_ECryptoKeyTypeSigningPublic
Assertion Failed: pQueue->m_pFirst
Assertion Failed: pResult && pResult->m_hListenSocketSelf == sock
Assertion Failed: pResult->m_identityRemote == identityRemote
Assertion Failed: pResult->m_pPrev == nullptr
Assertion Failed: pSearch != NULL
Assertion Failed: pServer->m_idx == idxServer
Assertion Failed: pServer->m_pSock
Assertion Failed: pSess->m_identityRemote == identityRemote
Assertion Failed: pSession
Assertion Failed: pSession->m_nP2PCurrentForwardTargetRevision > 0
Assertion Failed: pSession->m_pClient == this
Assertion Failed: pSession->m_pServer == &server
Assertion Failed: pSock->m_callback.m_fnCallback
Assertion Failed: pSock->m_callback.m_fnCallback == nullptr
Assertion Failed: pSock->m_socket != INVALID_SOCKET
Assertion Failed: pSrc != NULL
Assertion Failed: pStr != NULL
Assertion Failed: pToken
Assertion Failed: pairInsertResult.second
Assertion Failed: pchData
Assertion Failed: pchEncodedData
Assertion Failed: pchSteam2ID
Assertion Failed: pcubDecodedData
Assertion Failed: pcubEncryptedData
Assertion Failed: pcubPlaintextData
Assertion Failed: privateKey.IsValid()
Assertion Failed: pszCode[3] == '\0' || pszCode[4] == '\0'
Assertion Failed: pszFmt && *pszFmt
Assertion Failed: pubData
Assertion Failed: pubDecodedData
Assertion Failed: pubEncryptedData
Assertion Failed: pubKey
Assertion Failed: pubPlaintextData
Assertion Failed: publicKey.IsValid()
Assertion Failed: q.m_pFirst != this
Assertion Failed: q.m_pFirst == this
Assertion Failed: q.m_pLast != this
Assertion Failed: q.m_pLast == this
Assertion Failed: range.m_nBegin < u->first.m_nBegin
Assertion Failed: remotePublicKey.IsValid()
Assertion Failed: resizeNumBits >= 0
Assertion Failed: route.m_bSendToPeer
Assertion Failed: route.m_idxClusterLocal == pClusterData->m_idxInConfig
Assertion Failed: route.m_nBackPing >= 0
Assertion Failed: route.m_nScoreLocal == nCheckScore
Assertion Failed: s.has_string_value()
Assertion Failed: s_HostedDedicatedServerRouting.GetPopID() == nSDR_POPID
Assertion Failed: s_hSockWakeThreadRead != INVALID_SOCKET
Assertion Failed: s_hSockWakeThreadRead == INVALID_SOCKET
Assertion Failed: s_hSockWakeThreadWrite == INVALID_SOCKET
Assertion Failed: s_mapP2PConnections[idx] == this
Assertion Failed: s_nHostedDedicatedServerPort
Assertion Failed: s_nLocked > 0
Assertion Failed: s_nSDRClientCount > 0
Assertion Failed: s_nSteamNetworkingSocketsInitted > 0
Assertion Failed: s_pSDRPhsyicalSocket == nullptr
Assertion Failed: s_pSDRPhsyicalSocket == this
Assertion Failed: s_pSDRPhsyicalSocket->m_mapClientBySessionKey.Count() == 0
Assertion Failed: s_queueThinkers.Element( m_queueIndex ) == this
Assertion Failed: s_threadIDLockOwner == std::this_thread::get_id()
Assertion Failed: s_vecPollFD[idx].fd == s_hSockWakeThreadRead
Assertion Failed: seg.m_cbHdr <= seg.k_cbMaxHdr
Assertion Failed: seg.m_cbSize > 0
Assertion Failed: seg.m_cbSize > 0 || ( seg.m_cbSize == 0 && seg.m_pMsg->m_cbSize == 0 )
Assertion Failed: seg.m_pMsg->m_pPrev == nullptr
Assertion Failed: self->m_callback.m_fnCallback
Assertion Failed: self->m_socket != INVALID_SOCKET
Assertion Failed: server.m_adr == adr
Assertion Failed: server.m_idx == idxServer
Assertion Failed: server.m_nChallenge && server.m_unChallengeServerTime
Assertion Failed: server.m_usecActivePingTimeout > 0
Assertion Failed: server.m_vecSessions.Count() == 0
Assertion Failed: server.m_vecSessions.Count() == idx
Assertion Failed: sort.m_nOptimisticScore <= sort.m_nScore
Assertion Failed: sort.m_nScore <= sort.m_nPessimisticScore
Assertion Failed: srcRoute.m_bSendToPeer
Assertion Failed: stats.m_flConnectionQualityLocal >= 0.0f
Assertion Failed: stats.m_flConnectionQualityRemote >= 0.0f
Assertion Failed: steamIDRemote.IsValid()
Assertion Failed: uint16( nFullSequenceNumber ) == nWireSeqNum
Assertion Failed: uint16( nFullSequenceNumber ) == unWireSequenceNumber
Assertion Failed: unFromConnectionID || unToConnectionID
Assertion Failed: usecDiff >= -10*k_nMillion && usecDiff <= 10*k_nMillion
Assertion Failed: usecElapsed >= 0
Assertion Failed: usecElapsed >= k_usecLinkStatsInstantaneousReportMinInterval
Assertion Failed: usecElapsedSinceLast >= 0
Assertion Failed: usecMaxNextThinkTime >= usecMinNextThinkTime+1000
Assertion Failed: usecNextWakeTime <= pNextThinker->GetLatestThinkTime()
Assertion Failed: usecNextWakeTime >= pNextThinker->GetEarliestThinkTime()
Assertion Failed: usecNow > 0x20000*k_usecAckDelayPrecision
Assertion Failed: usecTargetThinkTime < k_nThinkTime_Never
Assertion Failed: usecTargetThinkTime > 0
Attempting to connect via steam datagram using unsigned ticket, as per steamdatagram_client_debugticket_address
Attemt to send packet, but socket has been closed!
Auth ticket failed to parse.  %s
AuthenticAMD
Authority Information Access
B
BEGIN
BF-CBC
BF-CFB
BF-ECB
BF-OFB
BIO
BIO lib
BIO routines
BN lib
BRecvCryptoHandshake failed creating localhost socket pair
BT†›Îx
BUF lib
BUG!
BUG: Duplicate connection ID!
BUG_network_config_mismatch
BUG_no_ping_data
BackUp() can only be called after Next().
BackUp() can only be called after a successful Next().
Backup router %s going offline in %d seconds; seeking replacement
Backup router: %s  Ping = %d+%d=%d (front+back=total)
Bad UTF-8.
Bad cert identity.  %s
Bad identity in cert.  %s
Bad identity.  %s
Bad number on line
Bad number.
Basic OCSP Response
Bg*
Big Number part of OpenSSL 1.0.2j  26 Sep 2016
Biometric Info
Bookkeeping bug!
Bookkeeping bug: Can't remove logical socket from physical socket's table, it isn't there
Boolean default must be true or false.
But we still have a valid cert, continuing with that one
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.
C
C& google::protobuf::internal::scoped_array<C>::operator[](std::ptrdiff_t) const [with C = int; std::ptrdiff_t = long int]
C& google::protobuf::internal::scoped_ptr<C>::operator*() const [with C = google::protobuf::UnknownFieldSet]
C* google::protobuf::internal::scoped_ptr<C>::operator->() const [with C = google::protobuf::DescriptorPool::Tables]
C* google::protobuf::internal::scoped_ptr<C>::operator->() const [with C = google::protobuf::DynamicMessageFactory::PrototypeMap]
C* google::protobuf::internal::scoped_ptr<C>::operator->() const [with C = google::protobuf::Message]
C* google::protobuf::internal::scoped_ptr<C>::operator->() const [with C = google::protobuf::UnknownFieldSet]
CA Issuers
CA Repository
CAMELLIA-128-CBC
CAMELLIA-128-CFB
CAMELLIA-128-CFB1
CAMELLIA-128-CFB8
CAMELLIA-128-ECB
CAMELLIA-128-OFB
CAMELLIA-192-CBC
CAMELLIA-192-CFB
CAMELLIA-192-CFB1
CAMELLIA-192-CFB8
CAMELLIA-192-ECB
CAMELLIA-192-OFB
CAMELLIA-256-CBC
CAMELLIA-256-CFB
CAMELLIA-256-CFB1
CAMELLIA-256-CFB8
CAMELLIA-256-ECB
CAMELLIA-256-OFB
CAST5-CBC
CAST5-CFB
CAST5-ECB
CAST5-OFB
CCrypto::Base64Decode: insufficient output buffer (up to n*3/4+2 bytes required)
CCrypto::Base64Encode: insufficient output buffer (up to n*4/3+5 bytes required, plus linebreaks)
CCrypto::Base64Encode: insufficient output buffer for encoding, needed %d got %d
CCrypto::HexDecode: insufficient output buffer (input length %u, output size %u)
CHECK failed: !checkpoints_.empty():
CHECK failed: !coded_out.HadError():
CHECK failed: !extension->is_repeated:
CHECK failed: !is_closed_:
CHECK failed: !iter->second.is_repeated:
CHECK failed: !out.HadError():
CHECK failed: (&from) != (this):
CHECK failed: (&from) != (to):
CHECK failed: (&other) != (this):
CHECK failed: ((*extension).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_OPTIONAL):
CHECK failed: ((*extension).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_REPEATED):
CHECK failed: ((*extension).is_repeated ? REPEATED : OPTIONAL) == (OPTIONAL):
CHECK failed: ((*extension).is_repeated ? REPEATED : OPTIONAL) == (REPEATED):
CHECK failed: ((iter->second).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_OPTIONAL):
CHECK failed: ((iter->second).is_repeated ? REPEATED : OPTIONAL) == (OPTIONAL):
CHECK failed: ((iter->second).is_repeated ? REPEATED : OPTIONAL) == (REPEATED):
CHECK failed: (0) == (BufferSize()):
CHECK failed: (TYPE_LENGTH_DELIMITED) == (type()):
CHECK failed: (backup_bytes_) == (0):
CHECK failed: (buffer_size) >= (0):
CHECK failed: (buffer_used_) == (buffer_size_):
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization):
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization):
CHECK failed: (count) <= (buffer_used_):
CHECK failed: (count) <= (last_returned_size_):
CHECK failed: (count) <= (target_->size()):
CHECK failed: (count) >= (0):
CHECK failed: (cpp_type((*extension).type)) == (FieldDescriptor::CPPTYPE_MESSAGE):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32):
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64):
CHECK failed: (cpp_type((iter->second).type)) == (FieldDescriptor::CPPTYPE_MESSAGE):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_BOOL):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_DOUBLE):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_ENUM):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_FLOAT):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_INT32):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_INT64):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_MESSAGE):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_STRING):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_UINT32):
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_UINT64):
CHECK failed: (cpp_type(extension->type)) == (FieldDescriptor::CPPTYPE_MESSAGE):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_BOOL):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_DOUBLE):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_ENUM):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_FLOAT):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT32):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT64):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_STRING):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT32):
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT64):
CHECK failed: (current_size_) > (0):
CHECK failed: (descriptor->file()->pool()) == (DescriptorPool::generated_pool()):
CHECK failed: (digits) < (100):
CHECK failed: (end - target) == (size):
CHECK failed: (extension->is_packed) == (other_extension.is_packed):
CHECK failed: (extension->is_packed) == (packed):
CHECK failed: (extension->type) == (other_extension.type):
CHECK failed: (extensions_offset_) != (-1):
CHECK failed: (field->message_type()) == (desc):
CHECK failed: (field->options().ctype()) == (ctype):
CHECK failed: (field->type()) == (FieldDescriptor::TYPE_BYTES):
CHECK failed: (final_byte_count) < (target_byte_count):
CHECK failed: (from.GetDescriptor()) == (descriptor):
CHECK failed: (index) < (size()):
CHECK failed: (index) >= (0):
CHECK failed: (last_returned_size_) > (0):
CHECK failed: (len) >= (0):
CHECK failed: (message1->GetReflection()) == (this):
CHECK failed: (message2->GetReflection()) == (this):
CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP):
CHECK failed: (output->ByteCount()) == (expected_endpoint):
CHECK failed: (size()) < (Capacity()):
CHECK failed: (size) <= (6):
CHECK failed: (str.size()) <= (kuint32max):
CHECK failed: (target - output->data()) == (output->size()):
CHECK failed: (temp[0]) == ('1'):
CHECK failed: (temp[size-1]) == ('5'):
CHECK failed: (to->GetDescriptor()) == (descriptor):
CHECK failed: (type) != (WireFormatLite::TYPE_ENUM):
CHECK failed: (type) != (WireFormatLite::TYPE_GROUP):
CHECK failed: (type) != (WireFormatLite::TYPE_MESSAGE):
CHECK failed: (type) == (WireFormatLite::TYPE_ENUM):
CHECK failed: (v.size()) <= (kStringPrintfVectorMaxArgs):
CHECK failed: IsInitialized():
CHECK failed: allow_unknown_field_:
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL:
CHECK failed: builder_:
CHECK failed: checkpoints_.empty():
CHECK failed: cpp_type(extension->type) == WireFormatLite::CPPTYPE_MESSAGE:
CHECK failed: dest:
CHECK failed: dynamic.get() != NULL:
CHECK failed: errors == NULL:
CHECK failed: extension->is_repeated:
CHECK failed: fallback_database_ == NULL:
CHECK failed: field != NULL:
CHECK failed: field->is_repeated() || (index == -1):
CHECK failed: fields_ != NULL:
CHECK failed: file != NULL:
CHECK failed: generated_database_->Add(encoded_file_descriptor, size):
CHECK failed: has_default_value():
CHECK failed: i >= 0:
CHECK failed: is_prototype():
CHECK failed: is_repeated:
CHECK failed: iter != extensions_.end():
CHECK failed: iter == extensions_.end():
CHECK failed: mutex_ == NULL:
CHECK failed: options->ParseFromString(buf):
CHECK failed: options_descriptor:
CHECK failed: original_uninterpreted_options_field != NULL:
CHECK failed: output->message_prototype != NULL:
CHECK failed: output:
CHECK failed: prototype != NULL:
CHECK failed: result != NULL:
CHECK failed: snprintf_result > 0 && snprintf_result < kDoubleToBufferSize:
CHECK failed: snprintf_result > 0 && snprintf_result < kFloatToBufferSize:
CHECK failed: trees:
CHECK failed: type == WireFormatLite::TYPE_MESSAGE || type == WireFormatLite::TYPE_GROUP:
CHECK failed: type > 0 && type <= FieldDescriptor::MAX_TYPE:
CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE:
CHECK failed: uninterpreted_options_field != NULL:
CHECK failed: value.size() <= kint32max:
CMAC
CMS routines
CMsgSteamDatagramClientPingSampleRequest
CMsgSteamDatagramConnectOK
CMsgSteamDatagramConnectRequest
CMsgSteamDatagramConnectionClosed
CMsgSteamDatagramConnectionStatsP2PRouterToClient
CMsgSteamDatagramConnectionStatsRouterToClient
CMsgSteamDatagramConnectionStatsRouterToClient from %s missing seq_num_r2c
CMsgSteamDatagramConnectionStatsRouterToServer
CMsgSteamDatagramGameserverPing
CMsgSteamDatagramGameserverSessionEstablished
CMsgSteamDatagramNoConnection
CMsgSteamDatagramNoSessionRelayToClient
CMsgSteamDatagramNoSessionRelayToPeer
CMsgSteamDatagramP2PBadRouteRouterToClient
CMsgSteamDatagramP2PSessionEstablished
CMsgSteamDatagramSignedRelayAuthTicket protobuf parse failed
CMsgSteamDatagramSignedRelayAuthTicket.ticket protobuf parse failed
CMsgSteamSockets_UDP_ChallengeReply
CMsgSteamSockets_UDP_ChallengeRequest
CMsgSteamSockets_UDP_ConnectOK
CMsgSteamSockets_UDP_ConnectRequest
CMsgSteamSockets_UDP_ConnectionClosed
CMsgSteamSockets_UDP_NoConnection
CN
CONF lib
CPPTYPE_BOOL
CPPTYPE_DOUBLE
CPPTYPE_ENUM
CPPTYPE_FLOAT
CPPTYPE_INT32
CPPTYPE_INT64
CPPTYPE_STRING
CPPTYPE_UINT32
CPPTYPE_UINT64
CRLReason
CRYPTO lib
CSDRClientShutdown
CSPName
CSharedSocket client table corruption!
CSteamNetworkConnectionP2PSDR inbound connection received stats while in state 'connecting'.
CSteamNetworkConnectionP2PSDR received ProcessMessage_P2PSessionEstablished while in state %d.  Rejecting packet with ConnectionClosed message.
CSteamNetworkConnectionPipe connections shouldn't try to send 'packets'!
CSteamNetworkConnectionSDRClientBase received data packet while in state %d.  Rejecting packet with ConnectionClosed message.
CSteamNetworkConnectionSDRClientBase received data packet while in the 'connecting' state.  Dropping packet; resending ConnctRequest
CSteamNetworkConnectionToSDRServer received ProcessMessage_GameserverSessionEstablished while in state %d.  Rejecting packet with ConnectionClosed message.
CSteamNetworkConnectionToSDRServer received Stats while in state %d.  Rejecting packet with ConnectionClosed message.
CSteamNetworkConnectionToSDRServer received e2e stats while in Connecting state.  Resending ConnectRequest.
CSteamNetworkListenSocketP2P::BInit failed?  %s
CSteamSocketNetworking for %s got SteamNetworkingSocketsConfigUpdated_t notification
CT Certificate SCTs
CT Precertificate Poison
CT Precertificate SCTs
CT Precertificate Signer
CUtlBuffer::GetStringFast: binary buffers only
CUtlBuffer::GetStringFast: no string termination
CUtlLinkedList overflow!
CXXABI_1.3
CXXABI_1.3.5
Callback doesn't fit!
Callbacks backing up and not being checked.  Need to check them more frequently!
Called SteamDatagramClient_SetPartner too late!
Can's serialize gameserver identity '%s' for unsigned ticket.  %s
Can's serialize local identity '%s' for unsigned ticket.  %s
Can't
Can't BackUp() after failed Next().
Can't back up over more bytes than were returned by the last call to Next().
Can't get Steam interface '%s'
Can't get here.
Can't get here: failed to get default value as string
Can't get network config from CDN. Check Internet connection
Can't get steam interface '%s'
Can't open '%s' as per SDR_NETWORK_CONFIG
Can't select relay in '%s', no relay addresses!
Can't send CMsgSteamDatagramP2PRendezvous; %u bytes is too big!
Can't send NoConnection, we need at least one of from/to connection ID!
Cannot accept connection %u from %s, because we don't know how to reply back to them?  How did we already lose track of their session?
Cannot allocate buffer larger than kint32max for
Cannot call BuildFile on a DescriptorPool that uses a DescriptorDatabase.  You must instead find a way to get your file into the underlying database.
Cannot communicate with relays without network config.
Cannot connect to proxied gameserver %s via steam datagram.  Library has not been initialized yet (or it failed).
Cannot connect to proxied gameserver %s via steam datagram.  We don't have an authorization ticket!
Cannot connect via %s via P2P+SDR.  Library has not been initialized yet (or it failed).
Cannot create IPv4 connection.  %s
Cannot create P2P connection to %s.  %s
Cannot create SDR connection to hosted dedicated server.  %s
Cannot create hosted dedicated server listen socket.  %s
Cannot create listen socket.  %s
Cannot create shared steam datagram socket.  %s
Cannot deduce public IP.  Datacenter environment variables misconfigured!
Cannot find ISteamNetworkingSocketsSerialized.  Client needs newer client binaries
Cannot post failure callback for non-SteamID-based P2P
Cannot request a cert; we don't know our SteamID (yet?).
Cannot talk to any relays. Check Internet connection
Cannot use specific IP address.
Cert expired %d seconds ago.  Discarding and requesting another
Cert expires in %d seconds.  Not requesting another
Cert expires in %d seconds.  Requesting another, but keeping current cert in case request fails
Cert failed protobuf decode
Cert failed protobuf parse
Cert failure %d: %s
Cert failure: %s
Cert failure: Cert expired %ld secs ago at %ld
Cert has invalid identity key
Cert is for AppID %u instead of %u
Cert isn't a valid PEM-like text block
Cert must be bound to an AppID.
Cert request for %s failed with reason code %d.  %s
Cert request returned invalid cert
Cert request returned invalid key type %d
Cert request returned invalid private key
Cert request returned invalid public key
Cert request returned invalid signature
Cert request returned public/private key mismatch
Cert signed with key %llu; not in trusted list
Cert was issued to %s, not %s
Certs restricted data center are for anon GS only.  Not %s
Cg*
Challenge too old.
ChallengeReply
ChallengeRequest
ClearField
Client connection is changing protocol version after being connected?  %d -> %d
Client sessions in physical socket table, even thogh we are about to destroy the parent logical listen socket
ClientConsecutitivePingTimeoutsFail
ClientConsecutitivePingTimeoutsFailInitial
ClientDebugTicketAddress
ClientForceProxyAddr
ClientForceRelayCluster
ClientMinPingsBeforePingAccurate
ClientPingSampleRequest
ClientSingleSocket
CloseSessionWithUser
Cluster '%s' has a selection penalty of %dms for load balancing purposes.  (As per %s).
Cluster '%s' no longer has a selection penalty for load balancing purposes.  (As per %s).
Cluster '%s' selection penalty for load balancing purposes changed from %dms to %dms.  (As per %s).
Cluster bookkeeping error
Cluster is tagged to keep, but we don't know the ping time?
Code Signing
Comment started here.
Communicating via relay in '%s'
Communication with at least one Steam Datagram routing cluster has been restored.
Communications with routing cluster '%s' established.
Communications with routing cluster '%s' have been disrupted.
Communications with routing cluster '%s' restored.
ConnectRequest
ConnectToHostedDedicatedServer should not be called thorugh a gameserver's ISteamSocketNetworking
Connection %u cannot use self-signed cert; failing connection.
Connection %u is continuing with self-signed cert.
Connection already has %u bytes pending, cannot queue any more messages
Connection already open.
Connection dropped
Connection gap %.0fms.
Connection list bookeeping corruption
Connection not destroyed properly
ConnectionClosed
ConnectionShutdown
ConnectionTimedOut didn't do what it is supposed to!
Control message of type %d failed serialization consistency check!  (%d, expected %d)
Control message of type %d is too big.  (%d bytes; max is %d)
Could not create an instance of
Could not find field named "
Could not find field type.
Couldn't parse default value "
CreateHostedDedicatedServerListenSocket should be called thorugh a gameserver's ISteamSocketNetworking
CrlID
Crypt info failed protobuf decode
Crypto handshake missing cert or session data
Current primary relay '%s' is no longer eligible for selection.  Deselecting
D
DC
DES-CDMF
DES-CFB
DES-CFB1
DES-CFB8
DES-ECB
DES-EDE
DES-EDE-CBC
DES-EDE-CFB
DES-EDE-OFB
DES-EDE3
DES-EDE3-CBC
DES-EDE3-CFB
DES-EDE3-CFB1
DES-EDE3-CFB8
DES-EDE3-OFB
DES-OFB
DESX-CBC
DH lib
DOD
DSA lib
DSA-SHA
DSA-SHA1
DSA-SHA1-old
DSA-old
DSO lib
DSO support routines
Data contains revision %d, not newer than current revision %d; ignoring.
DataPacket
DataRouterToClient
Default value for an enum field must be an identifier.
Dependency unavailable
Destroy() not used properly
Dg*
Didn't find quality metrics for old primary?
Didn't send valid connection ID
Diffie-Hellman based MAC
Diffie-Hellman routines
Directory
Discarding handshake timestamp that's %lldms old, not sending in ConnectOK
Discarding inactive session %s for connection %u.  %s
Discarding invalid CMsgSteamDatagramP2PRendezvous from %s
Discarding invalid CMsgSteamDatagramP2PRendezvous from %s.  Must specify exactly one of connect_request or to_connection_id
Discarding invalid SteamNetworkingSocketsRecvP2PRendezvous_t - invalid SteamID or ConnectionID
Discarding oldest SDR ticket for server %s.  Expiry=%u
Don't lookup extension types if they aren't present (1).
Don't lookup extension types if they aren't present (2).
Dropping connect request from %s.  Existing connection on virtual port %d, now they are asking for virtual port %d!?
Dropping malformed CMsgSteamDatagramConnectRequest from %s with bad identity in cert.  %s
Dropping malformed CMsgSteamDatagramConnectRequest from %s.  Missing / invalid envelope fields.  [ %s ]
Dropping malformed CMsgSteamDatagramConnectionClosed from %s.  Bad identity.  %s
Dropping malformed CMsgSteamDatagramConnectionClosed from %s.  Missing / invalid envelope fields.  [ %s ]
Duplicate relay session key!
D¬‹ˇD¬‹
E
E-mail Protection
EC lib
END
ENGINE lib
ERROR
EVP lib
Ed25519 key public doesn't match private!
Eg*
Empty identity msg
End-of-file inside block comment.
End-to-end connection: BUG: invalid state %d!
End-to-end connection: closed by remote host, reason code %d.  (%s)
End-to-end connection: closed due to problem detected locally, reason code %d.  (%s)
End-to-end connection: closed, reason code %d.  (%s)
End-to-end connection: connected
End-to-end connection: connecting
End-to-end connection: performing rendezvous
Enterprises
Enum type "
Enums must contain at least one value.
Error parsing text-format
Error reporting not implemented.
Error while parsing option value for "
Error with crypto.  %s
Expect a decimal number.
Expected "
Expected %d but got %d!
Expected double.
Expected eight hex digits up to 10ffff for \U escape sequence
Expected four hex digits for \u escape sequence.
Expected hex digits for escape sequence.
Expected identifier.
Expected integer or identifier.
Expected integer.
Expected string.
Experimental
Extended OCSP Status
Extension "
Extension conflicts with extension already in database: extend
Extension factory's GetPrototype() returned NULL for extension:
Extension not found.
Extension number $0 has already been used in "$1" by extension "$2" defined in $3.
Extension number $0 has already been used in "$1" by extension "$2".
Extension numbers cannot be greater than $0.
Extension numbers must be positive integers.
Extension range $0 to $1 includes field "$2" ($3).
Extension range $0 to $1 overlaps with already-defined range $2 to $3.
Extension range end number must be greater than start number.
Extensions of MessageSets must be optional messages.
Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.
F
FATAL
FILE pointer
FIPS routines
FIXME!
Failed
Failed crypto init in ConnectOK packet.  %s
Failed crypto init.  %s
Failed to Base64 decode cert
Failed to accept P2P connection from %s.  %s
Failed to accept connection from %s.  %s
Failed to allocate message
Failed to bind socket.  Error code 0x%08X.
Failed to communicate with routing cluster '%s'.
Failed to connect to Steam
Failed to create UDP socekt pair.  %s
Failed to create UDP socket to talk to %s.  %s
Failed to get cert from steam
Failed to initialize SDR client functionality on gameserver interface to take ping measurements.  %s
Failed to initialize SDR client functionality to take ping measurements.  %s
Failed to initialize network config from CDN!%s
Failed to locate/create P2P sessions listen socket
Failed to parse '%s' as per SDR_NETWORK_CONFIG.  %s
Failed to parse authorized client identity.  %s
Failed to parse gameserver identity.  %s
Failed to serialize identity to %s message.  %s
Failed to set socket for IPv6 only (IPV6_V6ONLY=1).  Error code 0x%08X.  Continuing anyway.
Failed to set socket for dual stack (IPV6_V6ONLY=0).  Error code 0x%08X.
Failed to set socket for dual stack (IPV6_V6ONLY=0).  Error code 0x%08X.  Continuing using IPv6 only!
Failed to set socket nonblocking mode.  Error code 0x%08x.
Failed to set socket recv buffer size.  Error code 0x%08x.
Failed to set socket send buffer size.  Error code 0x%08x.
Failed to varint decode size of stats blob
FakeMessageLoss_Recv
FakeMessageLoss_Send
FakePacketLag_Recv
FakePacketLag_Send
FakePacketLoss_Recv
FakePacketLoss_Send
FakePacketReorder_Recv
FakePacketReorder_Send
FakePacketReorder_Time
False
FastHexToBuffer() wants non-negative integers, not
Fatal Assertion Failed: SHA256_Init( &c )
Fatal Assertion Failed: cubDest >= 0
Fatal Assertion Failed: s_dev_urandom_fd >= 0
Fatal Assertion Failed: urandom_result > 0 || ( urandom_result < 0 && errno == EINTR )
Fatal assert failed: %s, line %d.  Application exiting.
Feel free to add support for more if you need it.
Fg*
Field       :
Field "
Field does not match message type.
Field is repeated; the method requires a singular field.
Field is singular; the method requires a repeated field.
Field number $0 has already been used in "$1" by field "$2".
Field numbers $0 through $1 are reserved for the protocol buffer library implementation.
Field numbers cannot be greater than $0.
Field numbers must be positive integers.
Field type:
Field with message or enum type missing type_name.
Field with primitive type has type_name.
Field:
FieldDescriptorProto.extendee not set for extension field.
FieldDescriptorProto.extendee set for non-extension field.
FieldDescriptorProto.oneof_index $0 is out of range for type "$1".
FieldDescriptorProto.oneof_index should not be set for extensions.
FieldSize
Fields of oneofs must themselves have label LABEL_OPTIONAL.
File already exists in database:
File appears to be in generated pool but wasn't registered:
File is already registered:
File recursively imports itself:
Files that do not use optimize_for = LITE_RUNTIME cannot import files which do use this option.  This file is not lite, but it imports "
Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.
First argument to Swap() (of type "
First argument to SwapFields() (of type "
Forgetting client %s relay session.  Last communication was %.1f seconds ago
G
GCC: (Ubuntu 4.8.1-2ubuntu1~12.04+steamrt2+srt1) 4.8.1
GCC: (Ubuntu 4.8.4-1ubuntu15~12.04+steamrt1+srt2) 4.8.4
GCC: (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3
GLIBCXX_3.4
GLIBCXX_3.4.11
GLIBCXX_3.4.18
GLIBCXX_3.4.19
GLIBCXX_3.4.5
GLIBCXX_3.4.9
GLIBC_2.14
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.7
GN
GNU
GOST 28147-89
GOST 28147-89 Cryptocom ParamSet
GOST 28147-89 MAC
GOST 34.10-2001 Cryptocom
GOST 34.10-94 Cryptocom
GOST R 34.10-2001
GOST R 34.10-2001 DH
GOST R 34.10-94
GOST R 34.10-94 DH
GOST R 34.11-94
GOST R 34.11-94 PRF
GOST R 34.11-94 with GOST R 34.10-2001
GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom
GOST R 34.11-94 with GOST R 34.10-94
GOST R 34.11-94 with GOST R 34.10-94 Cryptocom
GOST R 3410-2001 Parameter Set Cryptocom
Gameserver logged on to Steam, assigned identity %s
GameserverSessionEstablished
GetBool
GetDouble
GetEnum
GetFloat
GetHostedDedicatedServerAddress should be called thorugh a gameserver's ISteamSocketNetworking
GetHostedDedicatedServerAddress should not be called before calling SteamDatagramServer_Init.
GetInt32
GetInt64
GetMessage
GetNetworkConfigJSON told us it had a config, then failed?!
GetRepeatedBool
GetRepeatedDouble
GetRepeatedEnum
GetRepeatedFloat
GetRepeatedInt32
GetRepeatedInt64
GetRepeatedMessage
GetRepeatedString
GetRepeatedStringReference
GetRepeatedUInt32
GetRepeatedUInt64
GetString
GetStringReference
GetUInt32
GetUInt64
Gg*
Got SDR network config.  %s
Got cert for %s from Steam
Got incoming P2P session connection request when we already had a connection.  This could happen legit, but we aren't handling it right now.
H
HMAC
HMAC GOST 34.11-94
HMAC routines
HasField
Hex and octal numbers must be integers.
Hg*
Hold Instruction Call Issuer
Hold Instruction Code
Hold Instruction None
Hold Instruction Reject
Host is configured with multiple public IPs.  Using %s; ignoring %s
How do we have an active SDR client connection with no sessions?
How do we not have a parent listen socket?
I
IANA
ICC or token signature
IDEA-CBC
IDEA-CFB
IDEA-ECB
IDEA-OFB
INFO
INVALID_CPPTYPE
IPSec End System
IPSec Tunnel
IPSec User
ISO
ISO Member Body
ISO US Member Body
ISO-US
ISteamNetworkingSocketsSerialized::GetCertAsync failed
Identity %s isn't valid for P2P (Only SteamIDs currently supported).
Identity is blank
Ig*
Ignored bad %s from %s.  %s
Ignoring P2P CMsgSteamDatagramConnectRequest from %s; missing required fields
Ignoring P2P connection request from %s.  We cannot accept it since we don't have a cert from Steam yet!
Ignoring P2PFailure notification about unknown ConnectionID %u from %s
Ignoring inavlid forced relay cluster '%s'
Ignoring invalid forced relay address '%s'
Ignoring nonsensical migration request from %s to migrate to %s, which is his own address
Ignoring request by %s to migrate to %s.  Can't locate requesting relay shared cluster data???
Ignoring request by %s to migrate to %s.  Failed to allocate resources to talk to that relay.
Ignoring request by %s to migrate to %s.  Target address appears to be in a different relay cluster?  (%s)
Ignoring request by %s to migrate to %s.  We already know that relay is shutting down very soon.
Ignoring request by %s to migrate to %s.  We don't recognize that target address in the network config.
Ignoring request by %s to migrate to %s.  We had problems communicating with that relay %.1fs ago.
Ignoring stray packet from %s received on port %d.  Should only be talking to %s on that port.
Ignoring unsolicited/spoofed/late packet from %s.
Ignoring weird timestamp %llu in ChallengeReply, current time is %llu.
Ignoring weird timestamp %llu in ConnectOK, current time is %llu, remote delay was %lld.
Ignoring/abandoning migration request.  Current primary %s is requesting to send us to %s, but our migration target is %s?
Ignoring/abandoning migration request.  Current primary %s no longer has a request active
Ignoring/abandoning migration request.  SDR client deactivated, or no primary selected
Import "
Incompatible protocol format (SNP)
Inconceivable!
Incorrect challenge.  Could be spoofed.
Incorrect client challenge / connection ID %x in RouterPingReply from %s.  Reply could be spoofed, ignoring.
Incorrect connection ID
Incorrect connection ID, when we do have a connection for this address.  Could be spoofed, ignoring.
Incorrect connection ID.  Message is stale or could be spoofed, ignoring.
Independent
Index must be -1 for non-repeated fields
Index must be -1 for singular fields.
Index must be in range of repeated field values.
Index out-of-bounds (field is empty).
Inherit all
Initial attempt to contact %s failed.  Giving up after %d consecutive failures
Initted interface twice?
Integer out of range.
Internal P2P message from %s is %d bytes; that's not big enough for the header!
Internal error accepting connection.  %s
International Organizations
Interpreting non ascii codepoint %d.
Invalid DH key
Invalid JSON data on line %d: %s
Invalid JSON data: %s
Invalid POP name '%s'; must be exactly 3 or 4 characters
Invalid SDR_PRIVATE_KEY or SDR_CERT.  %s
Invalid SNP frame lead byte 0x%02x
Invalid SNP frame lead byte 0x%02x. (size bits)
Invalid SteamID %llu
Invalid SteamID %llu (in legacy field)
Invalid Xbox pairwise ID '%s'
Invalid address families
Invalid address family request when binding to IPv4 address
Invalid address family request when binding to IPv6 address
Invalid cert
Invalid cert or unsupported public key type
Invalid cert signature
Invalid combination of steam datagram config and gameserver sample.  %s
Invalid control characters encountered in text.
Invalid encoded message length %d.  Packet is %d bytes.
Invalid escape sequence in string literal.
Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().
Invalid float number:
Invalid generic bytes (len=%d)
Invalid generic string '%s'
Invalid identity
Invalid lead byte 0x%02x
Invalid message set extension.
Invalid numeric reason code
Invalid private key
Invalid proto descriptor for file "
Invalid public dependency index.
Invalid public key
Invalid reliable message header byte 0x%02x
Invalid routing blob (%d bytes)
Invalid strings::Substitute() format string: "
Invalid symbol name:
Invalid syntax on line
Invalid value for boolean field "
Invalid weak dependency index.
Invalid wire type for CPPTYPE_INT32:
Invalid wire type for CPPTYPE_INT64:
Invalid wire type for CPPTYPE_MESSAGE:
Invalid wire type for CPPTYPE_UINT32:
Invalid wire type for CPPTYPE_UINT64:
Invalidity Date
IpAllowWithoutAuth
J
JOINT-ISO-ITU-T
JSON file is empty
Jg*
K
K=£”˘|
KISA
Kg*
L
LF<ä¿&
Lagged packet remains in queue after socket destroyed or queued for destruction!
Lead byte %d invalid for ticket blob
Lead byte 0x%02x not a known message ID
Lg*
Listen socket child list corruption!
Listening for SDR relayed traffic on UDP port %d (virtual port %d).
Loaded network config revision %d from '%s' as per SDR_NETWORK_CONFIG
Loaded revision %d OK
LocalKeySet
Log_AckRTT
Log_Message
Log_Packet
Log_PacketGaps
Log_RelayPings
Log_p2prendezvous
Lost
Lost backup #%d %s for connection %u.  %s
Lost connection to all relays. Check Internet connection
Lost connection to steam
Lost connectivity to ALL Steam Datagram routing clusters.  Possible problem with local internet connection?
Lost primary session %s for connection %u.  %s
M
MD5-SHA1
MGF1
MIME MHS
MTU / header size problem!
Mail
Malformed MsgSteamDatagramDataRouterToClient from %s: Failed to varint decode size of stats message
Malformed MsgSteamDatagramDataRouterToClient from %s: Flags indicate presence of TimeSincePrev, but no room for it.  Stats message size %d, packet size %d
Malformed MsgSteamDatagramDataRouterToClient from %s: packet too small
Malformed MsgSteamDatagramDataRouterToClient from %s: protobuf failed to parse inline stats message
Malformed MsgSteamDatagramDataRouterToClient from %s: stats message size doesn't make sense.  Stats message size %d, packet size %d
Malformed MsgSteamDatagramDataRouterToServer from %s: Failed to varint decode size of stats message
Malformed MsgSteamDatagramDataRouterToServer from %s: Flags indicate presence of TimeSincePrev, but no room for it.  Stats message size %d, packet size %d
Malformed MsgSteamDatagramDataRouterToServer from %s: packet too small
Malformed MsgSteamDatagramDataRouterToServer from %s: protobuf failed to parse inline stats message
Malformed MsgSteamDatagramDataRouterToServer from %s: stats message size %d doesn't make sense.
Management
MaxRate
Message class "
Message extensions cannot have required fields.
Message missing required fields:
Message of type "
Message size %d is too big.  Max is %d
Message type "
Message type:
MessageSets cannot have fields, only extensions.
Messages can't have default values!
Messages can't have default values.
Mg*
Microsoft CSP Name
Microsoft Commercial Code Signing
Microsoft Encrypted File System
Microsoft Extension Request
Microsoft Individual Code Signing
Microsoft Local Key set
Microsoft Server Gated Crypto
Microsoft Smartcardlogin
Microsoft Trust List Signing
Microsoft Universal Principal Name
Migration target.
MinRate
Missing Steam interfaces, cannot tell what universe we're running in
Missing connection ID
Missing connection_id.
Missing field: FileDescriptorProto.name.
Missing name.
Missing required 'pops' list.
Msg type %d is %d bytes, larger than MTU of %d bytes
Multiple extension registrations for type "
Multiple sessions on %s with the same connection ID %u?
Must init either user or gameserver interface before asking for ping times.
Must specify local port.
MutableRawRepeatedField
MutableRepeatedMessage
N
N25SteamNetworkingSocketsLib10CSDRClientE
N25SteamNetworkingSocketsLib13CPacketLaggerE
N25SteamNetworkingSocketsLib13CSharedSocket10RemoteHostE
N25SteamNetworkingSocketsLib15IBoundUDPSocketE
N25SteamNetworkingSocketsLib16LinkStatsTrackerINS_21LinkStatsTrackerRelayEEE
N25SteamNetworkingSocketsLib16LinkStatsTrackerINS_24LinkStatsTrackerEndToEndEEE
N25SteamNetworkingSocketsLib20LinkStatsTrackerBaseE
N25SteamNetworkingSocketsLib21CDedicatedBoundSocketE
N25SteamNetworkingSocketsLib21LinkStatsTrackerRelayE
N25SteamNetworkingSocketsLib23CSteamNetworkingSocketsE
N25SteamNetworkingSocketsLib24CSteamNetworkingMessagesE
N25SteamNetworkingSocketsLib24LinkStatsTrackerEndToEndE
N25SteamNetworkingSocketsLib26CSteamNetworkConnectionUDPE
N25SteamNetworkingSocketsLib26SteamDatagramClientThinkerE
N25SteamNetworkingSocketsLib27CSteamNetworkConnectionBaseE
N25SteamNetworkingSocketsLib27CSteamNetworkConnectionPipeE
N25SteamNetworkingSocketsLib27CSteamNetworkingSocketsBaseE
N25SteamNetworkingSocketsLib28CSteamNetworkListenSocketP2PE
N25SteamNetworkingSocketsLib29CSteamNetworkConnectionP2PSDRE
N25SteamNetworkingSocketsLib29CSteamNetworkListenSocketBaseE
N25SteamNetworkingSocketsLib30SteamNetworkingMessagesSessionE
N25SteamNetworkingSocketsLib31CSteamNetworkingSocketsCallbackI23SteamServersConnected_tEE
N25SteamNetworkingSocketsLib31CSteamNetworkingSocketsCallbackI26SteamServersDisconnected_tEE
N25SteamNetworkingSocketsLib31CSteamNetworkingSocketsCallbackI27SteamServerConnectFailure_tEE
N25SteamNetworkingSocketsLib31CSteamNetworkingSocketsCallbackI37SteamNetworkingSocketsConfigUpdated_tEE
N25SteamNetworkingSocketsLib31CSteamNetworkingSocketsCallbackI38SteamNetworkingSocketsRecvP2PFailure_tEE
N25SteamNetworkingSocketsLib31CSteamNetworkingSocketsCallbackI41SteamNetworkingSocketsRecvP2PRendezvous_tEE
N25SteamNetworkingSocketsLib33CSteamNetworkConnectionP2PSessionE
N25SteamNetworkingSocketsLib33CSteamNetworkingSocketsCallResultI28SteamNetworkingSocketsCert_tEE
N25SteamNetworkingSocketsLib34CSteamNetworkConnectionToSDRServerE
N25SteamNetworkingSocketsLib34CSteamNetworkListenSocketDirectUDPE
N25SteamNetworkingSocketsLib35CSteamNetworkingSocketsCallbackBaseE
N25SteamNetworkingSocketsLib36CSteamNetworkConnectionSDRClientBaseE
N25SteamNetworkingSocketsLib36CSteamNetworkingSocketsCallbackBaseTI23SteamServersConnected_tEE
N25SteamNetworkingSocketsLib36CSteamNetworkingSocketsCallbackBaseTI26SteamServersDisconnected_tEE
N25SteamNetworkingSocketsLib36CSteamNetworkingSocketsCallbackBaseTI27SteamServerConnectFailure_tEE
N25SteamNetworkingSocketsLib36CSteamNetworkingSocketsCallbackBaseTI37SteamNetworkingSocketsConfigUpdated_tEE
N25SteamNetworkingSocketsLib36CSteamNetworkingSocketsCallbackBaseTI38SteamNetworkingSocketsRecvP2PFailure_tEE
N25SteamNetworkingSocketsLib36CSteamNetworkingSocketsCallbackBaseTI41SteamNetworkingSocketsRecvP2PRendezvous_tEE
N25SteamNetworkingSocketsLib37CSteamNetworkingSocketsCallResultBaseE
N25SteamNetworkingSocketsLib40CSteamNetworkConnectionlocalhostLoopbackE
N25SteamNetworkingSocketsLib44CSteamNetworkAcceptedConnectionFromSDRClientE
N25SteamNetworkingSocketsLib8IThinkerE
N5ujson5value11null_impl_tE
N5ujson5value12array_impl_tE
N5ujson5value13number_impl_tE
N5ujson5value13object_impl_tE
N5ujson5value13string_impl_tE
N5ujson5value14boolean_impl_tE
N5ujson5value6impl_tE
N5ujson9exceptionE
N6google8protobuf10ReflectionE
N6google8protobuf10TextFormat17FieldValuePrinterE
N6google8protobuf10TextFormat6FinderE
N6google8protobuf10TextFormat6Parser10ParserImpl20ParserErrorCollectorE
N6google8protobuf11EnumOptionsE
N6google8protobuf11FileOptionsE
N6google8protobuf11MessageLiteE
N6google8protobuf12FieldOptionsE
N6google8protobuf13MethodOptionsE
N6google8protobuf14DescriptorPool14ErrorCollectorE
N6google8protobuf14DynamicMessageE
N6google8protobuf14FatalExceptionE
N6google8protobuf14MessageFactoryE
N6google8protobuf14MessageOptionsE
N6google8protobuf14ServiceOptionsE
N6google8protobuf14SourceCodeInfoE
N6google8protobuf15DescriptorProtoE
N6google8protobuf16EnumValueOptionsE
N6google8protobuf17DescriptorBuilder17OptionInterpreter21AggregateOptionFinderE
N6google8protobuf17FileDescriptorSetE
N6google8protobuf18DescriptorDatabaseE
N6google8protobuf19EnumDescriptorProtoE
N6google8protobuf19FileDescriptorProtoE
N6google8protobuf19UninterpretedOptionE
N6google8protobuf20FieldDescriptorProtoE
N6google8protobuf20OneofDescriptorProtoE
N6google8protobuf21DynamicMessageFactoryE
N6google8protobuf21MethodDescriptorProtoE
N6google8protobuf22DescriptorPoolDatabaseE
N6google8protobuf22ServiceDescriptorProtoE
N6google8protobuf23SourceCodeInfo_LocationE
N6google8protobuf24EnumValueDescriptorProtoE
N6google8protobuf24MergedDescriptorDatabaseE
N6google8protobuf24SimpleDescriptorDatabaseE
N6google8protobuf25EncodedDescriptorDatabaseE
N6google8protobuf28UninterpretedOption_NamePartE
N6google8protobuf2io14ErrorCollectorE
N6google8protobuf2io15FileInputStream22CopyingFileInputStreamE
N6google8protobuf2io15FileInputStreamE
N6google8protobuf2io16ArrayInputStreamE
N6google8protobuf2io16FileOutputStream23CopyingFileOutputStreamE
N6google8protobuf2io16FileOutputStreamE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18CopyingInputStreamE
N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE
N6google8protobuf2io18IstreamInputStreamE
N6google8protobuf2io18StringOutputStreamE
N6google8protobuf2io19CopyingOutputStreamE
N6google8protobuf2io19LimitingInputStreamE
N6google8protobuf2io19OstreamOutputStream26CopyingOstreamOutputStreamE
N6google8protobuf2io19OstreamOutputStreamE
N6google8protobuf2io19ZeroCopyInputStreamE
N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf2io24ConcatenatingInputStreamE
N6google8protobuf2io25CopyingInputStreamAdaptorE
N6google8protobuf2io26CopyingOutputStreamAdaptorE
N6google8protobuf30DescriptorProto_ExtensionRangeE
N6google8protobuf7ClosureE
N6google8protobuf7MessageE
N6google8protobuf8internal12FieldSkipperE
N6google8protobuf8internal16FunctionClosure0E
N6google8protobuf8internal16FunctionClosure1IPSt4pairIPKNS0_20FileDescriptorTablesEPKNS0_14SourceCodeInfoEEEE
N6google8protobuf8internal22MessageSetFieldSkipperE
N6google8protobuf8internal24GeneratedExtensionFinderE
N6google8protobuf8internal26GeneratedMessageReflectionE
N6google8protobuf8internal27UnknownFieldSetFieldSkipperE
N6google8protobuf8internal29CodedOutputStreamFieldSkipperE
N6google8protobuf8internal29DescriptorPoolExtensionFinderE
NACK
NEW: %s
NSt6thread10_Impl_baseE
NSt6thread5_ImplISt12_Bind_simpleIFPFvvEvEEEE
NULL output buffer with non-zero size passed to Base64Decode
NULL output buffer with non-zero size passed to Base64Encode
Nack count of %llu<<3 is crazy
Nack range underflow, end=%lld, num=%lld
Nagle_Time
Need space between identifier and decimal point.
Need space between number and identifier.
Netscape
Netscape Base Url
Netscape CA Policy Url
Netscape CA Revocation Url
Netscape Cert Type
Netscape Certificate Extension
Netscape Certificate Sequence
Netscape Comment
Netscape Communications Corp.
Netscape Data Type
Netscape Renewal Url
Netscape Revocation Url
Netscape SSL Server Name
Netscape Server Gated Crypto
Network config missing revision identifier.
Network config router list/map mismatch!
Network configuration: %s
Ng*
No ISteamNetworkingSocketsSerialized; old steam client binaries
No ISteamUtils?  Using local clock to check if cert expired!
No P2P rights for this app
No default value
No field named "uninterpreted_option" in the Options proto.
No identity data
No identity data is present
No network config; only relays in hardcoded whitelist will get through
No partner pipe?
No ping data available.
NoSession
Non-primitive types can't be packed.
Non-repeated field "
Not listening for P2P on that virtual port
Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, "
Number out of range for integer cast.
Numbers starting with leading zero must be in octal.
O
OBJ lib
OCSP
OCSP Archive Cutoff
OCSP CRL ID
OCSP No Check
OCSP Nonce
OCSP Service Locator
OCSP Signing
OCSP lib
OCSP routines
OCSPSigning
OLD: %s
OPENSSL_ia32cap
ORG
OU
Oakley-EC2N-3
Oakley-EC2N-4
Offline in %ds.
Og*
Old/incorrect connection ID.  Message is for a stale connection, or is spoofed.  Ignoring.
Oneof must have at least one field.
Option "
Option field "
Option must have a name.
Option must not use reserved name "uninterpreted_option".
Outdent() without matching Indent().
Overflow serializing packet ack varint count
Overflow serializing packet nack varint count
OòH8oÍñêÊ¸$ˇ
O‹ºæ¸±wˇˆ˚‹˛
P
P2P %s
P2P connection got a connection state changed callback after detatching from session?
P2P connection received a message after detatching from session?
P2P session %s: Can't create connection.  %s
P2P session %s: Creating connection %u
P2P session %s: Implicitly accepted connection %u via SendMessageToUser
P2P session %s: Posting P2PSessionConnectFail_t, code %d
P2P session %s: connection %d %s: %d %s
P2P session %s: connection %u is idle timing out, but we have a partial message from our peer.  Assuming a message was sent just at the timeout deadline.   Extending timeout.
P2P session %s: connection %u is idle timing out.  But we still have unacked sent data?!?  This seems bad
P2P session %s: created
P2P session %s: idle timed out.  Destroying
P2P session %s: idle timing out.  Closing connection %u and destroying session
P2PBadRoute
P2PFailure via Steam from %s, connection %u.  Reason: %d %d %s
P2PSession destroyed
P2PSessionEstablished
P?steamnetworkingsockets_udp.cpp
PBE-MD2-DES
PBE-MD2-RC2-64
PBE-MD5-DES
PBE-MD5-RC2-64
PBE-SHA1-2DES
PBE-SHA1-3DES
PBE-SHA1-DES
PBE-SHA1-RC2-128
PBE-SHA1-RC2-40
PBE-SHA1-RC2-64
PBE-SHA1-RC4-128
PBE-SHA1-RC4-40
PBES2
PBKDF2
PBMAC1
PEM lib
PEM routines
PKCS12 lib
PKCS12 routines
PKCS7 lib
PKCS7 routines
PKIX
POP %s has invalid router address '%s'
POP '%s' lists invalid alias '%s'
PSPECIFIED
Packet is %d bytes, must be padded to at least %d bytes.
Packet lag time must be positive!
Packet of size %d is too small.
Parameter to BackUp() can't be negative.
Parse failure.  Length=%d, data begins %s
Payload exceeded max size of %d
Peer is running old software and needs to be udpated
Peer isn't logged in
Peer isn't running the app
Peer sent CMsgSteamDatagramP2PRoutes_RelayCluster without a ping?  Why bother?
Peer sent different ConnectionIDs for our same connectionID
Peer sent us a route with a score of %d, but ping to relay on their snd is %d.  Does not compute.
Peer sent us a route with a score, but didn't sent ping to relay on their end?!
Peer sent us a route without a score?
Pending ping measurement until network config is obtained.
Permanent Identifier
Pg*
Ping = %d+%d=%d (front+back=total)
Ping = %d+%d=%d (front+back=total).
Ping failure to cluster %s was %.1fs ago.  Discarding record of failure, might try again.
Ping location: %s
Ping measurement completed
Ping to %s timed out.  Giving up after %d consecutive failures
Ping to relay = %d
Pinging %s.
Pkt number lurch by %d; %04x->%04x
Policy Qualifier CPS
Policy Qualifier User Notice
Pop ID '%s' appears more than once in the config.  (Possibly as an alias.)
Port failure on %s was %.1fs ago.  Discarding record of failure on that port, might try again.
Primary router %s going offline in %d seconds; seeking replacement
Primary router: %s
Private
Private key doesn't match public key from cert
Problem     :
Problem     : Enum value did not match field type:    Expected  :
Problem     : Field is not the right type for this message:    Expected  :
Protobuf failed to parse
Protobuf parse failed.
Protocol Buffer reflection usage error:  Method      : google::protobuf::Reflection::
Protocol message serialized itself in invalid fashion.
Protocol message was modified concurrently during serialization.
Proxy Certificate Information
Q
Qg*
Qu•pö`
R
RAND lib
RC2-40-CBC
RC2-64-CBC
RC2-CFB
RC2-ECB
RC2-OFB
RC4-HMAC-MD5
RC5-CBC
RC5-CFB
RC5-ECB
RC5-OFB
RLE
RSA Data Security, Inc.
RSA Data Security, Inc. PKCS
RSA lib
RSA-MD2
RSA-MD4
RSA-MD5
RSA-MDC2
RSA-NP-MD5
RSA-RIPEMD160
RSA-SHA
RSA-SHA1
RSA-SHA1-2
RSA-SHA224
RSA-SHA256
RSA-SHA384
RSA-SHA512
RSAES-OAEP
RSASSA-PSS
RSA_blinding
Ranges should not overlap in this map!
Reached an unintended state: CPPTYPE_MESSAGE
Reading dangerously large protocol message.  If the message turns out to be larger than
Received %s from %s using active connection ID %u, but we didn't know about a session on that relay for this connection.  Dropped without reply.
Received %s from %s using incorrect/stale connection ID %u.  Dropped without reply due to global spam reply rate limit.
Received %s from %s using incorrect/stale connection ID %u.  Rejecting wth NoConnection reply.
Received %s from %s with matching session/connection ID, but wrong client type!?
Received CMsgSteamDatagramGameserverSessionEstablished from %s with unknown stale/invalid connection ID %u
Received CMsgSteamDatagramP2PSessionEstablished from %s with unknown stale/invalid connection ID %u
Received CMsgSteamDatagramP2PSessionEstablished without token?
Received ConnectOK for ConnectionID %u to %s, but connection already closed.
Received ConnectOK for ConnectionID %u to %s.
Received ConnectOK in P2P Rendezvous for ConnectionID %u to %s.
Received ConnectOK in P2P rendezvous message, but we are the 'server'!
Received ConnectRequest in P2P rendezvous message, but we are the 'client'!
Received GameserverSessionEstablished from %s for connection ID %u
Received NoSession from %s, RelaySessionID=%u.  Discarded relay session for client %s, connection %u/%u.  %d session(s) remain to talk to this client
Received NoSession from %s, RelaySessionID=%u.  Ignoring, since client connection ID %u is incorrect, correct connection ID is %u
Received P2P routes ack from %s connection %u for revision %u (latest revision is %u).
Received P2P routes from %s, revision %u.  Contains %u clusters and %u routes
Received Steam datagram ticket for server %s vport %d.%s
Received SteamNetworkingSocketsRecvP2PRendezvous_t, but no ISteamNetworkingSocketsSerialized?
Received client message from %s using RelaySessionID %u for %s connection %u.  But previously that session was for client %s connection %u!  This is suspicious.  Unlinking that session from this connection.
Received client message from %s using SessionID 0x%x, without a client identity or connection ID.  We don't recognize that address+SessionID.  Why does the relay think we know the connection info?
Received malformed %s from %s
Received malformed CMsgSteamDatagramConnectionStatsRouterToServer from %s.  Missing / invalid envelope fields.  [ %s ]
Received malformed CMsgSteamDatagramDiagnostic from %s
Received malformed CMsgSteamDatagramNoConnection from %s.  Missing / invalid envelope fields.  [ %s ]
Received malformed CMsgSteamDatagramNoSession from %s.  Missing / invalid relay session.  [ %s ]
Received packet of invalid size %d from %s
Received redundant ConnectOK for ConnectionID %u to %s.
Received request to migrate to %s from %s.
Received successful communication from Steam Datagram routing cluster.
Received unknown control message %d from %s
Received unreliable msg %lld offset %d twice.  Sizes %d,%d
Recv %s stats from %s for %s:%s
Recv P2PRendezvous via Steam from %s cxn %u
Rejecting connection request from %s at %s, connection ID %u.  That steamID/ConnectionID pair already has a connection from %s
Rejecting connection request from %s for unknown virtual port %d
Relay %s downtime warning adjusted?  %.1f second earlier than before, %d seconds from now
Relay %s is going offline in %d seconds
Relay %s sent CMsgSteamDatagramRouterPingReply with extra route info about data center %x, but no ping for that data center?.
Relay session bookkeeping bug!  Relay found in listen socket's global list, but not in client!
Relay session table bookkeeping duplication
Relay session table bookkeeping missing
ReleaseLast
ReleaseMessage
Reliable message number lurch.  Last reliable %lld, offset %llu, highest seen %lld
Reliable message size %d too large.
Reliable message size too large.  (%llu<<5 + %d)
Remote host is in data center '%s'
RemoveLast
Repeated fields can't have default values.
Reply from %s timed out.  (Consecutive failure #%d.)
Requested migration.
Requesting cert for %s from Steam
Requesting session from %s.  Ping = %d+%d=%d (front+back=total).
Reserved reliable stream pos size
Router network: %s
RouterPingReply
RouterPingReply from %s latency lists not the same length.  %d vs %d.  Ignoring message
RouterPingReply from %s, %dms
S
S/MIME
S/MIME Capabilities
S0¡4`ˇº…?˛åˇ
SDR client %s
SDR server %s(vport %d)
SDR service thread gave up on lock after waiting %dms.  This directly adds to delay of processing of network packets!
SDR_CERT
SDR_IP
SDR_IP = '%s'
SDR_IP='%s', which isn't a valid IP address
SDR_LISTEN_PORT
SDR_LISTEN_PORT = %s
SDR_LISTEN_PORT not set, should not call CreateHostedDedicatedServerListenSocket
SDR_NETWORK_CONFIG
SDR_POPID
SDR_POPID = '%s'
SDR_POPID is set, but not SDR_PRIVATE_KEY/SDR_CERT!  Certs are required in production data centers.
SDR_POPID=%s, but our cert is not valid for that PoP ID!
SDR_PORT is set, but not SDR_CERT & SDR_PRIVATE_KEY!  Clients will not be able to trust this server.  This is OK for dev, but should not happen in production!
SDR_PRIVATE_KEY
SDR_PRIVATE_KEY/SDR_CERT are set, but not SDR_POPID!  We don't know what data center we are in.
SDR_ROUTING
SDR_ROUTING is invalid or too long
SEED-CBC
SEED-CFB
SEED-ECB
SEED-OFB
SMIME
SMIME-CAPS
SN
SNMPv2
SNP data chunk decode overflow, varint for %s
SNP decode ack latest pktnum %lld (%llx mod %llx), but next outoing packet is %lld (%llx).
SNP decode ack latest pktnum underflow.  %llx mod %llx, next send %llx
SNP decode first reliable stream pos underflow.  %llx mod %llx, expected next %llx
SNP decode overrun %d bytes for %s segment data.
SNP decode overrun, %d bytes for %s
SNP decode unreliable msgnum underflow.  %llx mod %llx, highest seen %llx
SNP expiring unreliable segments for msg %lld, while receiving unreliable segments for msg %lld
SNP next think time must be in in the future.  It's %lldusec in the past
SNP stop waiting reduced %lld (pkt %lld) -> %lld (pkt %lld)
SSL lib
SSL routines
STEAMDATAGRAM CERT
STEAM_
SXNetID
Scheduled next think time must be in in the future.  It's %lldusec in the past
Second argument to Swap() (of type "
Second argument to SwapFields() (of type "
Secure Electronic Transactions
Security
Selected Attribute Types
Selecting %s as backup #%d for connection %u.  %s
Selecting %s as primary for connection %u.  [%s]
SendBufferSize
SendEndToEndPing didn't do its job!
Sender sent abs latest recv pkt number using %llx mod %llx, next send %llx
Sender sent abs unreliable message number using %llx mod %llx, highest seen %llx
Sender sent reliable stream pos using %llx mod %llx, expected next %llx
Sending ConnectRequest for ConnectionID %u to %s via primary relay %s.
Sending P2P ConnectRequest via Steam to %s, connection ID %u
Sending P2P ConnectionFailure via Steam to %s cxn %u (reason %d %s)
Sending P2PRendezvous via Steam to %s from cxn %u (%s)
Serialized CMsgSteamSockets_UDP_Stats is %d bytes!
Serialized inline stats message still won't fit, ever after clearing connection quality stats?
Serialized stats message still won't fit, ever after clearing everything?
Session Idle Timeout
SetAllocatedMessage
SetBool
SetDouble
SetEnum
SetFloat
SetInt32
SetInt64
SetRepeatedBool
SetRepeatedDouble
SetRepeatedEnum
SetRepeatedFloat
SetRepeatedInt32
SetRepeatedInt64
SetRepeatedString
SetRepeatedUInt32
SetRepeatedUInt64
SetString
SetUInt32
SetUInt64
Shouldn't be receiving this unless on accepted connections, only connections initiated locally.
Shouldn't need to ask this question
Size mismatch after serializing connection quality stats
Socket was left open!
Something wrong with m_nTotalPorts!
Specified only one of SDR_PRIVATE_KEY and SDR_CERT
St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
St19_Sp_make_shared_tag
St23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFPFvvEvEEEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
St23_Sp_counted_ptr_inplaceISt6vectorIN5ujson5valueESaIS2_EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
St23_Sp_counted_ptr_inplaceISt6vectorISt4pairISsN5ujson5valueEESaIS4_EESaIS6_ELN9__gnu_cxx12_Lock_policyE2EE
Started migration to %s at request of current primary %s
Starting ping measurement
Stats
Stats message is getting big!
Stats message too big, cannot fit in a singe packet?!
StatsP2PRouterToClient
Steam datagram
SteamAPI_ISteamNetworkingSockets_AcceptConnection
SteamAPI_ISteamNetworkingSockets_CloseConnection
SteamAPI_ISteamNetworkingSockets_CloseListenSocket
SteamAPI_ISteamNetworkingSockets_ConnectByIPAddress
SteamAPI_ISteamNetworkingSockets_ConnectP2P
SteamAPI_ISteamNetworkingSockets_ConnectToHostedDedicatedServer
SteamAPI_ISteamNetworkingSockets_CreateHostedDedicatedServerListenSocket
SteamAPI_ISteamNetworkingSockets_CreateListenSocketIP
SteamAPI_ISteamNetworkingSockets_CreateListenSocketP2P
SteamAPI_ISteamNetworkingSockets_CreateSocketPair
SteamAPI_ISteamNetworkingSockets_FindRelayAuthTicketForServer
SteamAPI_ISteamNetworkingSockets_FlushMessagesOnConnection
SteamAPI_ISteamNetworkingSockets_GetConfigurationString
SteamAPI_ISteamNetworkingSockets_GetConfigurationStringName
SteamAPI_ISteamNetworkingSockets_GetConfigurationValue
SteamAPI_ISteamNetworkingSockets_GetConfigurationValueName
SteamAPI_ISteamNetworkingSockets_GetConnectionConfigurationValue
SteamAPI_ISteamNetworkingSockets_GetConnectionDebugText
SteamAPI_ISteamNetworkingSockets_GetConnectionInfo
SteamAPI_ISteamNetworkingSockets_GetConnectionName
SteamAPI_ISteamNetworkingSockets_GetConnectionUserData
SteamAPI_ISteamNetworkingSockets_GetDetailedConnectionStatus
SteamAPI_ISteamNetworkingSockets_GetHostedDedicatedServerAddress
SteamAPI_ISteamNetworkingSockets_GetHostedDedicatedServerPOPID
SteamAPI_ISteamNetworkingSockets_GetHostedDedicatedServerPort
SteamAPI_ISteamNetworkingSockets_GetListenSocketAddress
SteamAPI_ISteamNetworkingSockets_GetQuickConnectionStatus
SteamAPI_ISteamNetworkingSockets_ReceiveMessagesOnConnection
SteamAPI_ISteamNetworkingSockets_ReceiveMessagesOnListenSocket
SteamAPI_ISteamNetworkingSockets_ReceivedRelayAuthTicket
SteamAPI_ISteamNetworkingSockets_RunConnectionStatusChangedCallbacks
SteamAPI_ISteamNetworkingSockets_SendMessageToConnection
SteamAPI_ISteamNetworkingSockets_SetConfigurationString
SteamAPI_ISteamNetworkingSockets_SetConfigurationValue
SteamAPI_ISteamNetworkingSockets_SetConnectionConfigurationValue
SteamAPI_ISteamNetworkingSockets_SetConnectionName
SteamAPI_ISteamNetworkingSockets_SetConnectionUserData
SteamClient018
SteamDatagramClient_Init_InternalV7
SteamDatagramClient_Internal_SteamAPIKludge
SteamDatagramClient_Kill
SteamDatagramClient_SetLauncher
SteamDatagramKillCommon() called, but sockets left open!
SteamDatagramServer_Init_Internal
SteamDatagramServer_Kill
SteamDatagramTransportLock held for %.1fms!
SteamDatagram_InitClient called more than once.
SteamGameServer012
SteamGameServerNetworkingMessages
SteamGameServerNetworkingSockets
SteamID is the only identity type supported for P2P right now
SteamNetworkPingLocation lists not sorted!
SteamNetworkPingLocation_t truncated while printing to string.  Use a bigger buffer!
SteamNetworkingIPAddr_ParseString
SteamNetworkingIPAddr_ToString
SteamNetworkingIdentityFromProtobufMsg returned 0, but but we don't have any unknown fields?
SteamNetworkingIdentity_ParseString
SteamNetworkingIdentity_ToString
SteamNetworkingMessages
SteamNetworkingSockets
SteamNetworkingSocketsRecvP2PFailure_t with unknown failure code
SteamNetworkingSocketsSerialized003
SteamNetworkingSockets_GetLocalTimestamp
SteamNetworkingSockets_SetDebugOutputFunction
SteamNetworkingUtils
SteamNetworking_Hash
SteamUser020
SteamUtils009
Stray data packet from host with no connection.  Ignoring.
String field
String literals cannot cross line boundaries.
StringOutputStream.
StringPrintfVector currently only supports up to
Strong Extranet ID
Subject Information Access
Swap
Switched to %s as primary for connection %u.  %s  [Previous primary %s: %s]
Switched to backup #%d %s as primary for connection %u.  %s  [Previous primary %s: %s]
Symbol name "
T
TLS Web Client Authentication
TLS Web Server Authentication
TS lib
The remote host closed the connection.
The total number of bytes read was
Thinker requested submillisecond wait time precision.
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
This program requires version
This program was compiled against version
This shouldn't be called if all the sizes are equal.
Ticket blob of %d bytes is too small to be valid
Ticket has %d extra fields.  Only retaining the first %d
Ticket has no routing information
Ticket is missing AppID
Ticket we're about to send to request session fails to parse back.  %s
Ticket:%u(%s) ; cert:%s
Timed out attempting to connect
Timed out attempting to negotiate rendezvous
Timeout sending P2P message to peer
Timeout.  Unknown cause.  (%d relays bad, %d OK, %d no disposition)
Timeout. Check Internet connection. Problems with %d relays. (%d OK, %d no disposition)
Timeout. No details since relay IP forced
Timeout. No details since relay cluster forced
Timeout. No details since server data center unknown
Timeout. Some relay connectivity but primary not perfect.  Cause unknown.
Timeout; local problem. Cl %.1fs Rly %.1fs +%d -%d ?%d
Timeout; no relay sessions to client
Timeout; remote problem. Rx age client %.1fs relay %.1fs
Timeout; remote problem. Rx age server %.1fs relay %.1fs
Timeout; remote problem. Rx age server (never) relay %.1fs
TimeoutSecondsConnected
TimeoutSecondsInitial
To google::protobuf::internal::down_cast(From*) [with To = const google::protobuf::Message*; From = const google::protobuf::MessageLite]
To google::protobuf::internal::down_cast(From*) [with To = const google::protobuf::UninterpretedOption*; From = const google::protobuf::Message]
Tokenizer::ParseFloat() passed text that could not have been tokenized as a float:
Tokenizer::ParseInteger() passed text that could not have been tokenized as an integer:
Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string:
Told peer to stop acking up to %lld, but latest packet we have sent is %lld
Too many connections.
Too many expected acks!  Either we're sending packts requiring acks too fast, or else we're not expiring them properly
TracerPid:
Tried to connect request, but crypt not ready
Tried to lag a packet on a socket that has already been closed and is pending destruction!
Tried to lag a packet that w as too big!
Tried to make a pessimistic ping estimate without any ping data at all!
Tried to make an optimistic ping estimate without any ping data at all!
Tried to merge messages of different types
Tried to register a non-generated type with the generated type registry.
Tried to use encrypted OpenSSH private key
True
Trust Root
Trying to accept when we already have a socket?
Trying to connect when we already have a socket?
Trying to send a packet via steam datagram when no network configuration is available.
Trying to send a packet via steam datagram, but we have lost connectivity to all relays.  Check your Internet connection.  Cannot send packet.
Trying to send a packet via steam datagram, but we have not yet established a session on any relays.  This is common for the first few packets, but is a problem if it persists.
Trying to send a packet via steam datagram, but we were never able to establish connectivity with any relays.  Check your Internet connection.  Cannot send packet.
Trying to send a very large (%d bytes) unreliable message.  Sending as reliable instead.
Type appears to be in generated pool but wasn't
Type is already registered:
U
U&∫ëåÖNñZ˛îˇ
UDP %s@%s
UID
UNDEF
UNRELIABLE
UTF-8 data when
Unable to accept connection from %s.  %s
Unable to communicate with ANY Steam Datagram routing cluster.  Possible problem with local internet connection?
Unable to create a bound socket on the shared socket.
Unable to determine local identity, and auth required.  Not logged in?
Unable to determine local identity.
Unable to determine local identity.  Not logged in?
Unable to find unique connection ID
Unauthenticated connections not allowed.
Unexpected NoConnection
Unexpected failure while serializing option submessage
Unexpected router avail %d
Unexpected valid ping count %d
Unimplemented type:
Unknown
Unknown GameID type
Unknown availability %d
Unknown callback type %d!
Unknown enumeration value of "
Unknown extra field type %d
Unrecognized identity format
Unrecognized identity format.  (%d unknown field(s), first ID=%d)
Unrecognized identity type %d
Unsigned certs are not allowed
Unsupported DH key type
Unsupported identity key type
Using cert from SDR_PRIVATE_KEY and SDR_CERT environment vars
V
VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
Value
Value must be "true" or "false" for boolean option "
Value must be identifier for boolean option "
Value must be identifier for enum-valued option "
Value must be integer for int32 option "
Value must be integer for int64 option "
Value must be non-negative integer for uint32 option "
Value must be non-negative integer for uint64 option "
Value must be number for double option "
Value must be number for float option "
Value must be quoted string for string option "
Value out of range for int32 option "
Value out of range for int64 option "
Value out of range for uint32 option "
Virtual port number must be a small, positive number
Virtual port number should be a small, positive number
Virtual port should be a small positive integer
V˛ôˇV˛ô
W
WARNING
Warning parsing text-format
Warning: Unused import: "
We are the 'client' who initiated the connection, so 'server' shouldn't be sending us this!
We cannot fit reliable segment, need %d bytes, only %d remaining
We didn't leave enough room for inline stats!
We didn't make enough room for CMsgSteamSockets_UDP_Stats!
We don't have cert, and unsigned certs are not supposed to be allowed here.  Continuing anyway temporarily.
We don't know our local identity.
We have a session on our migration target.  Why haven't we selected it yet?
We sent an ack that wasn't pending!
We shouldn't be trying to think SNP when not fully connected
We're not logged into
Weird RouterPingReply timestamps from %s.  Reply contained %u, current is %u (elapsed %d)
Why are making API calls on this connection?
Working...
X
X500
X500algorithms
X509
X509 V3 routines
X509 lib
X509V3 lib
X509v3 AC Targeting
X509v3 Any Policy
X509v3 Authority Key Identifier
X509v3 Basic Constraints
X509v3 CRL Distribution Points
X509v3 CRL Number
X509v3 CRL Reason Code
X509v3 Certificate Issuer
X509v3 Certificate Policies
X509v3 Delta CRL Indicator
X509v3 Extended Key Usage
X509v3 Freshest CRL
X509v3 Inhibit Any Policy
X509v3 Issuer Alternative Name
X509v3 Issuing Distrubution Point
X509v3 Key Usage
X509v3 Name Constraints
X509v3 No Revocation Available
X509v3 Policy Constraints
X509v3 Policy Mappings
X509v3 Private Key Usage Period
X509v3 Subject Alternative Name
X509v3 Subject Directory Attributes
X509v3 Subject Key Identifier
X9-57
X9.42 DH
X9.57
X9.57 CM ?
X9cm
Y
Y@
Your ping location string buffer is too small, truncation is possible
Z
ZLIB
[
[$0]
[%02d:%02d:%02d]
[%s]   decode pkt %lld ack last block ack begin %lld
[%s]   decode pkt %lld latest recv %lld
[%s]   decode pkt %lld nack [%lld,%lld) ack [%lld,%lld)
[%s]   decode pkt %lld peer reliable pos = %lld
[%s]   decode pkt %lld reliable range [%lld,%lld)
[%s]   decode pkt %lld stop waiting: %lld (was %lld)
[%s]   decode pkt %lld valid reliable bytes = %d [%lld,%lld)
[%s]   encode pkt %lld last recv %lld (%d blocks, actual last recv=%lld)
[%s]   encode pkt %lld last recv %lld (no blocks, actual last recv=%lld)
[%s]   encode pkt %lld last recv %lld (no loss)
[%s]   encode pkt %lld nack [%lld,%lld) ack [%lld,%lld)
[%s]   encode pkt %lld reliable msg %lld offset %d+%d=%d range [%lld,%lld)
[%s]   encode pkt %lld stop_waiting offset %lld = %lld
[%s]   encode pkt %lld unreliable msg %lld offset %d+%d=%d
[%s]   updating min_waiting_on_ack %lld -> %lld
[%s] %d reply timeouts, last recv %.1fms ago.  Sending keepalive.
[%s] %s
[%s] Deselecting active session #%d.  We no longer have a route through that cluster.  Previous route went through remote relay in '%s'
[%s] Exceeding rate limit just sending acks / stats!  Not sending any data!
[%s] Local routes now at revision %d.
[%s] Local routes recalculated.  No change, current revision is %d.
[%s] Malformed MsgSteamDatagramDataRouterToClient from %s: protobuf failed to parse inline stats message
[%s] P2P route through '%s' now forwarding to '%s', revision %d
[%s] Packet data chunk failed to decrypt!  Could be tampering/spoofing or a bug.
[%s] RATELIM QueueTime is %.1fms, SendRate=%.1fk, BytesQueued=%d
[%s] RX msg %lld offset %d+%d=%d %02x ... %02x
[%s] Received P2PBadRoute from %s regarding peer's session on cluster %s.  Clearing session in our copy of peer's routing candidates.
[%s] Received P2PBadRoute from %s.  Ignored, since we aren't using the bad remote session token.  (Maybe already cleared it.)
[%s] Received P2PSessionEstablished from %s
[%s] Received Stats while in state %d.  Rejecting packet with ConnectionClosed message.
[%s] Received end-to-end P2PStats while in the 'FindingRoute' state.  Marking connection as connected
[%s] Received invalid routes in P2P stats message from %s
[%s] Recv %s stats:%s
[%s] RecvMessage MsgNum=%lld sz=%d
[%s] Recvd %s stats from %s:%s
[%s] Relay %s acked routing forwarding revision %u.
[%s] Relay %s acking wrong routing forwarding revision (%u instead of %u); forcing re-ack.
[%s] Remote host is using an unsigned cert.  Allowing connection, but it's not secure!
[%s] Reply timeout, last recv %.1fms ago.  Sending keepalive.
[%s] Route through '%s' is '%s'
[%s] Route through '%s' is now '%s' (was '%s')
[%s] Routes through '%s' to '%s'  lost.  No P2P route available through that cluster
[%s] SendMessage %s: MsgNum=%lld sz=%d
[%s] Sending P2P ConnectOK via Steam, remote cxn %u
[%s] Sending graceful P2P ConnectionClosed via Steam, remote cxn %u
[%s] Sent %s stats via %s:%s
[%s] Sent %s stats:%s
[%s] Sent P2P %s to %s, but we have reason to believe that it might not get through end-to-end.  Also sending via steam
[%s] decode pkt %lld
[%s] decode pkt %lld abort.  %lld bytes reliable data buffered [%lld-%lld), new size would be %lld to %lld
[%s] decode pkt %lld abort.  Reliable stream already has %d fragments, first is [%lld,%lld), last is [%lld,%lld), new segment is [%lld,%lld)
[%s] decode pkt %lld abort.  Reliable stream already has %d fragments, first is [%lld,%lld), last is [%lld,%lld).  We don't want to fragment [%lld,%lld) with new segment [%lld,%lld)
[%s] decode pkt %lld empty reliable segment?
[%s] decode pkt %lld latest recv %lld delay %.1fms ping %.1fms
[%s] decode pkt %lld latest recv %lld delay %lluusec INVALID ping %lldusec
[%s] decode pkt %lld, first packet in gap, reduced to [%lld,%lld)
[%s] decode pkt %lld, gap split [%lld,%lld) and [%lld,%lld)
[%s] decode pkt %lld, last packet in gap, reduced to [%lld,%lld)
[%s] decode pkt %lld, single pkt gap filled
[%s] discarding pkt %lld
[%s] drop %d pkts [%lld-%lld)
[%s] encode pkt %lld
[%s] flush didn't fit; rescheduling
[%s] flushed %d acks (%d bytes)
[%s] pkt %lld %s, queueing retry of reliable range [%lld,%lld)
[%s] received data packet from relay %s while in the 'FindingRoute' state.  Marking connection as connected
[%s] received e2e stats while in Connecting state.  Resending ConnectRequest.
[%s]:%u
[A:%u:%u:%u]
[C:%u:%u]
[G:%u:%u]
[I:%u:%u]
[L:%u:%u]
[M:%u:%u:%u]
[P:%u:%u]
[T:%u:%u]
[TRACE %s] Recv %s (0x%02x):%s
[TRACE %s] Send %s (0x%02x):%s
[U:%u:%u:%u]
[U:%u:%u]
[a:%u:%u]
[c:%u:%u]
[default = $0
[g:%u:%u]
[i:%u:%u]
[lazy = true] can only be specified for submessage fields.
[libprotobuf %s %s:%d] %s
[packed = true] can only be specified for repeated primitive fields.
\
\%03o
\U%08x
\x%02x
]
]˘QﬂúJ
^
_
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_Jv_RegisterClasses
_ZNKSs13find_first_ofEPKcm@@GLIBCXX_3.4
_ZNKSs17find_first_not_ofEPKcm@@GLIBCXX_3.4
_ZNKSs2atEm@@GLIBCXX_3.4
_ZNKSs4findERKSsm@@GLIBCXX_3.4
_ZNKSs4findEcm@@GLIBCXX_3.4
_ZNKSs5rfindEcm@@GLIBCXX_3.4
_ZNKSs6substrEmm@@GLIBCXX_3.4
_ZNKSs7_M_iendEv@@GLIBCXX_3.4
_ZNKSs7compareEPKc@@GLIBCXX_3.4
_ZNKSs7compareERKSs@@GLIBCXX_3.4
_ZNKSs7compareEmmRKSs@@GLIBCXX_3.4
_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEm@@GLIBCXX_3.4.18
_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@@GLIBCXX_3.4.18
_ZNSdD2Ev@@GLIBCXX_3.4
_ZNSi4readEPcl@@GLIBCXX_3.4
_ZNSo5writeEPKcl@@GLIBCXX_3.4
_ZNSolsEi@@GLIBCXX_3.4
_ZNSs12_M_leak_hardEv@@GLIBCXX_3.4
_ZNSs13_S_copy_charsEPcS_S_@@GLIBCXX_3.4
_ZNSs3endEv@@GLIBCXX_3.4
_ZNSs4_Rep10_M_destroyERKSaIcE@@GLIBCXX_3.4
_ZNSs4_Rep10_M_disposeERKSaIcE@@GLIBCXX_3.4
_ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4
_ZNSs4_Rep26_M_set_length_and_sharableEm@@GLIBCXX_3.4.5
_ZNSs4_Rep9_S_createEmmRKSaIcE@@GLIBCXX_3.4
_ZNSs4swapERSs@@GLIBCXX_3.4
_ZNSs5beginEv@@GLIBCXX_3.4
_ZNSs5clearEv@@GLIBCXX_3.4
_ZNSs5eraseEmm@@GLIBCXX_3.4
_ZNSs6appendEPKc@@GLIBCXX_3.4
_ZNSs6appendEPKcm@@GLIBCXX_3.4
_ZNSs6appendERKSs@@GLIBCXX_3.4
_ZNSs6appendERKSsmm@@GLIBCXX_3.4
_ZNSs6appendEmc@@GLIBCXX_3.4
_ZNSs6assignEPKc@@GLIBCXX_3.4
_ZNSs6assignEPKcm@@GLIBCXX_3.4
_ZNSs6assignERKSs@@GLIBCXX_3.4
_ZNSs6insertEmPKc@@GLIBCXX_3.4
_ZNSs6insertEmRKSs@@GLIBCXX_3.4
_ZNSs6resizeEm@@GLIBCXX_3.4
_ZNSs6resizeEmc@@GLIBCXX_3.4
_ZNSs7_M_leakEv@@GLIBCXX_3.4
_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_@@GLIBCXX_3.4
_ZNSs7reserveEm@@GLIBCXX_3.4
_ZNSs9_M_mutateEmmm@@GLIBCXX_3.4
_ZNSs9push_backEc@@GLIBCXX_3.4
_ZNSsC1EPKcRKSaIcE@@GLIBCXX_3.4
_ZNSsC1EPKcmRKSaIcE@@GLIBCXX_3.4
_ZNSsC1ERKSs@@GLIBCXX_3.4
_ZNSsC1EmcRKSaIcE@@GLIBCXX_3.4
_ZNSsD1Ev@@GLIBCXX_3.4
_ZNSsaSEPKc@@GLIBCXX_3.4
_ZNSsaSERKSs@@GLIBCXX_3.4
_ZNSspLEPKc@@GLIBCXX_3.4
_ZNSspLERKSs@@GLIBCXX_3.4
_ZNSt6chrono3_V212steady_clock3nowEv@@GLIBCXX_3.4.19
_ZNSt6localeC1Ev@@GLIBCXX_3.4
_ZNSt6localeD1Ev@@GLIBCXX_3.4
_ZNSt6thread15_M_start_threadESt10shared_ptrINS_10_Impl_baseEE@@GLIBCXX_3.4.11
_ZNSt6thread4joinEv@@GLIBCXX_3.4.11
_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4
_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4
_ZNSt8ios_baseC2Ev@@GLIBCXX_3.4
_ZNSt8ios_baseD2Ev@@GLIBCXX_3.4
_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@@GLIBCXX_3.4
_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@@GLIBCXX_3.4
_ZNSt9exceptionD2Ev@@GLIBCXX_3.4
_ZSt11_Hash_bytesPKvmm@@CXXABI_1.3.5
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@@GLIBCXX_3.4.9
_ZSt17__throw_bad_allocv@@GLIBCXX_3.4
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4
_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4
_ZSt19__throw_logic_errorPKc@@GLIBCXX_3.4
_ZSt20__throw_length_errorPKc@@GLIBCXX_3.4
_ZSt20__throw_system_errori@@GLIBCXX_3.4.11
_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@@GLIBCXX_3.4
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@@GLIBCXX_3.4
_ZSt7nothrow@@GLIBCXX_3.4
_ZSt9terminatev@@GLIBCXX_3.4
_ZTISt9exception@@GLIBCXX_3.4
_ZTTSt18basic_stringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv121__vmi_class_type_infoE@@CXXABI_1.3
_ZTVSt15basic_streambufIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZTVSt15basic_stringbufIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZTVSt18basic_stringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZTVSt9basic_iosIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZdaPv@@GLIBCXX_3.4
_ZdlPv@@GLIBCXX_3.4
_ZdlPvRKSt9nothrow_t@@GLIBCXX_3.4
_Znam@@GLIBCXX_3.4
_Znwm@@GLIBCXX_3.4
_ZnwmRKSt9nothrow_t@@GLIBCXX_3.4
__assert_fail
__assert_fail@@GLIBC_2.2.5
__bss_start
__ctype_b_loc
__ctype_b_loc@@GLIBC_2.3
__ctype_tolower_loc
__ctype_tolower_loc@@GLIBC_2.3
__cxa_allocate_exception
__cxa_allocate_exception@@CXXABI_1.3
__cxa_atexit
__cxa_atexit@@GLIBC_2.2.5
__cxa_bad_typeid
__cxa_bad_typeid@@CXXABI_1.3
__cxa_begin_catch
__cxa_begin_catch@@CXXABI_1.3
__cxa_end_catch
__cxa_end_catch@@CXXABI_1.3
__cxa_finalize
__cxa_finalize@@GLIBC_2.2.5
__cxa_free_exception
__cxa_free_exception@@CXXABI_1.3
__cxa_guard_abort
__cxa_guard_abort@@CXXABI_1.3
__cxa_guard_acquire
__cxa_guard_acquire@@CXXABI_1.3
__cxa_guard_release
__cxa_guard_release@@CXXABI_1.3
__cxa_pure_virtual
__cxa_pure_virtual@@CXXABI_1.3
__cxa_rethrow
__cxa_rethrow@@CXXABI_1.3
__cxa_throw
__cxa_throw@@CXXABI_1.3
__daylight
__daylight@@GLIBC_2.2.5
__dynamic_cast
__dynamic_cast@@CXXABI_1.3
__errno_location
__errno_location@@GLIBC_2.2.5
__fprintf_chk
__fprintf_chk@@GLIBC_2.3.4
__fxstat
__fxstat@@GLIBC_2.2.5
__gmon_start__
__gxx_personality_v0
__gxx_personality_v0@@CXXABI_1.3
__isoc99_sscanf
__isoc99_sscanf@@GLIBC_2.7
__memcpy_chk
__memcpy_chk@@GLIBC_2.3.4
__memmove_chk
__memmove_chk@@GLIBC_2.3.4
__memset_chk
__memset_chk@@GLIBC_2.3.4
__printf_chk
__printf_chk@@GLIBC_2.3.4
__pthread_key_create
__pthread_key_create@@GLIBC_2.2.5
__register_atfork
__register_atfork@@GLIBC_2.3.2
__snprintf_chk
__snprintf_chk@@GLIBC_2.3.4
__sprintf_chk
__sprintf_chk@@GLIBC_2.3.4
__stack_chk_fail
__stack_chk_fail@@GLIBC_2.4
__strcat_chk
__strcat_chk@@GLIBC_2.3.4
__timezone
__timezone@@GLIBC_2.2.5
__vfprintf_chk
__vfprintf_chk@@GLIBC_2.3.4
__vsnprintf_chk
__vsnprintf_chk@@GLIBC_2.3.4
_edata
_end
_exit
_exit@@GLIBC_2.2.5
_fini
_init
`
`E¿ˇcE¿
a
a protocol
a+
aE
aRecord
aaControls
abort@@GLIBC_2.2.5
ac-auditEntity
ac-proxying
ac-targeting
accept
acceptableResponses
account
ack block header
ack delay
ack latest pktnum
ack num blocks
ack_relay
ack_relay_fwd_target
ack_routes
ad dvcs
ad_timestamping
additional verification
address=
aes(partial)
aes-128-cbc
aes-128-cbc-hmac-sha1
aes-128-cbc-hmac-sha256
aes-128-ccm
aes-128-cfb
aes-128-cfb1
aes-128-cfb8
aes-128-ctr
aes-128-ecb
aes-128-gcm
aes-128-ofb
aes-128-xts
aes-192-cbc
aes-192-cbc-hmac-sha1
aes-192-cbc-hmac-sha256
aes-192-ccm
aes-192-cfb
aes-192-cfb1
aes-192-cfb8
aes-192-ctr
aes-192-ecb
aes-192-gcm
aes-192-ofb
aes-256-cbc
aes-256-cbc-hmac-sha1
aes-256-cbc-hmac-sha256
aes-256-ccm
aes-256-cfb
aes-256-cfb1
aes-256-cfb8
aes-256-ctr
aes-256-ecb
aes-256-gcm
aes-256-ofb
aes-256-xts
aggregate_value
algorithm
aliases
ansi-X9-62
anyExtendedKeyUsage
anyPolicy
archiveCutoff
args were given.  Full format string was: "
arguments.
array_ != __null
asctime_r
asctime_r@@GLIBC_2.2.5
asn1 encoding routines
asn1 length mismatch
asn1_lib.c
associatedDomain
associatedName
audio
authorityInfoAccess
authorityKeyIdentifier
authorityRevocationList
b
b_print.c
bad asn1 object header
bad get asn1 object call
bad_type:%d
basicConstraints
basicOCSPResponse
basic_string::_S_construct null not valid
bf-cbc
bf-cfb
bf-ecb
bf-ofb
bignum routines
bind
bind@@GLIBC_2.2.5
bio_lib.c
biometricInfo
bn
bn(%d,%d)
bn_lib.c
bn_print.c
bn_shift.c
bool
brainpoolP160r1
brainpoolP160t1
brainpoolP192r1
brainpoolP192t1
brainpoolP224r1
brainpoolP224t1
brainpoolP256r1
brainpoolP256t1
brainpoolP320r1
brainpoolP320t1
brainpoolP384r1
brainpoolP384t1
brainpoolP512r1
brainpoolP512t1
broadcast
bss_file.c
buf_str.c
buffer. Use the 'bytes' type if you intend to send raw
buildingName
businessCategory
bytes
bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
bytes.
c
c2onb191v4
c2onb191v5
c2onb239v4
c2onb239v5
c2pnb163v1
c2pnb163v2
c2pnb163v3
c2pnb176v1
c2pnb208w1
c2pnb272w1
c2pnb304w1
c2pnb368w1
c2tnb191v1
c2tnb191v2
c2tnb191v3
c2tnb239v1
c2tnb239v2
c2tnb239v3
c2tnb359v1
c2tnb431r1
cACertificate
cNAMERecord
caIssuers
caRepository
called a function that was disabled at compile-time
called a function you should not call
camellia-128-cbc
camellia-128-cfb
camellia-128-cfb1
camellia-128-cfb8
camellia-128-ecb
camellia-128-ofb
camellia-192-cbc
camellia-192-cfb
camellia-192-cfb1
camellia-192-cfb8
camellia-192-ecb
camellia-192-ofb
camellia-256-cbc
camellia-256-cfb
camellia-256-cfb1
camellia-256-cfb8
camellia-256-ecb
camellia-256-ofb
caseIgnoreIA5StringSyntax
cast5-cbc
cast5-cfb
cast5-ecb
cast5-ofb
ceil
ceil@@GLIBC_2.2.5
certBag
certicom-arc
certificate extensions
certificateIssuer
certificatePolicies
certificateRevocationList
challengePassword
characteristic-two-field
clearance
cleartext track 2
clientAuth
clock_gettime
clock_gettime@@GLIBC_2.2.5
close() failed:
close@@GLIBC_2.2.5
closed by peer
cmac
codeSigning
common libcrypto routines
commonName
configuration file routines
connect
connect@@GLIBC_2.2.5
consecutive_ping_timeout
const google::protobuf::UnknownFieldSet& google::protobuf::UnknownField::group() const
const string& google::protobuf::UnknownField::length_delimited() const
const string& google::protobuf::internal::GetEmptyStringAlreadyInited()
contains invalid
content types
contentType
countersignature
countryName
crlBag
crlDistributionPoints
crlNumber
crossCertificatePair
cryptocom
cryptopro
csteamnetworkingsockets.cpp
csteamnetworkingsockets_steam.cpp
csteamnetworkingsockets_steam.h
ct_cert_scts
ct_precert_poison
ct_precert_scts
ct_precert_signer
ctime_r@@GLIBC_2.2.5
d
dITRedirect
dNSDomain
dSAQuality
daylight@@GLIBC_2.2.5
dcObject
dcobject
debug_malloc
debug_malloc2
default_value
deltaCRL
deltaRevocationList
dependency
des-cbc
des-cdmf
des-cfb
des-cfb1
des-cfb8
des-ecb
des-ede
des-ede-cbc
des-ede-cfb
des-ede-ofb
des-ede3
des-ede3-cbc
des-ede3-cfb
des-ede3-cfb1
des-ede3-cfb8
des-ede3-ofb
des-ofb
description
destinationIndicator
desx-cbc
dh-cofactor-kdf
dh-std-kdf
dhKeyAgreement
dhSinglePass-cofactorDH-sha1kdf-scheme
dhSinglePass-cofactorDH-sha224kdf-scheme
dhSinglePass-cofactorDH-sha256kdf-scheme
dhSinglePass-cofactorDH-sha384kdf-scheme
dhSinglePass-cofactorDH-sha512kdf-scheme
dhSinglePass-stdDH-sha1kdf-scheme
dhSinglePass-stdDH-sha224kdf-scheme
dhSinglePass-stdDH-sha256kdf-scheme
dhSinglePass-stdDH-sha384kdf-scheme
dhSinglePass-stdDH-sha512kdf-scheme
dhpublicnumber
digital envelope routines
directory
directory services (X.500)
directory services - algorithms
distinguishedName
dl_iterate_phdr
dl_iterate_phdr@@GLIBC_2.2.5
dmdName
dnQualifier
doapr()
document
documentAuthor
documentIdentifier
documentLocation
documentPublisher
documentSeries
documentTitle
documentVersion
dod
domain
domainComponent
domainRelatedObject
double
downtime_warning_reached
dsa routines
dsaEncryption
dsaEncryption-old
dsaWithSHA
dsaWithSHA1
dsaWithSHA1-old
dsa_with_SHA224
dsa_with_SHA256
dso
dumy
dynamic
dynlock
e
e2e.life
e2e.rate
ec
ec_pre_comp
ecdh
ecdsa
ecdsa-with-Recommended
ecdsa-with-SHA1
ecdsa-with-SHA224
ecdsa-with-SHA256
ecdsa-with-SHA384
ecdsa-with-SHA512
ecdsa-with-Specified
elliptic curve routines
emailAddress
emailProtection
empty_string_ != __null
encrypted track 2
engine
engine routines
enhancedSearchGuide
enterprises
enum
err
err.c
error:%08lX:%s:%s:%s
evp_pkey
ex_data
ex_data.c
expecting an asn1 sequence
experimental
experimental_map_key
extReq
extend .$0 {
extendedCertificateAttributes
extendedKeyUsage
extendedStatus
extendee
eÕÕA
f == __null || dynamic_cast<To>(f) != __null
facsimileTelephoneNumber
fatal
favouriteDrink
fclose
fclose@@GLIBC_2.2.5
feof
feof@@GLIBC_2.2.5
ferror
ferror@@GLIBC_2.2.5
fflush
fflush@@GLIBC_2.2.5
fgets
fgets@@GLIBC_2.2.5
fileno
fileno@@GLIBC_2.2.5
fips
fips2
first reliable streampos
float
fopen
fopen('
fopen64
fopen64@@GLIBC_2.2.5
fopen@@GLIBC_2.2.5
fputc
fputc@@GLIBC_2.2.5
fputs
fputs@@GLIBC_2.2.5
fread
fread@@GLIBC_2.2.5
free
free@@GLIBC_2.2.5
freeifaddrs
freeifaddrs@@GLIBC_2.3
freshestCRL
friendlyCountry
friendlyCountryName
friendlyName
fseek
fseek@@GLIBC_2.2.5
ftell
ftell@@GLIBC_2.2.5
func(%lu)
fwrite
fwrite@@GLIBC_2.2.5
g
g*
g_mapConnections corruption!
genbyt:
generate cryptogram
generationQualifier
generic cryptogram
genstr:%s
getenv
getenv@@GLIBC_2.2.5
gethostbyname
getifaddrs
getifaddrs() failed, returned %d
getifaddrs@@GLIBC_2.3
getpid
getpid@@GLIBC_2.2.5
getservbyname
getsockname
getsockname failed.  Error code 0x%08X.
getsockname returned address with unexpected family %d
getsockname@@GLIBC_2.2.5
gettimeofday
gettimeofday@@GLIBC_2.2.5
getuid
getuid@@GLIBC_2.2.5
givenName
gmtime_r
gmtime_r@@GLIBC_2.2.5
go_package
google.protobuf.Empty
google.protobuf.EnumOptions
google.protobuf.EnumValueOptions
google.protobuf.FieldOptions
google.protobuf.FileOptions
google.protobuf.MessageOptions
google.protobuf.MethodOptions
google.protobuf.ServiceOptions
google.protobuf.StreamOptions
google/protobuf/descriptor.cc
google/protobuf/descriptor.pb.cc
google/protobuf/descriptor.proto
google/protobuf/descriptor_database.cc
google/protobuf/dynamic_message.cc
google/protobuf/extension_set.cc
google/protobuf/extension_set_heavy.cc
google/protobuf/generated_message_reflection.cc
google/protobuf/io/coded_stream.cc
google/protobuf/io/strtod.cc
google/protobuf/io/tokenizer.cc
google/protobuf/io/zero_copy_stream.cc
google/protobuf/io/zero_copy_stream_impl.cc
google/protobuf/io/zero_copy_stream_impl_lite.cc
google/protobuf/message.cc
google/protobuf/message_lite.cc
google/protobuf/reflection_ops.cc
google/protobuf/stubs/common.cc
google/protobuf/stubs/stringprintf.cc
google/protobuf/stubs/strutil.cc
google/protobuf/stubs/substitute.cc
google/protobuf/text_format.cc
google/protobuf/unknown_field_set.cc
google/protobuf/wire_format.cc
google/protobuf/wire_format_lite.cc
google::protobuf::uint32 google::protobuf::UnknownField::fixed32() const
google::protobuf::uint64 google::protobuf::UnknownField::fixed64() const
google::protobuf::uint64 google::protobuf::UnknownField::varint() const
gost-mac
gost2001
gost2001cc
gost89
gost89-cnt
gost94cc
h
hmac
hmacWithMD5
hmacWithSHA1
hmacWithSHA224
hmacWithSHA256
hmacWithSHA384
hmacWithSHA512
holdInstructionCallIssuer
holdInstructionCode
holdInstructionNone
holdInstructionReject
homePostalAddress
homeTelephoneNumber
host
houseIdentifier
hÄÈ´§8“’m
hªºçï∏
i
i >= 0
iA5StringSyntax
iana
id-DHBasedMac
id-Gost28147-89-CryptoPro-A-ParamSet
id-Gost28147-89-CryptoPro-B-ParamSet
id-Gost28147-89-CryptoPro-C-ParamSet
id-Gost28147-89-CryptoPro-D-ParamSet
id-Gost28147-89-CryptoPro-KeyMeshing
id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet
id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet
id-Gost28147-89-CryptoPro-RIC-1-ParamSet
id-Gost28147-89-None-KeyMeshing
id-Gost28147-89-TestParamSet
id-Gost28147-89-cc
id-GostR3410-2001-CryptoPro-A-ParamSet
id-GostR3410-2001-CryptoPro-B-ParamSet
id-GostR3410-2001-CryptoPro-C-ParamSet
id-GostR3410-2001-CryptoPro-XchA-ParamSet
id-GostR3410-2001-CryptoPro-XchB-ParamSet
id-GostR3410-2001-ParamSet-cc
id-GostR3410-2001-TestParamSet
id-GostR3410-2001DH
id-GostR3410-94-CryptoPro-A-ParamSet
id-GostR3410-94-CryptoPro-B-ParamSet
id-GostR3410-94-CryptoPro-C-ParamSet
id-GostR3410-94-CryptoPro-D-ParamSet
id-GostR3410-94-CryptoPro-XchA-ParamSet
id-GostR3410-94-CryptoPro-XchB-ParamSet
id-GostR3410-94-CryptoPro-XchC-ParamSet
id-GostR3410-94-TestParamSet
id-GostR3410-94-a
id-GostR3410-94-aBis
id-GostR3410-94-b
id-GostR3410-94-bBis
id-GostR3410-94DH
id-GostR3411-94-CryptoProParamSet
id-GostR3411-94-TestParamSet
id-GostR3411-94-with-GostR3410-2001
id-GostR3411-94-with-GostR3410-2001-cc
id-GostR3411-94-with-GostR3410-94
id-GostR3411-94-with-GostR3410-94-cc
id-HMACGostR3411-94
id-PasswordBasedMAC
id-aca
id-aca-accessIdentity
id-aca-authenticationInfo
id-aca-chargingIdentity
id-aca-encAttrs
id-aca-group
id-aca-role
id-ad
id-aes128-CCM
id-aes128-GCM
id-aes128-wrap
id-aes128-wrap-pad
id-aes192-CCM
id-aes192-GCM
id-aes192-wrap
id-aes192-wrap-pad
id-aes256-CCM
id-aes256-GCM
id-aes256-wrap
id-aes256-wrap-pad
id-alg
id-alg-PWRI-KEK
id-alg-des40
id-alg-dh-pop
id-alg-dh-sig-hmac-sha1
id-alg-noSignature
id-camellia128-wrap
id-camellia192-wrap
id-camellia256-wrap
id-cct
id-cct-PKIData
id-cct-PKIResponse
id-cct-crs
id-ce
id-characteristic-two-basis
id-cmc
id-cmc-addExtensions
id-cmc-confirmCertAcceptance
id-cmc-dataReturn
id-cmc-decryptedPOP
id-cmc-encryptedPOP
id-cmc-getCRL
id-cmc-getCert
id-cmc-identification
id-cmc-identityProof
id-cmc-lraPOPWitness
id-cmc-popLinkRandom
id-cmc-popLinkWitness
id-cmc-queryPending
id-cmc-recipientNonce
id-cmc-regInfo
id-cmc-responseInfo
id-cmc-revokeRequest
id-cmc-senderNonce
id-cmc-statusInfo
id-cmc-transactionId
id-ct-asciiTextWithCRLF
id-ecPublicKey
id-hex-multipart-message
id-hex-partial-message
id-it
id-it-caKeyUpdateInfo
id-it-caProtEncCert
id-it-confirmWaitTime
id-it-currentCRL
id-it-encKeyPairTypes
id-it-implicitConfirm
id-it-keyPairParamRep
id-it-keyPairParamReq
id-it-origPKIMessage
id-it-preferredSymmAlg
id-it-revPassphrase
id-it-signKeyPairTypes
id-it-subscriptionRequest
id-it-subscriptionResponse
id-it-suppLangTags
id-it-unsupportedOIDs
id-kp
id-mod-attribute-cert
id-mod-cmc
id-mod-cmp
id-mod-cmp2000
id-mod-crmf
id-mod-dvcs
id-mod-kea-profile-88
id-mod-kea-profile-93
id-mod-ocsp
id-mod-qualified-cert-88
id-mod-qualified-cert-93
id-mod-timestamp-protocol
id-on
id-on-permanentIdentifier
id-on-personalData
id-pda
id-pda-countryOfCitizenship
id-pda-countryOfResidence
id-pda-dateOfBirth
id-pda-gender
id-pda-placeOfBirth
id-pe
id-pkip
id-pkix-mod
id-pkix1-explicit-88
id-pkix1-explicit-93
id-pkix1-implicit-88
id-pkix1-implicit-93
id-ppl
id-ppl-anyLanguage
id-ppl-independent
id-ppl-inheritAll
id-qcs
id-qcs-pkixQCSyntax-v1
id-qt
id-qt-cps
id-qt-unotice
id-regCtrl
id-regCtrl-authenticator
id-regCtrl-oldCertID
id-regCtrl-pkiArchiveOptions
id-regCtrl-pkiPublicationInfo
id-regCtrl-protocolEncrKey
id-regCtrl-regToken
id-regInfo
id-regInfo-certReq
id-regInfo-utf8Pairs
id-set
id-smime-aa
id-smime-aa-contentHint
id-smime-aa-contentIdentifier
id-smime-aa-contentReference
id-smime-aa-dvcs-dvc
id-smime-aa-encapContentType
id-smime-aa-encrypKeyPref
id-smime-aa-equivalentLabels
id-smime-aa-ets-CertificateRefs
id-smime-aa-ets-RevocationRefs
id-smime-aa-ets-archiveTimeStamp
id-smime-aa-ets-certCRLTimestamp
id-smime-aa-ets-certValues
id-smime-aa-ets-commitmentType
id-smime-aa-ets-contentTimestamp
id-smime-aa-ets-escTimeStamp
id-smime-aa-ets-otherSigCert
id-smime-aa-ets-revocationValues
id-smime-aa-ets-sigPolicyId
id-smime-aa-ets-signerAttr
id-smime-aa-ets-signerLocation
id-smime-aa-macValue
id-smime-aa-mlExpandHistory
id-smime-aa-msgSigDigest
id-smime-aa-receiptRequest
id-smime-aa-securityLabel
id-smime-aa-signatureType
id-smime-aa-signingCertificate
id-smime-aa-smimeEncryptCerts
id-smime-aa-timeStampToken
id-smime-alg
id-smime-alg-3DESwrap
id-smime-alg-CMS3DESwrap
id-smime-alg-CMSRC2wrap
id-smime-alg-ESDH
id-smime-alg-ESDHwith3DES
id-smime-alg-ESDHwithRC2
id-smime-alg-RC2wrap
id-smime-cd
id-smime-cd-ldap
id-smime-ct
id-smime-ct-DVCSRequestData
id-smime-ct-DVCSResponseData
id-smime-ct-TDTInfo
id-smime-ct-TSTInfo
id-smime-ct-authData
id-smime-ct-compressedData
id-smime-ct-contentInfo
id-smime-ct-publishCert
id-smime-ct-receipt
id-smime-cti
id-smime-cti-ets-proofOfApproval
id-smime-cti-ets-proofOfCreation
id-smime-cti-ets-proofOfDelivery
id-smime-cti-ets-proofOfOrigin
id-smime-cti-ets-proofOfReceipt
id-smime-cti-ets-proofOfSender
id-smime-mod
id-smime-mod-cms
id-smime-mod-ess
id-smime-mod-ets-eSigPolicy-88
id-smime-mod-ets-eSigPolicy-97
id-smime-mod-ets-eSignature-88
id-smime-mod-ets-eSignature-97
id-smime-mod-msg-v3
id-smime-mod-oid
id-smime-spq
id-smime-spq-ets-sqt-unotice
id-smime-spq-ets-sqt-uri
idea-cbc
idea-cfb
idea-ecb
idea-ofb
identified-organization
identifier_value
import "$0";
import public "$0";
import weak "$0";
infinity
inhibitAnyPolicy
initial_ping_timeout
initials
inline
input_type
int_err_get (err.c)
int_thread_get (err.c)
internal error
international-organizations
internationaliSDNNumber
invalid
invalidityDate
ioctl
ioctl@@GLIBC_2.2.5
ioctlsocket
ip:
ip_and_port field has invalid length %d
ipsec3
ipsec4
ipsecEndSystem
ipsecTunnel
ipsecUser
is not valid for field
iso
isspace
isspace@@GLIBC_2.2.5
issuer capabilities
issuerAltName
issuingDistributionPoint
j
janetMailbox
java_outer_classname
java_package
joint-iso-itu-t
jurisdictionC
jurisdictionCountryName
jurisdictionL
jurisdictionLocalityName
jurisdictionST
jurisdictionStateOrProvinceName
jwˇﬂâP
j¯@
k
keyBag
keyUsage
kisa
l
lastModifiedBy
lastModifiedTime
ld-linux-x86-64.so.2
leading_comments
lhash.c
lib(%lu)
libc.so.6
libm.so.6
libpthread.so.0
librt.so.1
libstdc++.so.6
listen
localKeyID
localityName
localtime
localtime@@GLIBC_2.2.5
localtime_r
localtime_r@@GLIBC_2.2.5
loopback
lseek
lseek@@GLIBC_2.2.5
m
mXRecord
mail
mailPreferenceOption
malloc
malloc failure
malloc@@GLIBC_2.2.5
manager
map key must name a scalar or string field.
map type is only allowed for fields with a message type.
map type is only allowed for repeated fields.
map_key must not name a repeated field.
md2
md2WithRSAEncryption
md4
md4WithRSAEncryption
md5-sha1
md5WithRSA
md5WithRSAEncryption
md_gost94
mdc2
mdc2WithRSA
mem.c
mem_dbg.c
member
member-body
memchr
memchr@@GLIBC_2.2.5
memcmp
memcmp@@GLIBC_2.2.5
memcpy
memcpy@@GLIBC_2.14
memmove
memmove@@GLIBC_2.2.5
memory buffer routines
memset
memset@@GLIBC_2.2.5
merchant initiated auth
message $0
message extensions
message of type "
messageDigest
mgf1
mgmt
mime-mhs
mime-mhs-bodies
mime-mhs-headings
missing asn1 eos
mobileTelephoneNumber
msCTLSign
msCodeCom
msCodeInd
msEFS
msExtReq
msSGC
msSmartcardLogin
msUPN
m
n
nBytesItem is %d in UtlMemory_CalcNewAllocationCount
nSRecord
nack count upper bits
nameConstraints
name_part
nan
nested asn1 error
netadr_t::GetIP called on IPv6 address
network_config_changed_different_cluster
network_config_changed_removed
noCheck
noRevAvail
nsBaseUrl
nsCaPolicyUrl
nsCaRevocationUrl
nsCertExt
nsCertSequence
nsCertType
nsComment
nsDataType
nsRenewalUrl
nsRevocationUrl
nsSGC
nsSslServerName
number=%d, address=%08lX
o
obj_dat.c
obj_lib.c
object identifier routines
of the Protocol Buffer runtime library, but the installed version is
of the Protocol Buffer runtime library, which is not compatible with the installed version (
of type
offset=
onBasis
open@@GLIBC_2.2.5
opendir
openssh-key-v1
operator delete(void*)
operator delete(void*, std::nothrow_t const&)
operator delete[](void*)
operator new(unsigned long)
operator new(unsigned long, std::nothrow_t const&)
operator new[](unsigned long)
optional
org
organizationName
organizationalStatus
organizationalUnitName
otherMailbox
output specified is NULL
output_type
owner
p
pA
pSpecified
p\Í{Œ2~èS
package $0;
packet
pagerTelephoneNumber
parsing
passed a null parameter
password based MAC
path
payment gateway capabilities
pbeWithMD2AndDES-CBC
pbeWithMD2AndRC2-CBC
pbeWithMD5AndCast5CBC
pbeWithMD5AndDES-CBC
pbeWithMD5AndRC2-CBC
pbeWithSHA1And128BitRC2-CBC
pbeWithSHA1And128BitRC4
pbeWithSHA1And2-KeyTripleDES-CBC
pbeWithSHA1And3-KeyTripleDES-CBC
pbeWithSHA1And40BitRC2-CBC
pbeWithSHA1And40BitRC4
pbeWithSHA1AndDES-CBC
pbeWithSHA1AndRC2-CBC
personalSignature
personalTitle
photo
physicalDeliveryOfficeName
pilot
pilotAttributeSyntax
pilotAttributeType
pilotAttributeType27
pilotDSA
pilotGroups
pilotObject
pilotObjectClass
pilotOrganization
pilotPerson
pipe
pkcs
pkcs1
pkcs3
pkcs5
pkcs7
pkcs7-data
pkcs7-digestData
pkcs7-encryptedData
pkcs7-envelopedData
pkcs7-signedAndEnvelopedData
pkcs7-signedData
pkcs8ShroudedKeyBag
pkcs9
pointer != NULL
policyConstraints
policyMappings
poll
poll@@GLIBC_2.2.5
pops
port
postOfficeBox
postalAddress
postalCode
ppBasis
preferredDeliveryMethod
presentationAddress
prf-gostr3411-94
prime-field
prime192v1
prime192v2
prime192v3
prime239v1
prime239v2
prime239v3
prime256v1
private
privateKeyUsagePeriod
problem detected locally
protobuf failed to parse inline stats message
protobuf serialization failed?
protocolInformation
proxyCertInfo
pseudonym
pss
pthread_mutex_destroy
pthread_mutex_destroy@@GLIBC_2.2.5
pthread_mutex_init
pthread_mutex_init@@GLIBC_2.2.5
pthread_mutex_lock
pthread_mutex_lock:
pthread_mutex_lock@@GLIBC_2.2.5
pthread_mutex_timedlock
pthread_mutex_timedlock@@GLIBC_2.2.5
pthread_mutex_unlock
pthread_mutex_unlock:
pthread_mutex_unlock@@GLIBC_2.2.5
pthread_once
pthread_once@@GLIBC_2.2.5
pthread_self
pthread_self@@GLIBC_2.2.5
ptr_ != __null
pπ‰§Ør
q
qcStatements
qsort
qsort@@GLIBC_2.2.5
qualityLabelledData
qÚˇ
r
r+
rFC822localPart
rand2
rand@@GLIBC_2.2.5
random number generator
rb
rc2-40-cbc
rc2-64-cbc
rc2-cbc
rc2-cfb
rc2-ecb
rc2-ofb
rc4
rc4-40
rc4-hmac-md5
rc5-cbc
rc5-cfb
rc5-ecb
rc5-ofb
read@@GLIBC_2.2.5
readdir
realloc
realloc@@GLIBC_2.2.5
reason(%lu)
received_nosession
recv
recv@@GLIBC_2.2.5
recvfrom
recvfrom@@GLIBC_2.2.5
registeredAddress
relay.life
relay.rate
relay_addresses
relay_ping_only
reliable streampos offset
repeated
request_ack
request_ack_asap
request_ack_e2e
request_ack_immediate
request_ack_relay
required
revision
rewind
rewind@@GLIBC_2.2.5
rfc822Mailbox
ripemd160
ripemd160WithRSA
roleOccupant
room
roomNumber
routes
rsa
rsa routines
rsaEncryption
rsaOAEPEncryptionSET
rsaSignature
rsadsi
rsaesOaep
rsassaPss
run length compression
rÚˇ
rÚˇ8sÚˇxrÚˇ8sÚˇ‡rÚˇ
s
sOARecord
safeContentsBag
sbgp-autonomousSysNum
sbgp-ipAddrBlock
sbgp-routerIdentifier
sched_yield
sched_yield@@GLIBC_2.2.5
sdsiCertificate
searchGuide
secp112r1
secp112r2
secp128r1
secp128r2
secp160k1
secp160r1
secp160r2
secp192k1
secp224k1
secp224r1
secp256k1
secp384r1
secp521r1
secretBag
secretary
sect113r1
sect113r2
sect131r1
sect131r2
sect163k1
sect163r1
sect163r2
sect193r1
sect193r2
sect233k1
sect233r1
sect239k1
sect283k1
sect283r1
sect409k1
sect409r1
sect571k1
sect571r1
secure device signature
security
seeAlso
seed-cbc
seed-cfb
seed-ecb
seed-ofb
selected-attribute-types
send
send@@GLIBC_2.2.5
sendmsg
sendmsg@@GLIBC_2.2.5
serialNumber
serialize
serializing
serverAuth
server_steam_id doesn't match who we expect to be connecting to!
service $0 {
serviceLocator
session_inactivity_timeout
session_request_timeout
set-addPolicy
set-attr
set-brand
set-brand-AmericanExpress
set-brand-Diners
set-brand-IATA-ATA
set-brand-JCB
set-brand-MasterCard
set-brand-Novus
set-brand-Visa
set-certExt
set-ctype
set-msgExt
set-policy
set-policy-root
set-rootKeyThumb
setAttr-Cert
setAttr-GenCryptgrm
setAttr-IssCap
setAttr-IssCap-CVM
setAttr-IssCap-Sig
setAttr-IssCap-T2
setAttr-PGWYcap
setAttr-SecDevSig
setAttr-T2Enc
setAttr-T2cleartxt
setAttr-TokICCsig
setAttr-Token-B0Prime
setAttr-Token-EMV
setAttr-TokenType
setCext-IssuerCapabilities
setCext-PGWYcapabilities
setCext-TokenIdentifier
setCext-TokenType
setCext-Track2Data
setCext-cCertRequired
setCext-certType
setCext-hashedRoot
setCext-merchData
setCext-setExt
setCext-setQualf
setCext-tunneling
setct-AcqCardCodeMsg
setct-AcqCardCodeMsgTBE
setct-AuthReqTBE
setct-AuthReqTBS
setct-AuthResBaggage
setct-AuthResTBE
setct-AuthResTBEX
setct-AuthResTBS
setct-AuthResTBSX
setct-AuthRevReqBaggage
setct-AuthRevReqTBE
setct-AuthRevReqTBS
setct-AuthRevResBaggage
setct-AuthRevResData
setct-AuthRevResTBE
setct-AuthRevResTBEB
setct-AuthRevResTBS
setct-AuthTokenTBE
setct-AuthTokenTBS
setct-BCIDistributionTBS
setct-BatchAdminReqData
setct-BatchAdminReqTBE
setct-BatchAdminResData
setct-BatchAdminResTBE
setct-CRLNotificationResTBS
setct-CRLNotificationTBS
setct-CapReqTBE
setct-CapReqTBEX
setct-CapReqTBS
setct-CapReqTBSX
setct-CapResData
setct-CapResTBE
setct-CapRevReqTBE
setct-CapRevReqTBEX
setct-CapRevReqTBS
setct-CapRevReqTBSX
setct-CapRevResData
setct-CapRevResTBE
setct-CapTokenData
setct-CapTokenSeq
setct-CapTokenTBE
setct-CapTokenTBEX
setct-CapTokenTBS
setct-CardCInitResTBS
setct-CertInqReqTBS
setct-CertReqData
setct-CertReqTBE
setct-CertReqTBEX
setct-CertReqTBS
setct-CertResData
setct-CertResTBE
setct-CredReqTBE
setct-CredReqTBEX
setct-CredReqTBS
setct-CredReqTBSX
setct-CredResData
setct-CredResTBE
setct-CredRevReqTBE
setct-CredRevReqTBEX
setct-CredRevReqTBS
setct-CredRevReqTBSX
setct-CredRevResData
setct-CredRevResTBE
setct-ErrorTBS
setct-HODInput
setct-MeAqCInitResTBS
setct-OIData
setct-PANData
setct-PANOnly
setct-PANToken
setct-PCertReqData
setct-PCertResTBS
setct-PI
setct-PI-TBS
setct-PIData
setct-PIDataUnsigned
setct-PIDualSignedTBE
setct-PIUnsignedTBE
setct-PInitResData
setct-PResData
setct-RegFormReqTBE
setct-RegFormResTBS
setext-cv
setext-genCrypt
setext-miAuth
setext-pinAny
setext-pinSecure
setext-track2
setsockopt
setsockopt@@GLIBC_2.2.5
sfixed32
sfixed64
sha
sha1WithRSA
sha1WithRSAEncryption
sha224
sha224WithRSAEncryption
sha256WithRSAEncryption
sha384
sha384WithRSAEncryption
sha512
sha512WithRSAEncryption
shaWithRSAEncryption
shutdown
sig_app
sigaction
sigaction@@GLIBC_2.2.5
signal
signal@@GLIBC_2.2.5
signingTime
sigx_app
simpleSecurityObject
singleLevelQuality
sint32
sint64
snmpv2
socket
socket() call failed.  Error code 0x%08x.
socket@@GLIBC_2.2.5
socketpair
socketpair() call failed.  Error code 0x%08x.
socketpair@@GLIBC_2.2.5
sqrt
sqrt@@GLIBC_2.2.5
srand
srand@@GLIBC_2.2.5
sscanf@@GLIBC_2.2.5
ssh-ed25519 %nAAAA%*s%n
ssl
ssl_cert
ssl_ctx
ssl_method
ssl_sess_cert
ssl_session
stack.c
standalone
stateOrProvinceName
stats message size doesn't make sense.  Stats message size %d, packet size %d
stats.life
stats.rate
std::_Hash_bytes(void const*, unsigned long, unsigned long)
std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
std::_Rb_tree_increment(std::_Rb_tree_node_base*)
std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >(std::pair<std::string const, std::pair<void const*, int> >&&)
std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > const&>(std::pair<std::string const, std::pair<void const*, int> > const&)
std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
std::__throw_bad_alloc()
std::__throw_length_error(char const*)
std::__throw_logic_error(char const*)
std::__throw_system_error(int)
std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
std::basic_iostream<char, std::char_traits<char> >::~basic_iostream()
std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
std::chrono::_V2::steady_clock::now()
std::exception::~exception()
std::ios_base::Init::Init()
std::ios_base::Init::~Init()
std::ios_base::ios_base()
std::ios_base::~ios_base()
std::istream::read(char*, long)
std::locale::locale()
std::locale::~locale()
std::nothrow
std::ostream::operator<<(int)
std::ostream::write(char const*, long)
std::string::_M_iend() const
std::string::_M_leak()
std::string::_M_leak_hard()
std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
std::string::_Rep::_M_destroy(std::allocator<char> const&)
std::string::_Rep::_M_dispose(std::allocator<char> const&)
std::string::_Rep::_M_set_length_and_sharable(unsigned long)
std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
std::string::_Rep::_S_empty_rep_storage
std::string::_S_copy_chars(char*, char*, char*)
std::string::append(char const*)
std::string::append(char const*, unsigned long)
std::string::append(std::string const&)
std::string::append(std::string const&, unsigned long, unsigned long)
std::string::append(unsigned long, char)
std::string::assign(char const*)
std::string::assign(char const*, unsigned long)
std::string::assign(std::string const&)
std::string::at(unsigned long) const
std::string::begin()
std::string::clear()
std::string::compare(char const*) const
std::string::compare(std::string const&) const
std::string::compare(unsigned long, unsigned long, std::string const&) const
std::string::end()
std::string::erase(unsigned long, unsigned long)
std::string::find(char, unsigned long) const
std::string::find(std::string const&, unsigned long) const
std::string::find_first_not_of(char const*, unsigned long) const
std::string::find_first_of(char const*, unsigned long) const
std::string::insert(unsigned long, char const*)
std::string::insert(unsigned long, std::string const&)
std::string::operator+=(char const*)
std::string::operator+=(std::string const&)
std::string::operator=(char const*)
std::string::operator=(std::string const&)
std::string::push_back(char)
std::string::replace(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, char const*, char const*)
std::string::reserve(unsigned long)
std::string::resize(unsigned long)
std::string::resize(unsigned long, char)
std::string::rfind(char, unsigned long) const
std::string::substr(unsigned long, unsigned long) const
std::string::swap(std::string&)
std::terminate()
std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>)
std::thread::join()
stderr
stderr@@GLIBC_2.2.5
stdin
stdin@@GLIBC_2.2.5
steamdatagram_client_debugticket_address value '%s' isn't a valid address
steamdatagram_messages_auth.proto
steamdatagram_messages_sdr.proto
steamid:%s
steamnetworkingsockets_connections.cpp
steamnetworkingsockets_connections.h
steamnetworkingsockets_lowlevel.h
steamnetworkingsockets_messages.proto
steamnetworkingsockets_messages_certs.proto
steamnetworkingsockets_messages_udp.proto
steamnetworkingsockets_sdr_client.cpp
steamnetworkingsockets_sdr_common.cpp
steamnetworkingsockets_sdr_common.h
steamnetworkingsockets_sdr_hostedserver.cpp
steamnetworkingsockets_sdr_p2p.cpp
steamnetworkingsockets_snp.cpp
steamnetworkingsockets_snp.h
stop_waiting offset
stop_waiting pktNum %llu offset %llu
strcasecmp
strcasecmp@@GLIBC_2.2.5
strchr
strchr@@GLIBC_2.2.5
strcmp
strcmp@@GLIBC_2.2.5
strcpy
strcpy@@GLIBC_2.2.5
street
streetAddress
strerror
strerror@@GLIBC_2.2.5
strlen
strlen@@GLIBC_2.2.5
strncasecmp
strncasecmp@@GLIBC_2.2.5
strncat
strncat@@GLIBC_2.2.5
strncmp
strncmp@@GLIBC_2.2.5
strncpy
strncpy@@GLIBC_2.2.5
strpbrk
strpbrk@@GLIBC_2.2.5
strrchr
strrchr@@GLIBC_2.2.5
strstr
strstr@@GLIBC_2.2.5
strtod
strtod@@GLIBC_2.2.5
strtof
strtof@@GLIBC_2.2.5
strtol
strtol@@GLIBC_2.2.5
strtoll
strtoll@@GLIBC_2.2.5
strtoul
strtoul@@GLIBC_2.2.5
strtoull
strtoull@@GLIBC_2.2.5
subjectAltName
subjectDirectoryAttributes
subjectInfoAccess
subjectKeyIdentifier
subtreeMaximumQuality
subtreeMinimumQuality
subtype mismatch
supportedAlgorithms
supportedApplicationContext
surname
syntax = "proto2";
system lib
system library
t
targetInformation
tcgetattr
tcgetattr@@GLIBC_2.2.5
tcsetattr
tcsetattr@@GLIBC_2.2.5
telephoneNumber
teletexTerminalIdentifier
telexNumber
test
text format contains deprecated field "
textEncodedORAddress
textNotice
the global scope
thread=%lu,
thread=%lu, file=%s, line=%d, info="
time stamp routines
time@@GLIBC_2.2.5
timeStamping
timegm
timegm@@GLIBC_2.2.5
timezone@@GLIBC_2.2.5
title
tolower
tolower@@GLIBC_2.2.5
tpBasis
trailing_comments
tried to send packet to server, but socket not opened
true
trustRoot
type() == TYPE_FIXED32
type() == TYPE_FIXED64
type() == TYPE_GROUP
type() == TYPE_LENGTH_DELIMITED
type() == TYPE_VARINT
type_name
typeinfo for SteamAPI_ISteamNetworkingSockets_RunConnectionStatusChangedCallbacks::CallbackAdapter
typeinfo for std::exception
u
ucl
ui
uint32
uint64
undefined
uninterpreted_option
uniqueMember
unknown
unknown library
unreliable
unreliable data offset
unreliable msgnum
unreliable msgnum offset
unreliable size lower bits
unstructuredAddress
unstructuredName
userCertificate
userClass
userId
userPassword
u—6:“!
valve
vector::_M_default_append
vector::_M_emplace_back_aux
vector::_M_insert_aux
vector::reserve
void google::protobuf::FieldDescriptorProto::set_label(google::protobuf::FieldDescriptorProto_Label)
void google::protobuf::FieldDescriptorProto::set_type(google::protobuf::FieldDescriptorProto_Type)
void google::protobuf::FileOptions::set_optimize_for(google::protobuf::FileOptions_OptimizeMode)
void std::vector<char const*, std::allocator<char const*> >::emplace_back<char const*>(char const*&&)
void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&)
void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&)
void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&)
void std::vector<std::string, std::allocator<std::string> >::emplace_back<std::string>(std::string&&)
void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int const&>(unsigned int const&)
void std::vector<void (*)(), std::allocator<void (*)()> >::_M_emplace_back_aux<void (* const&)()>(void (* const&)())
void std::vector<void*, std::allocator<void*> >::_M_emplace_back_aux<void* const&>(void* const&)
vtable for SteamAPI_ISteamNetworkingSockets_RunConnectionStatusChangedCallbacks::CallbackAdapter
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vtable for std::basic_ios<char, std::char_traits<char> >
vtable for std::basic_streambuf<char, std::char_traits<char> >
vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
vtable for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
vø>¢·Æ∫W˚¨˛
w
wap-wsg
wap-wsg-idm-ecid-wtls1
wap-wsg-idm-ecid-wtls10
wap-wsg-idm-ecid-wtls11
wap-wsg-idm-ecid-wtls12
wap-wsg-idm-ecid-wtls3
wap-wsg-idm-ecid-wtls4
wap-wsg-idm-ecid-wtls5
wap-wsg-idm-ecid-wtls6
wap-wsg-idm-ecid-wtls7
wap-wsg-idm-ecid-wtls8
wap-wsg-idm-ecid-wtls9
whirlpool
write@@GLIBC_2.2.5
wrong submessage type
wt
x
x121Address
x500UniqueIdentifier
x509
x509 certificate routines
x509Certificate
x509Crl
x509_crl
x509_info
x509_pkey
x509_req
x509_store
xboxpwid:%s
y
yÿæˇyÿæ
z
zlib compression
{
{$0$1}
|
|gˇ}g
|≈ÚÆ°0
}
}+ˇ}+
~

ˇ
Ä
Ä:
Ä>ÕÃL=◊£<
Ä?
Ä@
Ä
ÄÑ.A
ÄÑ.A¸©Ò“MbP?
ÄÑ.¡
Ä‡7y√AC
Äˇ
Å
Ç
É
ÉöU1(\Q”F¸Ù˛
ÉÚµá˝cˇ‰ˇ
Ñ
Ñ•b}$l¨€∫˝dˇ
Ñ”tˇÑ”t
Ñ◊óA
Ö
ÖÄ≤È∞d
Ü
á
á∂=ˇá∂=
à
à√@
â
âq-ˇâq-
ä
äñ?ˇäñ?
ã
å
ç
é
é≤5*˚g8≤P˝Dˇ
è
è∏Â∏üΩﬂ¶è˛§ˇ
ê
ê@
êôÌˇ@õÌˇ‡öÌˇõÌˇòõÌˇÄöÌˇ(öÌˇ–ôÌˇÄôÌˇ
ë
í
íâèˇíâè
ì
î
î}tàœ_©¯©˛¨ˇ
ï
ñ
ñ…%ªŒükì†˝\ˇ
ó
ò
òBíˇüBí
ô
ö
õ
ú
úD
úvÚˇÃvÚˇ¸vÚˇ4vÚˇúvÚˇúvÚˇlvÚˇsteamnetworkingsockets_lowlevel.cpp
ù
û
ü
†
†ÿÖW4vC
°
°Î,≥ÆI
¢
¢"¬
£
§
§N–ˇßN–
•
¶
¶¸,¯H;
ß
®
®≠»å8eﬁ∞Ω
®¿ˇˇ®¿
®ıÙˇ∞ıÙˇ»ÙÙˇuıÙˇ»ÙÙˇ®ıÙˇÂÙÙˇÂÙÙˇ
©
™
™“:
´
¨
≠
≠X}ˇÆX}
Æ
Ø
∞
∞oo
∞·˚ˇ@·˚ˇH·˚ˇP·˚ˇX·˚ˇ`·˚ˇp·˚ˇÄ·˚ˇê·˚ˇ†·˚ˇ@‡˚ˇ
±
±˜ˇG±˜ˇÑ±˜ˇ•±˜ˇÑ±˜ˇ•±˜ˇ•±˜ˇê±˜ˇú±˜ˇ•±˜ˇ≤±˜ˇÙ‹˜ˇÙ›˜ˇ§ﬁ˜ˇIﬂ˜ˇJ‡˜ˇ¶ﬂ˜ˇÔ‡˜ˇ≥·˜ˇá„˜ˇ˛„˜ˇ
≤
≥
¥
¥&ƒˇ¥&ƒ
µ
µ'}ˇµ'}
µ…¶≠è¨qùa¸¸˛
∂
∂11eU%∞Õ˘˛ƒˇ
∂kÚÜ@ƒ
∑
∏
∏N⁄ˇ∏N⁄
∏y-ˇªy-
∏Äˇ™®≠µµ˛|ˇ
∏ˆÌˇ∏ˆÌˇ(¯Ìˇ¯ˆÌˇà¯Ìˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇ∏ˆÌˇX˜Ìˇ®ˆÌˇ../../common/steamnetworkingsockets_messages_certs.pb.cc
π
∫
ª
º
Ω
Ω~)p$w˘ﬂt˛úˇ
æ
ø
¿
¿oòˇ¿oò
¿˛¢ˇ«˛¢
¿ˇˇˇﬂA %d%n %n
¡
¬
¬πÕˇ¬πÕ
√
ƒ
≈
∆
«
«:Ç%ÀÖt◊
«B
«í®
»
»@–ˇÀ@–
»BÕÃÃ=◊#<
»Ngm¡´C
»P≈ˇ»P≈
»¸∂WÉ
…
 
À
ÀÉuˇÀÉu
Ã
Õ
Œ
œ
œõ®èìpDπƒ˛¥ˇ
–
–Øìe¡
—
—T≈ˇ—T≈N25SteamNetworkingSocketsLib34CSteamNetworkListenSocketSDRServerE
“
”
”ísiô$$™Iˇ‹ˇ
‘
‘5>≈Æ
’
÷
÷?Ãˇ◊?Ã
÷≠Ëó[
◊
ÿ
Ÿ
⁄
€
‹
›
ﬁ
ﬁ*ÄäÑ
ﬂ
‡
‡?a_object.c
‡CHØºöÚ◊z>
‡ÖõˇˇÖõ
‡¡
·
·.yˇ·.y
·Ë∑ˇ·Ë∑
‚
‚ˇê‚ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ@„ˇ‡‚ˇ†‡ˇ../steamnetworkingsockets_shared.cpp
„
‰
‰.yˇ‰.y
Â
Ê
Êà∑ˇÊà∑
Á
Ë
ËvH7B
Ëæ—8˛Ω
È
Í
Í5Œ]JâBœå˚º˛
ÍëÚ
Î
Ï
Ï3Úˇ$4Úˇ|4Úˇå5Úˇ¥4Úˇ¥4ÚˇÑ2Úˇº3Úˇº3ÚˇhpÚˇ–pÚˇhpÚˇhpÚˇêpÚˇ
Ì
Ó
Ô

?

ˇ
Ò
Ú
Û
Ù
ı
ıAIÆØè
ˆ
ˆ⁄_Xf´£’˝lˇ
˜
˜%√Åqﬂ
¯
¯?Unexpected end of string.
¯“CÛcŒ
¯ˇ
˘
˙
˚
˚ˇ.
˚ˇ<
˚ˇN
˚ˇs
˚ˇÜ
˚ˇò
˚ˇ´
˚ˇΩ
˚ˇ‚
¸
˝
˝*
˝,ˇ
˛
ˇ
ˇˇˇ
ˇˇˇˇçÌµ†˜∆∞>csteamnetworkingmessages.cpp
ˇˇˇˇˇˇˇˇ
