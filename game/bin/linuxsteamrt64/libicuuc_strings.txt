
!
! ]
!!
!"
!#
!$
!$*);^-/
!%
!&
!,M2?{
!-
!2
!3%
!4
!6
!9
!>(?7M
!>|5?{
!?
!D
!F
!G
!G!
!G2H1M1M
!I
!K,M0
!K3G4M8M
!K3|
!K5M8z
!L
!L2
!M
!N
!N0
!P
!Q
!R
!S
!S,
!T
!X
!Y
![
!_
!`
!`0
!a
!b
!c
!c!
!f
!fm
!h
!h-
!h:
!hD
!hZ
!i-
!j
!j-
!j0
!k
!k$
!k,
!k-
!k0
!kg
!l
!n
!n#
!n,
!n0
!n1
!n>
!q
!q"
!q%
!q*
!q,
!q0
!q1
!q4
!qQ
!qc
!qi
!q}
!u
!u-
!v1
!x
!y
!z
!|
!|0
!|1
!|SOW[
!|SOW[)
!|o
!}
!}<
!~-
"
"!
"#
"%
"&
"'
")
"*
"+
",
"-
".
"0
"1
"3
"5
":
";
"<
"@
"J
"O
"P
"Q
"R
"W
"W-
"Y
"Y,
"Y1
"Y\
"Y
"[
"\
"]
"]-
"_
"_-
"`
"a
"b
"c
"cK
"d
"e
"f
"g
"h
"hB
"j
"k
"k0
"k1
"k\
"k
"m
"n
"o
"o-
"o0
"oW[
"oW[(
"r-
"s
"s-
"t
"u
"u&
"u,
"u.
"u1
"u?
"uD6#u
"uW
"v
"w
"w-
"x
"x_
"y
"z
"{-
"}
"}h
"~^
#
#!
#"
##
#$
#&
#*
#-
#>
#?
#F
#I
#M
#N
#O
#P
#P-
#PG
#Q
#S
#W
#WTX&O
#X-
#Y
#Z
#[-
#\
#]
#^
#_
#a
#b
#e$
#e-
#f
#g
#i
#j
#k
#l
#l-
#l0
#l1
#l2
#l3
#l4
#lB
#l_
#n
#n-
#o
#p
#q
#r
#s
#u
#u0
#v
#w
#x
#y-
#{
#|
#}
#~
#~'
#~(
#~1
#~W
$
$"
$"{
$$
$&
$'
$)
$*
$+
$,
$-
$.?4M
$0
$0>5
$1
$2
$2K(>8M
$7
$8
$9?$?
$;
$<
$>/M
$>2
$>9?$?
$?,?2?8?
$?.B|
$?.K|
$?/A5>(
$@
$A
$A(@8?/{
$A5>2A
$B3?
$B{
$F
$H
$K.8M
$M8M5>(
$N
$N0
$O1
$P
$PN
$PZ
$Q-
$R
$R-
$R0
$T-
$U
$V3
$W
$X
$X$
$X-
$Y
$Y-
$Z
$\
$\-
$\`
$]
$_
$`
$`-
$b{
$c.
$cH
$d
$e
$f
$f-
$j
$k
$l
$p
$p.
$r
$s
$t
$u
$v
$w-
$0
%
% B
%"
%#
%%
%%ALIAS
%%CollationBin
%%DEPENDENCY
%%Parent
%%ParentIsRoot
%%ReorderCodes
%&
%'
%(
%+1.1f
%,
%-
%-)---1-5-9-
%.
%0
%1
%4
%6
%:
%>(
%@
%I
%N
%P-
%R
%R!
%R$
%R0
%R1
%R\
%S
%Translit%Hex
%Translit%UnicodeChar
%Translit%UnicodeName
%W
%X
%Y
%Y,
%Y0
%Z
%[
%\
%\S
%^
%_
%_-
%_0
%_e
%`
%`-
%`0
%b
%d
%e-
%f
%f"
%f#
%f$
%f0
%f6
%f;
%h-
%i
%i-
%j-
%k
%m
%m"
%m%
%m&
%m'
%m(
%m0
%m1
%m9
%m:
%m`
%mc
%my
%mz
%o
%o-
%q-
%s
%s-
%t
%u!
%u-
%v
%w
%x-
%y
%z
%{-
%{=
%|
%|-
%~
&
& {
&!
&&
&'
&(
&+
&-
&/
&1
&2>8?
&:
&<
&>|
&?
&?(>|
&?(>|8M
&?2?
&?58$M$?}
&@
&A
&A,>/M
&A}
&C6M/->7
&G
&M5@*M
&N
&N$
&N0
&O
&O&
&O0
&Ofe
&P
&Q
&T
&U-
&W-
&X
&\
&]
&_"
&_-
&_1
&b
&b'
&b(
&b0
&bK
&d
&e
&f
&g-
&h
&i
&l
&m
&n
&na
&o
&p-
&q
&r-
&t
&u
&v
&w
&y
&z
&{
&{0
&{?
&|
&}
&~
'
'!
'"
'#
'$
'%
'%)%
'&
''
'(
'+
'-
'2
'4
'6
'7
'9
';
'>
'@
'B
'F
'M
'N0
'OE
'P
'Q
'R
'S
'T
'U
'V
'W!
'X
'X-
'Y
'Y!
'Y"
'Y$
'Y0
'Y1
'Y2
'Y7
'Y8l
'YNWnf
'Yck
'YyrKQ
'Z
'\U
']
'_
'`
'`!
'`$
'`'
'`0
'`1
'`6
'`?
'a
'a-
'b
'c-
'f-
'h
'k
'kCQ
'l
'l0
'm
'm-
'n
'o
'p
'p0
's
'u
'v
'w-
'x
'x/
'y
'z
'{
'|
'|0
'|5
'}"
'}0
'}1
'~
(
(!
("
(#
(%
(&
(*
(+.147
(,
(,$
(-
(.
(.@,?/
(.@,?/{
(0,8,
(1
(3
(4
(5
(8M8>5A
(9
(:
(;
(<
(>#/
(>3F
(?/>.?
(?/A
(?25?2?2M2>$M$$K
(@
(A
(F$|2{!M8M
(G*M*>3?
(G*M*>~
(G0
(H1
(J1K(
(K.?/
(K5K
(K|$M$G{
(K|$M$M
(K|5F
(L1A
(M/B
(M/B25M
(M/B5G
(M/B5K
(M/B5K8M
(M/B8?2>{!M
(M/B8?2>{1M
(M/B8?2{!M
(M/B8@2{!M
(N
(P
(P-
(Q
(R
(R-
(S
(T
(T%
(W
(W"
(W#
(W+
(W-
(W0
(W1B
(Wg
(X~
(Y
(Z
([
(\
(^
(^-
(_
(`"
(`/
(`?
(a
(anonymous namespace)::SCRIPT_PROPS
(anonymous namespace)::_ISO2022CNData
(anonymous namespace)::_ISO2022JPData
(anonymous namespace)::_ISO2022KRData
(c
(c-
(d
(f
(f)Y
(f+
(ft^
(g
(g!
(g#
(g)
(g-
(g0
(g1
(g6
(g8
(g9
(g[
(g]
(gs
(h
(h-
(i
(j
(k
(l
(lv
(m
(n
(o
(q
(r
(s
(t
(t-
(u
(u!
(u%
(u'
(u(
(u)
(u,
(u-
(u0
(uK
(ud
(ui
(w
(z
({
({#
(|
(}-
(~
)
)"
)#
)$
)'
)+
)7
)H0
)I
)I2
)N1
)NX
)Q-
)R
)R$
)R&
)R)
)R-
)R0
)R2
)RO
)S
)T
)V
)V-
)W
)Y
)Y#
)Y'
)Y-
)Y.
)Y0
)Y1
)Y4
)Y8
)Y8l
)YCQ
)YMR
)Yck
)Yq
)Ys^
)Yva
)Y{Q
)Yb
)Yy
)Z
)\
)]
)]0
)^
)_
)_Z
)a
)b
)b-
)c
)d
)e
)e-
)f
)h-
)j!
)j-
)j0
)jc
)m-
)m4
)n
)n0
)n1
)n<\/O
)o
)o!
)o-
)s
)s-
)t
)u
)v
)w
)y
){
)}
)~-
)0
)j
*
*!
*!A
*!D
*"
*#
*$
*&
*(
*(>.
*(>.F/M(?/{
**
**M*A5
*-
*.
*0>.>0?,K
*0?5|$M$?$
*2>5A
*2L
*3
*4/
*7M$A
*8F/M1M1
*8F/M1M1>8M
*9M5>
*9}5?
*;
*<
*>*A5
*>*M/A
*>.|
*>0.M*0M/.>/
*>0@8M
*>8M
*?
*?/1?
*?{*M
*?{/?{
*@
*A$?/
*A0>$(
*B|#5@$?
*C$?
*F/M 8K
*F/M8K
*F/M8K8M
*F1A
*F1B5?/{
*F8F/M1M1
*F8F/M1M1>8M
*F8K
*F{
*F|$M$M
*G
*G|7M/{
*J(>*M
*J3M3>|!M
*K2K
*K3?(G7M/
*K3?7M
*M/B2
*M/B2>8M
*M0?{88M
*M0?{8?*M*?
*M0?{8M
*N
*N0
*N1
*NULL*
*P
*PD
*Q
*Q1
*R
*S
*S0
*T
*U
*U(
*V
*W
*X
*X2
*Y
*Y!
*Y"
*Y$
*Y%
*Y0
*Y1
*Y5
*YP[/n
*Y\
*Ya
*Z
*[
*\
*`
*`0
*a
*b
*b!
*b+
*c
*d
*d!
*d-
*e
*e-
*f
*f!
*g
*g-
*g0
*g7
*gy
*h
*h)
*h+
*h0
*i
*i!
*i,
*j
*j0
*j3
*k
*k!
*l-
*m
*m1
*m4
*o
*o$
*r
*r0
*rD
*ra
*s
*s)
*s0
*s1
*t
*t0
*u
*v_
*y-
*y3
*{
*{-
*|-
*}
*L
+
+!
+"
+"+"+"+"#
+#
+$
+%
+&
+'
+(
+)
+,
+-
+.
+1K/?
+3
+<}
+>
+>1K8M
+>8K
+?(>{7M/}
+?(>{7M/})
+?(@7M/{
+?(M(?7M
+?2?*M*?(K
+?2?*M*@{
+?2?*M*H{
+?2?*M*H{8M
+?{2>{!M
+D
+F
+F,M0A
+F,M0A50?
+F1K
+G
+K.F{1K
+K.F{1K8M
+K1?{1M
+K1?{1M8M
+M
+M0>{8M
+M0?7?/{
+M2.?7M
+N
+N0
+PL
+Pfe
+R
+R0
+R8
+S
+T
+T-
+U
+Y
+Y'
+Y0
+Y1
+\
+]
+^
+^0
+^1
+^`
+_
+`
+a
+a-
+b
+c
+c5
+c7
+f
+g"
+g%
+g'
+g0
+g<
+g>
+g?
+gM
+gz
+h
+j
+j0
+k
+m
+n-
+o'
+o-
+o0
+p
+q
+r
+s
+s@
+sG
+t
+u
+u!
+u-
+uP
+uZ
+y
+yg
+z
+{
+|
+}
+}#
+}-
+~
+~%
+~0
,
,!
,#.#0#2#
,$
,%_>?
,'
,)
,*
,,
,-
,1
,1-
,4
,5
,8
,91?{
,9>.>8M
,9>.?/{
,9?/
,9M1?{
,9M1H{
,:
,;
,<
,>$M$M
,>1M1|
,>2?(@8M
,>|$M$F}.?
,>|,!K8M
,>},K5
,>},K5>8M
,?
,?8>5A
,?8K
,?8M8>5A
,?|
,?|8M
,@9>1?
,A
,A!>*F8M1M1M
,A'{
,A9?!M
,D
,F(?{
,F21B8M
,F2>17M/{
,F2@8M
,F|.A!{
,G
,H2K17M/{
,J/M8?
,J3?5?/>(K
,J3@5?/
,J3@5?/>(K8M
,J3@5?/{
,K*M*K.K+K
,K2?5|
,K5
,K8M(?/
,K8M(?/-
,K8M(?/{
,M
,M/B(8M
,M/B2,
,M01M1z
,M08@2?/
,M08@2?/{
,M08@}
,M0>85?}
,M0>8>5?}
,M0>8?2?/
,M0>9M.?
,M0B#F
,M0B#H
,M2?8M
,O-
,Q
,S
,U+
,U-
,V
,W
,W-
,W5F1M1M
,X-
,Z
,[
,[-
,\
,_
,a
,d
,d-
,e
,f
,g
,g(
,g)
,g*
,g.
,g0
,g1
,g;
,gH
,gI
,gJ
,gP
,gY
,ghT
,ghTmQ
,gt^
,gy
,h
,k
,k-
,l
,n
,n0
,o
,p
,p&
,p(
,p)
,p.
,p0
,p4
,p7
,pF
,pb
,po
,q\0
,r-
,s
,t
,u
,y
,{
,{!>08M
,{1
,{2
,{3
,{4
,|
,|$M$2F.?
,|.@8M
,|.A!
,|.M.)
,}
,~
-
-!
-"
-#
-$
-%
-&
-(
-/
-1
-2
-4
-7
->
->7:
-B
-F
-G
-I
-J
-L
-N
-N"
-N'
-N-
-N/
-N0
-N1
-N9
-N=
-O
-P
-Q
-Q-
-R
-S
-T
-W
-X
-Z
-Z-
-[
-\
-\{
-^
-^#
-^&
-^@
-^Z
-_
-_-
-`
-b
-b-
-c
-d
-d0
-dc
-e
-f
-f-
-f0
-g
-g"
-g*
-h
-h-
-k
-o
-q
-r
-r1
-rm
-s
-t
-v
-w
-x
-y
-z
-{
-|
-}
-~
-~-
-~^
-0
.
.!F/M1
."
."6"
.#
.%
.&M'M/
.(
.($M
.(>$M$M
.(?2
.(L8M
.*
.+
.,
.-
..
.0?/>9>.{
.1> ?
.1?(K
.1?/>(>
.1M1(M(>~
.1M1>.J1K8M
.2/
.2>,K
.2>5?
.2>5?/{
.2G7M/
.2G7M/{
.8G1A
.9
.9>8.A&M0
.:
.<
.<(+|&
.>
.>!M0?!M
.>/{
.>0?(K
.>2&M5@*M
.>2?
.>2?&M5@*M
.>5M8z
.>8$M$?}
.>81M1M2>{
.>8?!K#?/
.>8?!K#?/{
.>8?/K
.>9?
.>{
.>|
.>|7}
.?
.?(?1M1?(A3M3?}
.?(?1M1?}
.?(?1M1M
.?.
.?8F
.?{
.@{
.A
.A.M*M
.B
.Bz
.C
.D
.F(K.?(@
.F0?!
.F2?/
.F{!K8
.F},z
.G
.G/M
.G1M1?
.J1?8?{
.J}!K5{
.K#?1M11?
.K~!>5?/{
.L1?1M1G(?/{
.L1?7M/8M
.L1@7M/8M
.L1@7M/{
.M/>{.>|
.N
.O
.P
.Q
.R
.S$
.T
.U!
.U-
.V-
.W
.W1?
.W1?1M1>(?/
.W1@7M/8M
.X
.Y
.Z
.\
.]
.^
._
.a-
.b
.b-
.dat
.e
.f
.g
.j
.l
.l-
.m
.q-
.s
.s-
.t
.w
.x
.z
.z!
.z'
.z)
.z+
.z-
.z0
.z3
.z5
.z7
.z<
.zS
.{
.{!G/{
.}
.}$M$@8M
.}-
.}0
.~
.~!
.~!K5
.~,
.~E
/
/!
/"
/#
/%
/&
/'
/(
/("
/*
/,
/-"
/.(?
/.{
//
////////////////::::::::::::::::unames/makeTokenMap() finds variant character 0x%02x used (input charset family %d)
/0"
/1
/2
/31
/4
/41
/61
/7
/71
/9
/91
/:
/;1
/<
/<1
/=*
/=1
/>
/>1
/?
/?&M&?7M
/?1
/@1
/A#H1M1!M
/A.
/A1
/A2>{
/A5>{
/A8M-
/A8M1M1G7M/8M,
/A|5?}
/B#?!>!M
/B#?!>!M8M
/B#?/{
/B#?1M1M
/B#?1M1M8M
/B1K
/B1K*M/{
/B1K8M
/Bm
/B|5?}
/C
/D1
/E
/E1
/F1A(@*M*F
/F2M2K(H+M
/F{
/G1
/H
/I
/J1
/J1B,>
/M
/N
/O
/O)
/O)RyQ
/O)RyQCQ
/O-
/O/
/O0
/Om
/P
/P-
/Q
/Q1
/S
/S-
/S1
/T
/U
/U#
/U1
/V
/W
/W1
/X-
/Y
/Y1
/Z
/Z0
/[1
/[3
/\3
/]3
/^-
/^0
/^1
/^3
/^B
/^^
/_
/_3
/`
/`$
/`1
/`3
/a
/a3
/b3
/c
/c0
/cB
/cn
/c{
/d
/e
/e0
/e1
/e>
/etc/localtime
/f
/f0
/f1
/fb
/g
/g%
/g&
/g,
/g1
/h
/h1
/i!
/i-
/i1
/k
/k1
/l1
/lc
/m
/m1
/n
/n1
/nCQ
/nc^
/o
/o1
/p
/p-
/p1
/q
/q1
/r
/r!
/r1
/s
/s1
/t
/t!
/t1
/u
/usr/share/zoneinfo/
/v!
/v*
/v-
/w
/w1
/x1
/y
/y!
/y1
/z
/{
/{!
/{1
/|
/|1
/}
/}0
/}1
/}E
/~
/~1
/1
0
0 $
0 9
0 J
0!
0#!
0#&
0$
0%
0&
0'
0'.
0(
0)
0*
0+
0+(
0.
0."
0/
00
00#
001
002
003
004
005
008
009
00L
010
011
012
0123456789
0123456789ABCDEF<>-
0123456789abcdef
013
014
015
016
017
018
019
02*
020
021
024
028
029
03
030
031
032
034
035
036
039
03f
04
04$
040
044
048
050
051
052
053
054
056
057
060
061
062
064
068
06m
07!
070
072
074
076
084
086
09&
090
092
096
0:!
0;
0<
0=#
0=(
0@
0B%
0B*
0C
0D
0D"
0E
0F
0G!
0J
0J#
0J$
0K
0Kn
0M
0M!
0M&
0N
0N-
0N1
0O
0P
0P(
0P8
0Q-
0R
0R,
0R-
0R0
0R|
0S
0T-
0V
0W
0W"
0W(
0W0
0W1
0W3
0W~
0X%
0Y
0Z
0[
0\
0\-
0]-
0^
0^0
0_
0_!
0_-
0`
0`#
0a
0b
0b"
0b0
0b1
0b5
0bC
0bX
0bY
0bs
0c&
0d
0f
0h
0i
0i0
0j
0l
0l0
0lz
0o
0o!
0p
0q
0r
0s-
0t
0t#
0t$
0u
0u!
0u"
0u%
0u&
0u)
0u*
0u+
0u-
0u.
0u0
0u1
0u2
0u3
0u5
0u7
0u8
0u9
0u;
0u=
0u?
0u@
0uA
0uD
0uG
0uM
0uN
0uO
0uQ
0uT
0uU
0uV
0ub
0uk
0up
0uq
0us
0uv
0v
0w
0x
0z
0{
0|
0|
0}
0}#
0}'
0}.
0}0
0}>
0
1
1!
1"
1#
1$
1%
1&
1'
1,@9A}
1.3>{
100
1000
10000
100000
1000000
10000000
100000000
1000000000
10000000000
100000000000
1000000000000
10000000000000
100000000000000
101
102
103
104
105
106
107
108
1089
109
11
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
16
160
1606NICT
161
162
163
164
165
166
167
168
169
1694ACAD
17
170
171
172
173
174
175
176
177
178
179
17M/
180
181
182
183
184
185
186
187
188
189
190
1901
191
192
193
194
195
1959ACAD
196
197
198
199
1994
1996
1;
1=
1>{!M
1>{!M8M
1?/>&M
1?/>}
1?/>}8M
1?/K
1?/}
1?/}8M
1?5|
1@/B#?/{
1@}
1@}8M
1A.G(?/
1A.G(?/{
1B,?~
1B,?~8M
1F/M(?
1F8@+F
1H1M1M8M
1I
1J
1J!G7M/{
1J$@1
1J.G(?/{
1K.{8M
1M1.F
1M1F}
1M1K.?
1M1K3|
1N-
1O
1P
1Q
1R
1S
1S0
1S1
1T
1T?
1U
1U)
1V
1V#
1V-
1X
1X(
1X>
1Y
1Y-
1Y0
1Y4
1Z
1\
1\$
1\0
1]
1_
1_0
1_A
1`
1a
1e
1f
1f-
1g
1gd
1h
1h-
1i
1k-
1m
1o-
1q
1r
1r0
1rT
1s
1s3
1t
1u
1u0
1u4
1u@
1v
1w-
1y
1z
1z+
1z-
1z0
1{
1|
1}
1~-
1~0
2
2"
2&
2(
2(M(
2)
2*
2+
2,(Kz
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
238
239
23?$2?*?
242
246
248
249
25
250
254
258
26
260
262
266
268
270
275
276
278
280
288
292
296
2;
2<
2<}
2=
2>
2>$M5?/
2>$M5?/{
2>0?
2>0?1M1M
2>0?1M1M8M
2>0?8M
2>1M1?{
2>1M1M5?/{
2>1M1M8M
2>5K
2>5K7?/{
2>5K7M/{
2>5K8M
2?
2?$
2?$M5>(?/
2?$M5>(?/{
2?$M5G(?/{
2?*?
2?*?:
2?,?/
2?,?/{
2?,M0F5?2M2
2?.
2?/A
2?/B
2?/Kz
2?1
2?1>8M
2?{!F.>{
2@
2@(?/|
2A
2A,M 2?/>(
2A2A5
2A5>{!
2B,-
2B/?5?}
2B/?8M
2B8?/
2C
2F,(@8M
2F5M
2F5M8M
2F8K$K
2F8K$M$K
2G
2H!?/{
2H,@0?/
2H,@0?/{
2H8?{
2H{
2I
2J
2K!M
2K$M$?
2K5|
2K8?
2K8M
2K|!M
2M/B
2N
2N.
2N6
2N\
2P
2Q
2R
2S
2U
2V
2V-
2V2
2X
2Y
2[
2\
2^
2`-
2a
2b)
2b-
2c-
2e-
2h
2i-
2irT
2j
2k
2k0
2kt
2m
2m,
2m-
2m2
2mA
2mT
2n
2o
2o0
2o1
2p
2q
2r
2s
2t-
2u
2u!
2u"
2u%
2u+
2u0
2u1
2u2
2u3u
2uHS
2uI
2uM
2uO
2uP[
2uT
2uV
2um
2v
2x
2z
2z0
2z8
2}-
2~
3
3 ]
3#
3$
3%
3(
3)
3*
30
300
304
308
31
312
316
320
324
328
33
332
334
336
340
344
348
352
356
360
364
368
37
372
376
380
384
388
392
398
3E
3I
3J
3M
3N
3O
3O-
3P
3Q
3R
3S
3T
3T6
3TQ
3U
3V
3W
3W-
3Y
3Y3
3Z
3\
3^
3^-
3^0
3^2
3_
3`
3b
3b1
3d-
3e
3f
3g
3g-
3h
3i
3l
3l-
3m
3o
3t
3u
3v
3y
3{
3|
3}
3}"
3~
4
4"
4#
4#7#:#
4%
4&
4'
4(
4)
4.
40
400
404
408
41
410
414
417
418
419
422
426
428
430
434
438
440
442
446
450
454
458
462
466
470
474
478
480
484
492
496
498
499
4=J0
4A
4C
4D
4G
4I
4O
4O,
4Q
4S
4T
4Te
4V
4V1
4Va
4W
4X
4X#
4X$
4X'
4X-
4X.
4X/
4X0
4X1
4Xa
4Y
4Y(
4Y/
4Y0
4Y1
4Z
4[
4]
4^
4_
4a
4b
4bY
4c
4d
4e-
4f-
4g
4g0
4gm
4g4Bh0
4h
4i
4j
4j-
4k
4l
4l%
4l)
4l-
4l0
4l1
4l6
4lF
4lQ
4l_
4ln
4lp
4ls
4n
4o
4p
4r
4s
4t
4t!
4t;
4v
4w
4x
4x!
4x&
4x0
4x1
4y
4z
4{
4|
4~0
4
41
5
5"
5#
5$
5%
5&
5(
5(A5>$A
5(M5>$A
5(M5>$M$A
5)5)
5)5)5)
5)y$
5*
5.
500
504
508
512
516
52
52.1
520
524
528
53
530
531
532
533
534
535
536
540
548
554
558
56
562
566
57
570
574
578
580
581
582
583
584
585
586
591
598
5>$A
5>$B8M
5>&A8M
5>2?8M
5>2M2?8M
5>2|
5>|
5>|8K
5?/(M(
5?/1M1M(>.@8M
5?5F/M,
5?8M1M1
5?{8F{8M,
5@
5@&
5F
5F(8M5G2
5F(8M5G2{
5F(?8M5G2
5F(M1?/>{
5F2M2K
5F3M3?
5F8M1M1Gz
5F|!F
5F|&F
5F}7M
5H
5H1M1M9K4M8M
5I
5J3K+M
5Kz
5Kz8M
5M/>
5N
5O
5P
5P=
5Q
5R
5R-
5S
5T
5T-
5U
5V
5VD
5X
5X"
5Xo
5Y
5Z-
5\
5^
5_
5_(
5_)
5_-
5_0
5_1
5`
5a
5c
5d
5g
5g0
5g6
5h
5i
5j
5j-
5k
5l
5m-
5o-
5p
5r
5r-
5s
5t0
5ux
5v
5w
5x
5y
5z
5{
5{-
5|7$M$?}
5}
5}-
5~
6
6!
6$
6&
6'
6(?
6)
6*
6,
6,M&2?*?
6-
600
604
608
612
616
620
624
626
630
634
638
642
643
646
652
654
659
65M5>}
660
662
663
666
670
674
678
682
686
688
69,>{
690
694
6;
6=
6>
6?
6A
6C
6F
6G
6M0>
6N
6O
6P
6R
6R-
6T
6U
6V
6VE
6Y
6Z
6[
6\
6]
6^-
6^0
6_
6a
6a-
6b
6b.
6b1
6c
6d
6e
6e$
6e-
6e0
6e?
6e]
6eo
6f
6g-
6i
6j
6k
6k-
6l
6m
6m0
6n
6o
6q
6q%
6q)
6q0
6q1
6q:
6r
6r&
6r0
6r1
6s
6s-
6s0
6t
6u
6w
6{
6|
6}
6~
6
7
7!
7!&!
7"
7#
7$
7%
7&
7'
7(
7)
702
703
704
705
706
71
710
716
720
724
728
729
732
736
74
740
744
748
75
752
756
76
760
762
764
768
77
772
776
780
784
788
792
795
796
798
7<#
7>5?/{
7E
7I
7J
7K#>
7M
7O
7P
7Q
7Q-
7R
7R0
7S
7V
7W-
7X3
7Y
7Y-
7YO
7['
7\-
7^0
7_%
7_(
7_-
7_0
7_9
7_C
7`
7`S
7a
7b
7b0
7b1
7b6
7d
7e
7f
7h
7hI
7i-
7j
7k-
7l
7l-
7l0
7o
7p
7p-
7s
7sA
7u
7u!
7u#
7u$
7u%
7u'
7u(
7u)
7u-
7uB
7uH
7uK
7uN
7uO
7uU
7u_
7uh
7ux
7w
7w-
7x
7x-
7z
7|-
7|1
7|;
7~
8
8!
8$Gz
8&
8'
8(M$>(@8M
8*
8+|
8,
8-
8.
8.0?/
8.>0
8.>1
8.K5>
8.K5{
80
80$?
80/G5K
800
804
807
81
810
818
819
82
826
830
831
832
833
834
840
85
850
854
858
86
860
862
866
87-
876
88
882
88591
885913
885915
88592
88593
88594
88595
88596
88597
88598
88599
8859_1
8859_13
8859_15
8859_2
8859_3
8859_4
8859_5
8859_6
8859_7
8859_8
8859_9
886
887
890
891
894
89>1
8:
8<
8<}
8>
8>'>0#
8>(M$
8>(M$K
8>*M*1K8H
8>,
8>,M2Kz
8>.K5
8>5K
8>{
8>}5!K|
8>}5&K|
8?!M(?
8?(M'?
8?(M'A
8?(M1M
8?/1>
8?/B~
8?/G1>
8?1?/
8?1?/{
8?1M1?
8?1M1?,
8A
8A!>(@8M
8A!>{
8A.G1K
8A2A
8B
8C
8F
8F,A5>(K
8F/B$M$
8F/M7F}8M
8F/M{1M
8F{1M
8F{1M.
8F{1|,
8F|,?/
8F|,?/{
8F|,K-
8G
8H*M08M
8H*M08M8M
8H2?
8H2?8M
8H2K$?
8J.>2?
8J.K(?
8J.K(?8M
8J1>(?
8K$K
8K+?/
8K.>2?
8K.>2?/
8K3.{
8K5?/1M1M
8K~
8L&?
8M
8M*>(?7M
8M*F7M/}
8M/K5
8M1M1>(M1G!M
8M1M1>{!G|!M
8M2J5G(?/
8M2K5G(?/
8M2K5G(?/{
8M5>8?2>{!M
8M5>8?2>{1M
8M5>9?2?
8M5?+M1M1M
8M5?1M1M8|2>{!M
8M5?8M
8M5@!?7M
8M5@!{
8N
8N&
8N-
8N0
8N7
8NS
8N]
8O
8O$
8O1
8Q
8Q0
8R
8S
8S-
8T-
8U-
8V
8V-
8W
8W&?
8X5
8Y
8Y3
8[
8\
8\-
8\^
8^
8^0
8^1
8^F
8_
8b
8b#
8b&
8b*
8b+
8b0
8b1
8b8
8b=
8bA
8bZ
8b}
8c-
8g
8g-
8h
8h!
8h#
8h-
8i
8j-
8j0
8j:
8l
8l)
8l0
8lB
8lEN
8lH
8lZy
8lck
8lb
8ly
8m
8n
8n&
8n-
8n1
8nc
8o
8o0
8q
8r
8r-
8rk
8u
8v
8w
8x
8y-
8z
8{
8|
8}-
8
8-
9
9!
9"
9#
9#!&
9$
9%
9&
9'
9(
9(A(B
9)
9,
90
90>0F
91
912
913
914
915
920
921
923
93
958
959
95>(
95>/?-
95>/?/{
96
960
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
99
990
991
992
993
994
995
996
997
998
999
9=J2
9>+M 5?!M$M$M
9>{
9>|!M
9>|,?{
9>|,|
9?(M&?
9?/G|!M
9?}
9@,M0A
9A
9F
9F/M$?
9F/M7M/{
9F2@(
9F2F(
9F|.K8?2M2K
9H
9K
9K#2B2A
9K5M
9K{!M/A1>8M
9L!M
9M0?5M(?/
9M0?5M(?/>8M
9N
9N%
9N0
9N[O
9Nd
9Nj
9O
9P
9Q
9S
9T
9T&
9T0
9T1
9U
9V
9W8
9X
9Y|
9Z
9\1
9]
9_
9`
9a
9b
9c
9d
9e
9e0
9f
9f-
9h
9h0
9h2
9hB
9hC
9hD
9hO
9hn
9i
9i0
9j
9j0
9j2
9j8
9jO
9m
9n
9o
9p
9r
9t
9u
9v
9w
9z
9{
9{0
9|
9}-
9~-
:
:#
:%
:&
:'
:*
:-
:1
:8
:;
:=
:>
:C
:F
:H
:N
:N1
:O
:O-
:Q
:Q-
:R-
:R0
:R5
:S
:SI
:SW
:W0
:X
:X0
:XD
:]
:_
:_0
:_1
:`
:`y
:b
:c
:c:
:d
:e
:f
:g
:g>
:j
:j%
:k
:k0
:l
:n
:n0
:q
:r-
:r/
:s
:s#
:s-
:t
:u
:u!
:u%
:u&
:u)
:u-
:u.
:u0
:u1
:u2
:u3
:u4
:u=
:uK
:uZ
:ul
:u~
:v
:w
:w1
:x
:x:
:y
:y>
:y^
:z
:|
:}
:}!
:}0
:}J
:}Y
:
:+
:0
:4
;
; ]
;!
;$
;$@$E$L$S$Z$
;&
;(
;/
;1
;7
;9
;E
;J
;M
;N
;N#
;N(
;N-
;N0
;O
;P
;Q
;R
;S
;T-
;Tx
;U
;U-
;V
;W
;X
;\
;\+
;\0
;\?
;\M
;\[
;\^
;\q
;_
;a
;b
;b0
;bH
;e
;e)
;e1
;h
;i
;i-
;j
;k
;l
;m
;m!
;m"
;m0
;n
;o
;r
;s
;u0
;u1
;u9
;uW
;u]
;uf
;v
;y
;z-
;zH
;{
;|-
;~
;
<
< <
<"B"
<#
<$
<'
<-
</
<0
<3
<7
<;
<>
<@
<A
<B
<C
<G
<H
<J
<N
<O
<O-
<O0
<P
<Q
<R
<S
<S-
<T
<T
<U
<V
<Y
<Z
<Z3
<[-
<\
<\0
<\?
<\J
<]-
<^
<_
<a-
<c
<c1
<e
<f
<f0
<f1
<f2
<fW
<h
<h-
<h0
<hY
<h_
<hc
<hp
<hy
<m
<n
<o
<p
<q
<q0
<qg
<qt
<s
<u
<v
<v-
<w
<w$
<w,
<w0
<w1
<y
<y0
<y1
<yt
<z
<z0
<zb
<{0
<}
<
=
=!
="
=#
=$
=%
=&
=(
=)
=*
=,
=-A-E-
=3
=6
=9
=D
=F
=I
=J
=N
=O
=Q
=R
=S
=T
=U
=V
=V-
=W
=X
=\
=\1
=\2
=\:
=]
=^
=^-
=^/
=^0
=_
=b
=b-
=c-
=d
=d-
=e
=e-
=g
=h
=h0
=i
=j
=j0
=j:
=k-
=m-
=r
=r-
=s
=u
=u-
=v
=w
=y
=y-
=z
=z0
={
=|-
=|8
=|;
=|d
=}
=~'
=~-
=~0
=
=-
=r
>
>'
>(
>+
>-
>/
>0
>2
>3
>8
>:
>;
>C
>E
>F
>N
>N0
>Ns
>O
>PD
>S
>T
>T$
>T1
>T6
>TS
>U
>W
>Y
>Y0
>Z
>[
>\
>\!
>\#
>\$
>\%
>\,
>\-
>\/
>\0
>\1
>\6
>\8
>\<
>\A
>\V
>\[
>^
>_
>a
>a-
>c
>cI
>d
>e
>e"
>e*
>e-
>e0
>e1
>eD
>f
>g
>j
>k
>k0
>k6
>l
>l-
>m
>m#
>n
>n0
>o
>o-
>p
>p-
>r
>r#
>r+
>r.
>r0
>r1
>r;
>rq
>ry
>s-
>t/
>u
>w
>w0
>x:
>y
>y$
>y)
>y0
>{#
>|
>|"
>|1
>|9
>}
>~
>
?
?!
?#
?#A#
?#v
?$
?'
?(
?+
?-
?.
?0
?2
?4
?7
?:
??
?@
?D
?I
?J
?N
?O
?Q
?Q-
?Q0
?S-
?V
?W
?X
?Y
?]
?]-
?_
?a
?a$
?b
?b#
?b-
?b0
?bE
?bP
?b[
?b]
?by
?c
?c&
?d
?e
?e"
?e0
?e7
?ep
?f
?g
?h
?i
?i-
?i{
?j
?k
?l
?m
?o
?o0
?r
?s
?s5
?t
?t-
?u
?x
?y
?z
?z"
?z$
?z-
?zH
?{
?|'
?}
?~
?
?)
@
@ !
@ 0d
@!
@!~$.0
@"ES01
@#
@#<
@$Cp00
@$\l0
@%
@%Y_0
@&.
@'
@'eS00
@(
@(3
@)q
@*AZ00
@+
@+Bt0
@,
@-
@-NU00
@-Q0W0
@0
@1
@1*
@2
@3
@4\*s0
@5L01
@6*
@8
@8DZ00
@8^
@9Jd01
@:
@:1
@:BU0
@;>
@<Yc03
@>
@>o
@@
@A
@AN\0
@Ad
@B
@BHM0
@By
@C
@D
@Fjr00
@H
@Ji
@LDj0
@N
@NFd02
@O
@O@n00
@P
@P-
@Q
@QZZ00
@RSm02
@RVW00
@RYc0
@S
@SJh00
@T
@T-
@T2
@U
@U-
@V
@W
@W-
@X
@X-
@Xp
@Xz
@Y
@Z-
@ZO0
@ZS+T1
@Zw;\0
@[
@[p
@\
@\,
@\0
@\1
@\^7l0
@\a
@\o
@]dF0
@]y`01
@^
@^-
@^^|00
@_
@_u\00
@`
@`-
@aVY0
@ab>\
@b
@b(
@b,
@b/
@b0
@b3
@b5
@b7
@b<
@bFh01
@bT
@bUu00
@b`
@bn
@c-
@f
@g
@g/
@g0
@gjj0
@gl
@h
@h-
@hRJS0
@hY-N1
@hg
@jK
@jQ*j0
@jwq00
@l-
@l0
@mqZ0
@mr_00
@nA~N0
@nt
@o
@oMN0
@pai0
@pk]N
@qBn00
@qC]y0
@r
@rHwm0
@rp]N0
@s
@t
@u
@u`V0
@v
@w
@w$
@w)
@w/
@w0
@w2
@w9
@wX}00
@wg
@wxqg0
@y-
@yI_00
@z
@zI
@za
@{
@|
@|,
@|BQ0&
@|E5_0
@|f00
@}
@}iK0
@}w
@~n
@^y02
A
A!
A"
A#
A$
A%
A'
A(
A0-
A1
A9
A=
AAA
AALAND
ABW
AC
ACE_PREFIX
AD
ADP
AE
AED
AF
AFA
AFG
AFN
AG
AGO
AH
AI
AIA
AKDT
AL
ALA
ALALC97
ALB
ALK
ALL
ALUKU
ALetter
AM
AMD
AN
ANAST
ANAT
AND
ANG
ANSI1251
ANSI_X3.4-1968
ANSI_X3.4-1986
ANT
ANY
AO
AOA
AOK
AON
AOR
AP
AQ
AR
ARA
ARE
AREVELA
AREVMDA
ARG
ARL
ARM
ARP
ARS
AS
AS)
AS.
AS0
AS1
ASC
ASCII
ASCII_Hex_Digit
ASM
ASMO-708
ASSIGNED
AT
ATA
ATF
ATG
ATS
ATerm
AU
AUD
AUS
AUS Central Standard Time
AUS Eastern Standard Time
AUT
AV
AW
AWG
AX
AYM
AZ
AZE
AZM
AZN
AZOST
AZOT
AZST
AZT
A[
A\
A\0
A^
A_
A`-
Aa
Ab
Above
Above_Left
Above_Right
Ac
Acre
Ad
Ae
Aegean_Numbers
Af-
Afak
Afghanistan
Afghanistan Standard Time
Africa/Algiers
Africa/Casablanca
Africa/El_Aaiun
Africa/Tripoli
Africa/Windhoek
Africa:Abidjan
Africa:Accra
Africa:Addis_Ababa
Africa:Algiers
Africa:Asmara
Africa:Asmera
Africa:Bamako
Africa:Bangui
Africa:Banjul
Africa:Bissau
Africa:Blantyre
Africa:Brazzaville
Africa:Bujumbura
Africa:Cairo
Africa:Casablanca
Africa:Ceuta
Africa:Conakry
Africa:Dakar
Africa:Dar_es_Salaam
Africa:Djibouti
Africa:Douala
Africa:El_Aaiun
Africa:Freetown
Africa:Gaborone
Africa:Harare
Africa:Johannesburg
Africa:Juba
Africa:Kampala
Africa:Khartoum
Africa:Kigali
Africa:Kinshasa
Africa:Lagos
Africa:Libreville
Africa:Lome
Africa:Luanda
Africa:Lubumbashi
Africa:Lusaka
Africa:Malabo
Africa:Maputo
Africa:Maseru
Africa:Mbabane
Africa:Mogadishu
Africa:Monrovia
Africa:Nairobi
Africa:Ndjamena
Africa:Niamey
Africa:Nouakchott
Africa:Ouagadougou
Africa:Porto-Novo
Africa:Sao_Tome
Africa:Timbuktu
Africa:Tripoli
Africa:Tunis
Africa:Windhoek
Africa_Central
Africa_Eastern
Africa_FarWestern
Africa_Southern
Africa_Western
Ag
Age
Aghb
Ain
Aj
Ak-
Aktyubinsk
Al&
Al1
Alaph
Alaska
Alaska_Hawaii
Alaskan Standard Time
Alchemical_Symbols
Alef
Alphabetic
Alphabetic_Presentation_Forms
Am
Am"
Am#
Am&
Am+
Am0
Am?
AmPmMarkers
AmPmMarkersNarrow
AmV
Amazon
Ambiguous
America/Asuncion
America/Cuiaba
America/Godthab
America/Guatemala
America/Havana
America/Miquelon
America/Montevideo
America/Scoresbysund
America/St_Johns
America:Adak
America:Anchorage
America:Anguilla
America:Antigua
America:Araguaina
America:Argentina:Buenos_Aires
America:Argentina:Catamarca
America:Argentina:ComodRivadavia
America:Argentina:Cordoba
America:Argentina:Jujuy
America:Argentina:La_Rioja
America:Argentina:Mendoza
America:Argentina:Rio_Gallegos
America:Argentina:Salta
America:Argentina:San_Juan
America:Argentina:San_Luis
America:Argentina:Tucuman
America:Argentina:Ushuaia
America:Aruba
America:Asuncion
America:Atikokan
America:Atka
America:Bahia
America:Bahia_Banderas
America:Barbados
America:Belem
America:Belize
America:Blanc-Sablon
America:Boa_Vista
America:Bogota
America:Boise
America:Buenos_Aires
America:Cambridge_Bay
America:Campo_Grande
America:Cancun
America:Caracas
America:Catamarca
America:Cayenne
America:Cayman
America:Chicago
America:Chihuahua
America:Coral_Harbour
America:Cordoba
America:Costa_Rica
America:Creston
America:Cuiaba
America:Curacao
America:Danmarkshavn
America:Dawson
America:Dawson_Creek
America:Denver
America:Detroit
America:Dominica
America:Edmonton
America:Eirunepe
America:El_Salvador
America:Ensenada
America:Fort_Wayne
America:Fortaleza
America:Glace_Bay
America:Godthab
America:Goose_Bay
America:Grand_Turk
America:Grenada
America:Guadeloupe
America:Guatemala
America:Guayaquil
America:Guyana
America:Halifax
America:Havana
America:Hermosillo
America:Indiana:Indianapolis
America:Indiana:Knox
America:Indiana:Marengo
America:Indiana:Petersburg
America:Indiana:Tell_City
America:Indiana:Vevay
America:Indiana:Vincennes
America:Indiana:Winamac
America:Indianapolis
America:Inuvik
America:Iqaluit
America:Jamaica
America:Jujuy
America:Juneau
America:Kentucky:Louisville
America:Kentucky:Monticello
America:Knox_IN
America:Kralendijk
America:La_Paz
America:Lima
America:Los_Angeles
America:Louisville
America:Lower_Princes
America:Maceio
America:Managua
America:Manaus
America:Marigot
America:Martinique
America:Matamoros
America:Mazatlan
America:Mendoza
America:Menominee
America:Merida
America:Metlakatla
America:Mexico_City
America:Miquelon
America:Moncton
America:Monterrey
America:Montevideo
America:Montreal
America:Montserrat
America:Nassau
America:New_York
America:Nipigon
America:Nome
America:Noronha
America:North_Dakota:Beulah
America:North_Dakota:Center
America:North_Dakota:New_Salem
America:Ojinaga
America:Panama
America:Pangnirtung
America:Paramaribo
America:Phoenix
America:Port-au-Prince
America:Port_of_Spain
America:Porto_Acre
America:Porto_Velho
America:Puerto_Rico
America:Rainy_River
America:Rankin_Inlet
America:Recife
America:Regina
America:Resolute
America:Rio_Branco
America:Rosario
America:Santa_Isabel
America:Santarem
America:Santiago
America:Santo_Domingo
America:Sao_Paulo
America:Scoresbysund
America:Shiprock
America:Sitka
America:St_Barthelemy
America:St_Johns
America:St_Kitts
America:St_Lucia
America:St_Thomas
America:St_Vincent
America:Swift_Current
America:Tegucigalpa
America:Thule
America:Thunder_Bay
America:Tijuana
America:Toronto
America:Tortola
America:Vancouver
America:Virgin
America:Whitehorse
America:Winnipeg
America:Yakutat
America:Yellowknife
America_Central
America_Eastern
America_Mountain
America_Pacific
Amx
An
Ancient_Greek_Musical_Notation
Ancient_Greek_Numbers
Ancient_Symbols
Antarctica:Casey
Antarctica:Davis
Antarctica:DumontDUrville
Antarctica:Macquarie
Antarctica:Mawson
Antarctica:McMurdo
Antarctica:Palmer
Antarctica:Rothera
Antarctica:South_Pole
Antarctica:Syowa
Antarctica:Troll
Antarctica:Vostok
Ao
Aq
Aq-
Ar
Ar-
Arab
Arab Standard Time
Arabian
Arabian Standard Time
Arabic
Arabic Standard Time
Arabic_Extended_A
Arabic_Letter
Arabic_Mathematical_Alphabetic_Symbols
Arabic_Number
Arabic_Presentation_Forms-A
Arabic_Presentation_Forms_A
Arabic_Presentation_Forms_B
Arabic_Supplement
Arctic:Longyearbyen
Argentina
Argentina Standard Time
Argentina_Western
Armenia
Armenian
Armi
Armn
Arrows
Ashkhabad
Asia/Anadyr
Asia/Baghdad
Asia/Baku
Asia/Choibalsan
Asia/Hovd
Asia/Irkutsk
Asia/Jerusalem
Asia/Kamchatka
Asia/Krasnoyarsk
Asia/Magadan
Asia/Novosibirsk
Asia/Omsk
Asia/Sakhalin
Asia/Ulaanbaatar
Asia/Vladivostok
Asia/Yakutsk
Asia/Yekaterinburg
Asia/Yerevan
Asia:Aden
Asia:Almaty
Asia:Amman
Asia:Anadyr
Asia:Aqtau
Asia:Aqtobe
Asia:Ashgabat
Asia:Ashkhabad
Asia:Baghdad
Asia:Bahrain
Asia:Baku
Asia:Bangkok
Asia:Beirut
Asia:Bishkek
Asia:Brunei
Asia:Calcutta
Asia:Choibalsan
Asia:Chongqing
Asia:Chungking
Asia:Colombo
Asia:Dacca
Asia:Damascus
Asia:Dhaka
Asia:Dili
Asia:Dubai
Asia:Dushanbe
Asia:Gaza
Asia:Harbin
Asia:Hebron
Asia:Ho_Chi_Minh
Asia:Hong_Kong
Asia:Hovd
Asia:Irkutsk
Asia:Istanbul
Asia:Jakarta
Asia:Jayapura
Asia:Jerusalem
Asia:Kabul
Asia:Kamchatka
Asia:Karachi
Asia:Kashgar
Asia:Kathmandu
Asia:Katmandu
Asia:Khandyga
Asia:Kolkata
Asia:Krasnoyarsk
Asia:Kuala_Lumpur
Asia:Kuching
Asia:Kuwait
Asia:Macao
Asia:Macau
Asia:Magadan
Asia:Makassar
Asia:Manila
Asia:Muscat
Asia:Nicosia
Asia:Novokuznetsk
Asia:Novosibirsk
Asia:Omsk
Asia:Oral
Asia:Phnom_Penh
Asia:Pontianak
Asia:Pyongyang
Asia:Qatar
Asia:Qyzylorda
Asia:Rangoon
Asia:Riyadh
Asia:Saigon
Asia:Sakhalin
Asia:Samarkand
Asia:Seoul
Asia:Shanghai
Asia:Singapore
Asia:Taipei
Asia:Tashkent
Asia:Tbilisi
Asia:Tehran
Asia:Tel_Aviv
Asia:Thimbu
Asia:Thimphu
Asia:Tokyo
Asia:Ujung_Pandang
Asia:Ulaanbaatar
Asia:Ulan_Bator
Asia:Urumqi
Asia:Ust-Nera
Asia:Vientiane
Asia:Vladivostok
Asia:Yakutsk
Asia:Yekaterinburg
Asia:Yerevan
Assigned
At
Atlantic
Atlantic Standard Time
Atlantic/Azores
Atlantic/Stanley
Atlantic:Azores
Atlantic:Bermuda
Atlantic:Canary
Atlantic:Cape_Verde
Atlantic:Faeroe
Atlantic:Faroe
Atlantic:Jan_Mayen
Atlantic:Madeira
Atlantic:Reykjavik
Atlantic:South_Georgia
Atlantic:St_Helena
Atlantic:Stanley
Attached_Above
Attached_Above_Right
Attached_Below
Attached_Below_Left
Australia/Eucla
Australia/Lord_Howe
Australia/South
Australia/Sydney
Australia/West
Australia:ACT
Australia:Adelaide
Australia:Brisbane
Australia:Broken_Hill
Australia:Canberra
Australia:Currie
Australia:Darwin
Australia:Eucla
Australia:Hobart
Australia:LHI
Australia:Lindeman
Australia:Lord_Howe
Australia:Melbourne
Australia:NSW
Australia:North
Australia:Perth
Australia:Queensland
Australia:South
Australia:Sydney
Australia:Tasmania
Australia:Victoria
Australia:West
Australia:Yancowinna
Australia_Central
Australia_CentralWestern
Australia_Eastern
Australia_Western
Av
Avestan
Avst
Ay
Azer
Azerbaijan
Azerbaijan Standard Time
Azores Standard Time
A{
A}
A~
A~0
A~=
A~SOW[
A~SOW[)
B
B!
B$
B%m
B&
B'
B*
B,
B-
B.
B0
B0*
B02
B1
B5
B;
B>
BA
BAD
BAKU1926
BAM
BAN
BAUDDHA
BB
BBD
BC
BD
BDI
BDT
BE
BEC
BEF
BEL
BEN
BES
BF
BFA
BG
BGD
BGL
BGM
BGN
BGO
BGR
BH
BHD
BHR
BHS
BI
BIF
BIH
BISCAYAN
BISKE
BJ
BL
BLM
BLR
BLZ
BM
BMD
BMU
BN
BN-
BND
BO
BOB
BOCU-1
BOHORIC
BOL
BOONT
BOP
BOV
BP
BQ
BR
BR@
BRA
BRB
BRC
BRE
BRL
BRN
BRR
BRST
BRT
BRZ
BS
BSD
BST
BT
BT(
BT,
BT0
BTN
BTd
BTx
BU
BUK
BUR
BV
BVT
BW
BW,
BW0
BW2
BWA
BWP
BWi
BY
BYB
BYR
BZ
BZD
B\
B\-
B]
Ba
Bahia Standard Time
Bali
Balinese
Bamu
Bamum
Bamum_Supplement
Bangladesh
Bangladesh Standard Time
Basic_Latin
Bass
Batak
Batk
Bb
Bc
Bd
Bd(
Beh
Below
Below_Left
Below_Right
Beng
Bengali
Bering
Beth
Bf
Bf$
Bf(
Bf0
Bf1
Bf2
Bf@S
Bf_
Bfm
Bfq
Bfs
Bg0
Bh
Bh0
BhV
Bhutan
Bi
Bidi_Class
Bidi_Control
Bidi_Mirrored
Bidi_Mirroring_Glyph
Bidi_Paired_Bracket
Bidi_Paired_Bracket_Type
Big5
Big5-HKSCS
Bl
Bl/
Bl0
Bl1
Blis
Block
Block_Elements
Bm
Bolivia
Bopo
Bopomofo
Bopomofo_Extended
Borneo
Boundary_Neutral
Box_Drawing
Br
Brah
Brahmi
Brai
Braille
Braille_Patterns
Brasilia
Brazil
Brazil/East
Brazil:Acre
Brazil:DeNoronha
Brazil:East
Brazil:West
Break Iterator
Break_After
Break_Before
Break_Both
Break_Symbols
British
Bs-
Bt
Bugi
Buginese
Buhd
Buhid
Burushaski_Yeh_Barree
Bv
Bv-
Bv[
Bw
By
Byzantine_Musical_Symbols
Bz
Bz-
Bz0
Bz7
Bz9
BzE
BzP
BzU
BzZ
Bzg
Bzm
B}-
B}0
B}1
C
C!
C"
C#
C$
C%
C&
C-Eur
C/
C/G/K/O/S/W/[/_/c/
C4
C5
C8
C9
C<
C=
C>
C?
C@
CA
CAD
CAF
CAN
CANONICALIZE_MAP
CB
CC
CCC10
CCC103
CCC107
CCC11
CCC118
CCC12
CCC122
CCC129
CCC13
CCC130
CCC132
CCC133
CCC14
CCC15
CCC16
CCC17
CCC18
CCC19
CCC20
CCC21
CCC22
CCC23
CCC24
CCC25
CCC26
CCC27
CCC28
CCC29
CCC30
CCC31
CCC32
CCC33
CCC34
CCC35
CCC36
CCC84
CCC91
CCK
CD
CDF
CEST
CESU-8
CET
CF
CG
CH
CHADT
CHAST
CHC
CHE
CHF
CHL
CHN
CHOST
CHOT
CHW
CI
CIV
CJ
CJK_Compatibility
CJK_Compatibility_Forms
CJK_Compatibility_Ideographs
CJK_Compatibility_Ideographs_Supplement
CJK_Radicals_Supplement
CJK_Strokes
CJK_Symbols_And_Punctuation
CJK_Unified_Ideographs
CJK_Unified_Ideographs_Extension_A
CJK_Unified_Ideographs_Extension_B
CJK_Unified_Ideographs_Extension_C
CJK_Unified_Ideographs_Extension_D
CK
CL
CLDRVersion
CLE
CLF
CLP
CLST
CLT
CM
CMR
CN
CN"
CN)
CN0
CN2
CN8
CNS_11643_1992_Plane_1_STR
CNS_11643_1992_Plane_2_STR
CNS_11643_1992_Plane_3_STR
CNS_11643_1992_Plane_4_STR
CNS_11643_1992_Plane_5_STR
CNS_11643_1992_Plane_6_STR
CNS_11643_1992_Plane_7_STR
CNX
CNY
CO
CO0
COD
COG
COK
COL
COM
COMPOUND_TEXT
COP
COU
COUNTRIES
COUNTRIES_3
CP
CP936
CPT
CPV
CQ
CQ-
CQ-N
CQ0
CQ8l
CQ>
CQEN
CQI
CQva
CQy
CR
CR-
CRC
CRI
CS
CS"
CS#
CS'
CS-
CS0
CS1
CS5
CSD
CSJ
CSK
CST
CST6CDT
CSWTCH.200
CSWTCH.207
CSWTCH.53
CSWTCH.60
CS]
CS^
CS~
CT
CU
CU-
CUB
CUC
CUP
CUW
CV
CVE
CW
CWST
CX
CXR
CXXABI_1.3
CY
CYM
CYP
CZ
CZE
CZK
C[
C[0
C]
C^-
C_-
C`
Cakm
Canada
Canada Central Standard Time
Canada/Atlantic
Canada/Saskatchewan
Canada:Atlantic
Canada:Central
Canada:East-Saskatchewan
Canada:Eastern
Canada:Mountain
Canada:Newfoundland
Canada:Pacific
Canada:Saskatchewan
Canada:Yukon
Canadian_Aboriginal
Canadian_Syllabics
Canonical
Canonical_Combining_Class
Cans
Cape Verde Standard Time
Cari
Carian
Carriage_Return
Case_Folding
Case_Ignorable
Case_Sensitive
Cased
Cased_Letter
Caucasus Standard Time
Cb
Cc
Cd
Ce
Cen. Australia Standard Time
Central America Standard Time
Central Brazilian Standard Time
Central Europe Standard Time
Central European Standard Time
Central Pacific Standard Time
Central Standard Time (Mexico)
Cf
Cf$
Cf0
Cg
Cg#
Cg$
Cg0
Cg1
Ch
Ch0
Ch1
Ch4
Chakma
Cham
Chamorro
Changbai
Changes_When_Casefolded
Changes_When_Casemapped
Changes_When_Lowercased
Changes_When_NFKC_Casefolded
Changes_When_Titlecased
Changes_When_Uppercased
Chatham
Cher
Cherokee
Chile
Chile/Continental
Chile/EasterIsland
Chile:Continental
Chile:EasterIsland
ChileAQ
China
China Standard Time
Circle
Cirt
Ck
Cl
Close
Close_Parenthesis
Close_Punctuation
CmnDFuncs
Cn
Cn-
Co
Colombia
Combining_Diacritical_Marks
Combining_Diacritical_Marks_For_Symbols
Combining_Diacritical_Marks_Supplement
Combining_Half_Marks
Combining_Mark
Combining_Marks_For_Symbols
Common
Common_Indic_Number_Forms
Common_Separator
Compat
Complex_Context
Conditional_Japanese_Starter
Connector_Punctuation
Contingent_Break
Control
Control_Pictures
Cook
Copt
Coptic
Copyright (C) 2013, International Business Machines Corporation and others. All Rights Reserved.
Counting_Rod_Numerals
Countries
CountriesShort
Cp
Cprt
Cq
Cr
Cs
Ct
Cu
Cuba
Cuneiform
Cuneiform_Numbers_And_Punctuation
Currencies
CurrenciesNarrow
CurrencyMap
CurrencyMeta
CurrencyPlurals
CurrencyUnitPatterns
Currency_Symbol
Currency_Symbols
Cv
Cx
Cypriot
Cypriot_Syllabary
Cyrillic
Cyrillic_Extended_A
Cyrillic_Extended_B
Cyrillic_Supplement
Cyrillic_Supplementary
Cyrl
Cyrs
Cz
C|
C|0
C}0
C~
C
C-
D
D "
D 1
D 2
D 3
D 4
D 5
D 6
D 7
D 8
D 9
D!
D"
D$
D&
D'
D+
D-
D0
D0"
D0(
D0-
D00
D05
D0;
D0A W0
D0R
D1
D2
D5
D7
D;
D@
DAJNKO
DATA_NAME
DATA_TYPE
DC
DD
DDM
DDR
DE
DEFAULT
DEM
DEPRECATEDLANGS
DEPRECATED_COUNTRIES
DEPRECATED_LANGUAGES
DEU
DF
DG
DGA
DIGITS
DJ
DJF
DJI
DK
DKK
DM
DMA
DN
DNK
DO
DOM
DOP
DP
DR
DT
DU-
DU7
DV
DY
DY-
DZ
DZA
DZD
D\-
D_
Da
Da-
Dacca
Dal
Dalath_Rish
Dao
Dash
Dash_Punctuation
DataCacheElement_deleter(void*)
DataVersion
DateTimePatterns
Dateline Standard Time
Day
Day-Of-Week
Db
Dc
Decimal
Decimal_Number
Decomposition_Type
Default_Ignorable_Code_Point
Deprecated
Deseret
Deva
Devanagari
Devanagari_Extended
Df
Dh
Di-
Diacritic
Digit
Dingbats
Dj
Dm
Dm-
Dm0
Dn
Dominican
Domino_Tiles
Double_Above
Double_Below
Double_Quote
Dp
Dq
Dr
Ds
Ds-
Ds1
Dsrt
Dt
Du
Dual_Joining
Dupl
Dutch_Guiana
Dv
Dw-
Dx
Dy
Dy-
Dy7
Dz
D{-
D}
D}!
D};
D~
D
E
E!
E"
E"H"
E#
E$
E&
E'
E(
E-P.
E. Africa Standard Time
E. Australia Standard Time
E. South America Standard Time
E0
E1
E1K1
E2
E8
E9
E@
EA
EASST
EAST
EC
ECMA-114
ECMA-118
ECMA-128
ECS
ECU
ECV
ED
EE
EEK
EEST
EET
EG
EGP
EGST
EGT
EGY
EH
EHm
EHms
ELOT_928
EMODENG
EMPTY
EN
EN!
EN&
EN'
EN)
EN0
EN1
EN@
ENI
ENK
ENT
EP
EP-
EQ
EQE
ER
ERI
ERN
ES
ES-
ESA
ESB
ESH
ESP
EST
EST5EDT
ET
ET-
ETB
ETH
EU
EUAsia
EUC-CN
EUC-JP
EUC-KR
EUR
EV-
EW
EY
EZ
E[
E\
E\"
E\%
E\,
E\-
E\0
E\1
E\2
E\3
E\<
E\>
E\I
E\O
E]
E^
E^@
E^H
E^J
E^{
E_
Ea
East_Asian_Width
East_Timor
Ecuador
Ee
Ee!
Ee-
Eek
Ef
Eg
Eg-
Egyd
Egyh
Egyp
Egypt
Egypt Standard Time
Egyptian_Hieroglyphs
Eh
Ehm
Ehms
Ei
Ej
Ek-
Ekaterinburg Standard Time
Elba
Ellipsis
Em
Em0
Em>
Emoticons
En
Enclosed_Alphanumeric_Supplement
Enclosed_Alphanumerics
Enclosed_CJK_Letters_And_Months
Enclosed_Ideographic_Supplement
Enclosing_Mark
Eo
Eq
Er
Era
Es
EsP[q\
Etc:GMT
Etc:GMT+0
Etc:GMT+1
Etc:GMT+10
Etc:GMT+11
Etc:GMT+12
Etc:GMT+2
Etc:GMT+3
Etc:GMT+4
Etc:GMT+5
Etc:GMT+6
Etc:GMT+7
Etc:GMT+8
Etc:GMT+9
Etc:GMT-0
Etc:GMT-1
Etc:GMT-10
Etc:GMT-11
Etc:GMT-12
Etc:GMT-13
Etc:GMT-14
Etc:GMT-2
Etc:GMT-3
Etc:GMT-4
Etc:GMT-5
Etc:GMT-6
Etc:GMT-7
Etc:GMT-8
Etc:GMT-9
Etc:GMT0
Etc:Greenwich
Etc:UCT
Etc:UTC
Etc:Universal
Etc:Unknown
Etc:Zulu
Ethi
Ethiopic
Ethiopic_Extended
Ethiopic_Extended_A
Ethiopic_Supplement
Europe/Athens
Europe/Dublin
Europe/London
Europe/Moscow
Europe/Samara
Europe/Volgograd
Europe:Amsterdam
Europe:Andorra
Europe:Athens
Europe:Belfast
Europe:Belgrade
Europe:Berlin
Europe:Bratislava
Europe:Brussels
Europe:Bucharest
Europe:Budapest
Europe:Busingen
Europe:Chisinau
Europe:Copenhagen
Europe:Dublin
Europe:Gibraltar
Europe:Guernsey
Europe:Helsinki
Europe:Isle_of_Man
Europe:Istanbul
Europe:Jersey
Europe:Kaliningrad
Europe:Kiev
Europe:Lisbon
Europe:Ljubljana
Europe:London
Europe:Luxembourg
Europe:Madrid
Europe:Malta
Europe:Mariehamn
Europe:Minsk
Europe:Monaco
Europe:Moscow
Europe:Nicosia
Europe:Oslo
Europe:Paris
Europe:Podgorica
Europe:Prague
Europe:Riga
Europe:Rome
Europe:Samara
Europe:San_Marino
Europe:Sarajevo
Europe:Simferopol
Europe:Skopje
Europe:Sofia
Europe:Stockholm
Europe:Tallinn
Europe:Tirane
Europe:Tiraspol
Europe:Uzhgorod
Europe:Vaduz
Europe:Vatican
Europe:Vienna
Europe:Vilnius
Europe:Volgograd
Europe:Warsaw
Europe:Zagreb
Europe:Zaporozhye
Europe:Zurich
Europe_Central
Europe_Eastern
Europe_Western
European_Number
European_Separator
European_Terminator
Ev
Ew
Ex
Ex6
Exclamation
ExemplarCharactersIndex
ExemplarCharactersPunctuation
Extend
ExtendNumLet
Extended_UNIX_Code_Packed_Format_for_Japanese
Extender
Ey
Ez
E{-
E|
E}
E~
E
F
F!
F#
F%
F'
F)
F-
F0
F0#
F0)
F0++n01
F0-
F0.
F01
F05
F0;
F0H
F0\
F0k
F0n
F0p
F3
F4
F8
F;
F=
F>
FA
FC
FE
FG
FI
FIM
FIN
FJ
FJD
FJI
FK
FKP
FKST
FKT
FL
FL"
FLE Standard Time
FLK
FM
FO
FO(
FO-
FONIPA
FONUPA
FONXSAMP
FP
FQ
FR
FR-
FRA
FRF
FRO
FSM
FT
FU
FV
FW
FX
FXX
FY
FZ
FZ$
FZ-
FZ0
FZ1
F\
F]
F_
F`
Fa
Falkland
Fallback
False
Farsi_Yeh
Fb
Fb-
Fc
Fd
Fe
Feh
Ff
Fg
Fg\
Fh
Fiji
Fiji Standard Time
Final
Final_Punctuation
Final_Semkath
First_Strong_Isolate
Fj
Fj-
Fk
Fl
Fm0
Fm1
Font
Format
Fp
Fq
Fq-
Fr
Fr-
Fraction
French_Guiana
French_Southern
Frunze
Ft
Fu
Full_Composition_Exclusion
Fullwidth
Fv-
Fw
Fy
Fz
Fz-
F{
F{!
F{.
F{0
F{1
F|
F}
F~
G
G!
G%
G&
G(
G,
G-I-K-N-Q-S-U-
G/
G1
G4
G5
G6
G7
G=
G>
GA
GAB
GB
GB-Eire
GB18030
GB2312
GBK
GBP
GBR
GB_2312-80
GB_2312_80_STR
GCC: (crosstool-NG 1.17.0) 4.6.3
GD
GE
GEK
GEL
GEO
GF
GG
GGGGyMMMMEEEEdd
GGY
GH
GHA
GHC
GHP
GHS
GI
GIB
GIN
GIP
GK
GL
GLIBCXX_3.4
GLIBC_2.14
GLIBC_2.2.5
GLIBC_2.3.2
GLP
GM
GMB
GMD
GMT
GMT Standard Time
GN
GN-
GNB
GNF
GNQ
GNS
GNU
GO
GP
GP-
GP0
GQ
GQE
GR
GR0
GR1
GRANDFATHERED
GRC
GRD
GRH
GRL
GRN
GS
GS&
GS-
GS0
GT
GTB Standard Time
GTM
GTQ
GU
GUF
GUM
GUY
GW
GW1
GW4
GW<
GWE
GWP
GY
GY!
GY-
GY0
GYD
GZ
G[-
G]
G^
G^A
G_
G`
Ga-
Gaf
Gamal
Gb
Gb#
Gb-
Gd
Gd0
Ge
General_Category
General_Category_Mask
General_Punctuation
Geok
Geometric_Shapes
Geor
Georgian
Georgian Standard Time
Georgian_Supplement
Gf
Gg
Gilbert_Islands
Gj-
Gk
GkI
Glag
Glagolitic
Glue
Gm0
Gn
Goth
Gothic
Gq
Gq
Gr
Gr$
Gr)
Gr,
Gr0
Gr1
Gr3
Gr7
Gr8
GrGPT
GrZ
Gran
Grapheme_Base
Grapheme_Cluster_Break
Grapheme_Extend
Grapheme_Link
Greek
Greek_And_Coptic
Greek_Extended
Greenland Standard Time
Greenland_Central
Greenland_Eastern
Greenland_Western
Greenwich Standard Time
Grek
Gt
Gu
Gu-
Gujarati
Gujr
Gulf
Gurmukhi
Guru
Gw
Gw@@
Gx
Gy
Gy-
Gy>
GyM
GyMMM
GyMMMEEEEd
GyMMMEd
GyMMMM
GyMMMMEd
GyMMMMd
GyMMMd
GyMd
Gyw
Gz
G{
G|-
G}
G~
G
H
H!
H"N"
H#
H$
H%
H&
H'
H+
H0
H0!
H0$
H0*
H00
H0?#Q00
H0A
H0B
H0Q
H0U
H0h
H0
H1
H2
H3
H5
H6
H8
H9
H?
HC
HE
HEPBURN
HEPLOC
HF
HHmm
HHmmZ
HHmmss
HK
HKD
HKG
HKSCS-BIG5
HM
HMD
HN
HND
HNL
HO
HOGNORSK
HOVST
HOVT
HP
HQ
HR
HRD
HRK
HRV
HS0
HSMR
HSMR/
HST
HT
HT(
HT-
HTG
HTI
HU
HUF
HUN
HV
HV-
HX-
HY
HY0
HYPHEN_RIGHT_BRACE
HZ
HZ-GB-2312
H[
H\
H\,
H\2
H]
H_
H_-
H_0
H_8
H`
Ha
HaA
Hah
Haiti
Halfwidth
Halfwidth_And_Fullwidth_Forms
Hamza_On_Heh_Goal
Han
Hang
Hangul
Hangul_Compatibility_Jamo
Hangul_Jamo
Hangul_Jamo_Extended_A
Hangul_Jamo_Extended_B
Hangul_Syllable_Type
Hangul_Syllables
Hani
Hano
Hans
Hant
Hanunoo
Hawaii_Aleutian
Hawaiian Standard Time
He
He-
HeP
Hebr
Hebrew
Hebrew_Letter
Heh
Heh_Goal
Heth
Hex_Digit
Hey
Hg
Hh
Hh-
Hh0
Hh1
HhU
Hi-
High_Private_Use_Surrogates
High_Surrogates
Hira
Hiragana
Hj
Hluw
Hmng
Hmv
Hn
Ho
Hongkong
Hour
Hp
Hp-
Hr
HrB
Hrkt
Hu
Hung
Hv
Hx
Hx-
Hy
Hyphen
Hz
H{-
H{.
H}
H
I
I!
I"
I#
I%
I'
I(
I:
I?
IANA
IB
IBM
IBM-943C
IBM367
IBM819
IBM866
IC
ICUDATA
ICUDATA-
ICUVersion
ICU_DATA
ID
IDN
IDR
IDS_Binary_Operator
IDS_Trinary_Operator
IDT
ID_Continue
ID_Start
IE
IEP
IH
II
IL
ILP
ILR
ILS
IM
IMAP-mailbox-name
IMN
IN
IN1
IND
INR
IO
IOT
IP
IPA_Extensions
IQ
IQ$
IQ%
IQ(
IQ*
IQ+
IQ-
IQ0
IQD
IQH
IR
IR-
IRKST
IRKT
IRL
IRN
IRQ
IRR
IS
ISCII
ISJ
ISK
ISL
ISO-10646-UCS-2
ISO-10646-UCS-4
ISO-2022-CN
ISO-2022-CN-EXT
ISO-2022-JP
ISO-2022-KR
ISO-8859-1
ISO-8859-10
ISO-8859-11
ISO-8859-13
ISO-8859-14
ISO-8859-15
ISO-8859-16
ISO-8859-2
ISO-8859-3
ISO-8859-4
ISO-8859-5
ISO-8859-6
ISO-8859-6-E
ISO-8859-6-I
ISO-8859-7
ISO-8859-8
ISO-8859-8-E
ISO-8859-8-I
ISO-8859-9
ISO646-US
ISO8859_7
ISO_2022
ISO_2022,locale=ja,version=0
ISO_2022,locale=ko,version=0
ISO_2022,locale=zh,version=0
ISO_2022,locale=zh,version=1
ISO_2022_CN
ISO_2022_JP
ISO_2022_KR
ISO_646.irv:1991
ISO_8859-10:1992
ISO_8859-14:1998
ISO_8859-16:2001
ISO_8859-1:1987
ISO_8859-2:1987
ISO_8859-3:1988
ISO_8859-4:1988
ISO_8859-5:1988
ISO_8859-6:1987
ISO_8859-7:1987
ISO_8859-8:1988
ISO_8859-9:1989
ISO_Comment
ISO_IR_165_STR
ISR
IST
IT
ITA
ITIHASA
ITL
ITM
IU
IV
IW-
IX
IY
IY0
IZ
I]-
I^
I`
Ia
Ib
Ic
Iceland
Ic
Ideographic
Ideographic_Description_Characters
Ie
Iey
If
If-
Ig
Ig1
Ig[
Igx
Ih
Ii
Ij
Ik
Il0
Il1
IlW[
Imperial_Aramaic
In
In-
India
India Standard Time
Indian:Antananarivo
Indian:Chagos
Indian:Christmas
Indian:Cocos
Indian:Comoro
Indian:Kerguelen
Indian:Mahe
Indian:Maldives
Indian:Mauritius
Indian:Mayotte
Indian:Reunion
Indian_Ocean
Indochina
Indonesia_Central
Indonesia_Eastern
Indonesia_Western
Inds
Infix_Numeric
Inherited
Initial
Initial_Punctuation
Inscriptional_Pahlavi
Inscriptional_Parthian
Inseparable
Inseperable
InstalledLocales
Iota_Subscript
Ip
Iq
Iq0
Iran
Iran Standard Time
Irish
IrrelevantPos
Is-
Isolated
Israel
Israel Standard Time
Ital
Iu-
Iv
Iy
Iz
I{
I{0
I{6
I{b
I{i
I~
J
J$!
J'
J*
J+
J0
J0!
J0'
J0)
J0*
J00
J01
J02
J07
J0<
J0>
J0W
J0m
J0t
J1
J;
J<!
JA
JAM
JAUER
JAVA
JC
JE
JEF
JEY
JF
JIPS
JJ
JL
JM
JMD
JO
JOD
JOR
JP
JPN
JPY
JQ
JR-
JS
JS!
JS)
JS0
JS2
JS[
JSb_
JT
JT0
JU
JU-
JV
JW
JW(
JW*
JW-
JW0
JW;
JX
JX-
JX2
JXm
JY
JYUTPING
JZ
J\
J\-
J\9
J]
J^-
J_
J`-
Ja
Ja-
Japan
Java
Javanese
Jc
Jc!
Je
Jf
Jg!
Jh
Ji
Ji0
Jj
Jk
Jl
Jl!
Jl-
Jm"
Jn
Jn0
Join_Causing
Join_Control
Joining_Group
Joining_Type
Jordan
Jordan Standard Time
Jp
Jpan
Jq
Js
Jt-
Jurc
Jv
Jw
Jw-
Jx
Jy
Jz-
J|
J}
J~
J~!
J~'
J~-
J-
K
K!
K"
K#
K$
K%
K&
K'
K(
K.
K0
K0!
K0"
K0#
K0$'O0
K0%
K0'
K0)
K0+
K00
K01
K03
K0:
K0D
K0M
K0U
K0[
K0p
K1
K4
K=
K@
KAZ
KD
KE
KEIS
KEN
KES
KF
KG
KGS
KGZ
KH
KHM
KHR
KI
KIR
KKCOR
KM
KMF
KN
KN$
KN&
KN/
KN0
KN1
KN8
KNA
KNB
KO
KOI8-R
KOI8-U
KOR
KP
KPW
KQ
KQ-
KQ0
KR
KRAST
KRAT
KRH
KRO
KRW
KS
KSCOR
KSC_5601
KS_C_5601-1987
KS_C_5601-1989
KU
KV
KW
KWD
KWT
KX
KY
KYD
KZ
KZT
K[
K[-
K\
K\!
K\"
K\#
K\%
K\&
K\(
K\-
K\.
K\0
K\1
K\4
K\6
K\9
K\F
K\G
K\K
K\Y
K\b
K\f
K\h
K\u
K]-
K^
K`
K`0
K`1
K`3
Ka
Kaf
Kaithi
Kali
Kaliningrad Standard Time
Kana
Kana_Supplement
Kana_Voicing
Kanbun
Kangxi_Radicals
Kannada
Kaph
Kata
Katakana
Katakana_Or_Hiragana
Katakana_Phonetic_Extensions
Kayah_Li
Kazakhstan_Eastern
Kazakhstan_Western
Kb
Kb!
Kb+
Kb,
Kb0
Kb1
Kb2
Kb5
Kb6
Kb9
Kb;
Kb@
KbB
Kbg
Kc
Kd
Keys
Kf
Kg-
Kh-
Khaph
Khar
Kharoshthi
Khmer
Khmer_Symbols
Khmr
Khoj
Kizilorda
Kj
Kj'
Kj0
Kj1
KjF
Kl
Km
Kn
Knda
Knotted_Heh
Ko
Ko8
Kore
Korea
Korea Standard Time
Kp
Kpel
Kq
Kq-
Kr-
Kt
Kthi
Ku-
Kuybyshev
Kv
Ky
Kyrgystan
K{
K{%
K{-
K{/
K{0
K{S
K}-
K~
L
L"S"7%?%
L#
L%
L&
L'
L(
L)
L,
L0
L0!
L0'
L0(
L0)
L00
L01
L02
L03
L0=
L0A
L0Q(R00
L0W
L0Z
L0c
L0t
L0~>R00
L1
L2
L3
L6
L7
L8
L9
L:
L;
L>
LA
LAK
LANG
LANGUAGES
LANGUAGES_3
LANG_UND
LAO
LAUKIKA
LB
LBCMNoChain
LBN
LBP
LBR
LBY
LC
LCA
LC_ALL
LC_CTYPE
LC_MESSAGES
LF
LG
LH
LHST
LI
LIE
LIPAW
LK
LKA
LKR
LMBCS-1
LMBCS-11
LMBCS-16
LMBCS-17
LMBCS-18
LMBCS-19
LMBCS-2
LMBCS-3
LMBCS-4
LMBCS-5
LMBCS-6
LMBCS-8
LMBCSConversionWorker.isra.0
LNKQpQ
LO
LO-
LOCALE
LOCALE_ATTRIBUTE_KEY
LOCALE_TYPE_YES
LP
LQ
LR
LRD
LS
LS-
LSL
LSO
LT
LTL
LTT
LTU
LU
LUC
LUF
LUL
LUNA1918
LUX
LV
LVA
LVI
LVL
LVR
LVT
LVT_Syllable
LV_Syllable
LW
LX
LY
LYD
LZ
LZ-
L[
L]
L^
L^#
L^0
L^1
L_
L_0
L_1
L`
L`-
La%
Lam
Lamadh
Lana
Languages
LanguagesShort
Lanka
Lao
Laoo
Latf
Latg
Latin
Latin-9
Latin_1
Latin_1_Supplement
Latin_Extended_A
Latin_Extended_Additional
Latin_Extended_B
Latin_Extended_C
Latin_Extended_D
Latn
Lb
Lc-
Lc0
Le
Le1
Lead_Canonical_Combining_Class
Leading_Jamo
Lebanon
Left
Left_Joining
Left_To_Right
Left_To_Right_Embedding
Left_To_Right_Isolate
Left_To_Right_Override
Lepc
Lepcha
Letter
Letter_Number
Letterlike_Symbols
Lf
LfD
Lg
Lh
Lh#
Lh0
LhN
Li
Liberia
Libya
Libya Standard Time
Limb
Limbu
Lina
Linb
Line_Break
Line_Feed
Line_Islands
Line_Separator
Linear_B
Linear_B_Ideograms
Linear_B_Syllabary
Lisu
Lk
Lk0
Lk1
Lkh
LocaleLMBCSGrpMap
LocaleScript
LocaleUtility_cache
Logical_Order_Exception
Loma
Long_Shu
Low_Surrogates
Lower
Lowercase
Lowercase_Letter
Lowercase_Mapping
Lp
LpB
Lq
Lr
Lrc
Lrh
Ls-
Lu
Lu(
LuF
Lut
Lv
Lx
Lx-
Ly
Lyci
Lycian
Lydi
Lydian
Lz
L|-
L|1
L}
L}0
L}>
L~
L-
M
M!
M#
M$
M%
M&
M(
M+
M/
M0
M0!
M0#
M0$
M0(
M0+
M0,
M0/
M0/$S00
M00
M01
M05
M0A
M0C
M0J+U00
M0K
M0W
M0s
M0z
M1
M2
M4
M5
M9
MA
MAC
MAD
MAF
MAGST
MAGT
MAR
MB
MC
MCF
MCO
MD
MDA
MDC
MDG
MDL
MDV
ME
METELKO
MEX
MF
MG
MGA
MGF
MH
MHL
MIME
MK
MKD
MKN
ML
MLF
MLI
MLT
MM
MMK
MMMMdd
MMR
MN
MN-
MN0
MNE
MNG
MNP
MNT
MO
MO-
MO4
MONOTON
MOP
MOZ
MP
MQ
MQY
MQt
MR
MR)Y
MR0
MR2
MR3
MRD
MRO
MRQ
MRT
MS
MS874
MS936
MS950_HKSCS
MSD
MSK
MSR
MST
MST7MDT
MS_Kanji
MT
MTL
MTP
MTQ
MU
MU-
MUR
MUS
MV
MVP
MVR
MW
MWI
MWK
MX
MXN
MXP
MXV
MY
MYR
MYS
MYT
MZ
MZE
MZM
MZN
M\$
M\-
M\K
M]
M_
M`
Magadan Standard Time
Mahj
Mahjong_Tiles
Malaya
Malayalam
Malaysia
Mand
Mandaic
Mandatory_Break
Mani
Mark
Marshall_Islands
Math
Math_Symbol
Mathematical_Alphanumeric_Symbols
Mathematical_Operators
Mauritius Standard Time
Maya
Maybe
Mb
Mb#
Mb)
Mb-
Mb0
Mb1
MbG
MbN
MbP
Mbq
Mc
Md-
Me
MeasurementSystem
Medial
Meem
Meetei_Mayek
Meetei_Mayek_Extensions
Mend
Merc
Mero
Meroitic_Cursive
Meroitic_Hieroglyphs
Mexico
Mexico:BajaNorte
Mexico:BajaSur
Mexico:General
Mexico_Northwest
Mexico_Pacific
Mh-
Miao
MidLetter
MidNum
MidNumLet
Middle East Standard Time
Mim
Minute
Miscellaneous_Mathematical_Symbols_A
Miscellaneous_Mathematical_Symbols_B
Miscellaneous_Symbols
Miscellaneous_Symbols_And_Arrows
Miscellaneous_Symbols_And_Pictographs
Miscellaneous_Technical
Mj-
Mk
Ml
Mlym
Mn-
Mo
Modifier_Letter
Modifier_Symbol
Modifier_Tone_Letters
Mong
Mongolia
Mongolian
Montevideo Standard Time
Month
Moon
MoreInformation
Morocco
Morocco Standard Time
Mountain Standard Time (Mexico)
Mroo
Ms
Mt
Mt-
Mtei
Mu
Musical_Symbols
Mw
Myanmar
Myanmar Standard Time
Myanmar_Extended_A
Mymr
Mz
Mz!
Mz-
Mz0
Mz4
Mz9
MzS
Mzc
Mzm
M{
M{"
M|
M|#
M}
M~
M
N
N!
N"
N#
N$
N%
N&
N'
N(
N)
N*
N,
N-
N.
N. Central Asia Standard Time
N0
N0!
N0(
N0)
N0-
N00
N01
N02
N04
N0:
N0X
N0Y
N0e
N0s
N0~
N1
N1]
N3
N5
N6icu_5210AppendableE
N6icu_5210ICUServiceE
N6icu_5210NormalizerE
N6icu_5210UnicodeSetE
N6icu_5211ICUNotifierE
N6icu_5211Normalizer2E
N6icu_5211ReplaceableE
N6icu_5211SymbolTableE
N6icu_5212DateIntervalE
N6icu_5213BreakIteratorE
N6icu_5213EventListenerE
N6icu_5213ICUServiceKeyE
N6icu_5213ListFormatterE
N6icu_5213ParsePositionE
N6icu_5213SimpleFactoryE
N6icu_5213UnicodeFilterE
N6icu_5213UnicodeStringE
N6icu_5214CjkBreakEngineE
N6icu_5214FCDNormalizer2E
N6icu_5214LaoBreakEngineE
N6icu_5214MessagePatternE
N6icu_5214ResourceBundleE
N6icu_5214UnicodeFunctorE
N6icu_5214UnicodeMatcherE
N6icu_5215NoopNormalizer2E
N6icu_5215RBBIRuleBuilderE
N6icu_5215RBBIRuleScannerE
N6icu_5215RBBISymbolTableE
N6icu_5215ServiceListenerE
N6icu_5215ThaiBreakEngineE
N6icu_5215UnhandledEngineE
N6icu_5216BytesTrieBuilder17BTLinearMatchNodeE
N6icu_5216BytesTrieBuilderE
N6icu_5216ICULocaleServiceE
N6icu_5216KhmerBreakEngineE
N6icu_5216LocaleKeyFactoryE
N6icu_5217CanonicalIteratorE
N6icu_5217CharacterIteratorE
N6icu_5217DictionaryMatcherE
N6icu_5217ICUServiceFactoryE
N6icu_5217StringEnumerationE
N6icu_5217StringTrieBuilder10BranchNodeE
N6icu_5217StringTrieBuilder14BranchHeadNodeE
N6icu_5217StringTrieBuilder14FinalValueNodeE
N6icu_5217StringTrieBuilder14ListBranchNodeE
N6icu_5217StringTrieBuilder15LinearMatchNodeE
N6icu_5217StringTrieBuilder15SplitBranchNodeE
N6icu_5217StringTrieBuilder21IntermediateValueNodeE
N6icu_5217StringTrieBuilder4NodeE
N6icu_5217StringTrieBuilder9ValueNodeE
N6icu_5217StringTrieBuilderE
N6icu_5217UCharsTrieBuilder18UCTLinearMatchNodeE
N6icu_5217UCharsTrieBuilderE
N6icu_5218ComposeNormalizer2E
N6icu_5218KeywordEnumerationE
N6icu_5218ServiceEnumerationE
N6icu_5218UStringEnumerationE
N6icu_5218UnicodeSetIteratorE
N6icu_5219FilteredNormalizer2E
N6icu_5219LanguageBreakEngineE
N6icu_5219Normalizer2WithImplE
N6icu_5220CheckedArrayByteSinkE
N6icu_5220DecomposeNormalizer2E
N6icu_5220LanguageBreakFactoryE
N6icu_5221DictionaryBreakEngineE
N6icu_5222BytesDictionaryMatcherE
N6icu_5222RuleBasedBreakIteratorE
N6icu_5222SimpleLocaleKeyFactoryE
N6icu_5222UCharCharacterIteratorE
N6icu_5223ICUBreakIteratorFactoryE
N6icu_5223ICUBreakIteratorServiceE
N6icu_5223ICULanguageBreakFactoryE
N6icu_5223StringCharacterIteratorE
N6icu_5223UCharsDictionaryMatcherE
N6icu_5223UnicodeStringAppendableE
N6icu_5224ForwardCharacterIteratorE
N6icu_5224ICUResourceBundleFactoryE
N6icu_524IDNAE
N6icu_525UTS46E
N6icu_526BMPSetE
N6icu_526LocaleE
N6icu_526UStackE
N6icu_527UMemoryE
N6icu_527UVectorE
N6icu_528ByteSinkE
N6icu_529ErrorCodeE
N6icu_529LocaleKeyE
N6icu_529UVector32E
N6icu_529UVector64E
N8
N9N
N:
N;
N>
NA
NAD
NAM
NC
NCL
NDT
NDYUKA
NE
NEDIS
NER
NF
NFC_Inert
NFC_Quick_Check
NFD_Inert
NFD_Quick_Check
NFK
NFKC_Inert
NFKC_Quick_Check
NFKD_Inert
NFKD_Quick_Check
NG
NGA
NGN
NH
NHS
NHS/
NI
NIC
NIO
NIU
NJ
NJIVA
NK
NKo
NL
NLD
NLG
NN1
NO
NOK
NOR
NOVST
NOVT
NP
NPL
NPR
NQ
NQ0
NR
NRU
NS
NS0
NSD
NST
NT
NT-
NTZ
NU
NULIK
NV
NW
NW-
NY
NY-
NZ
NZ-CHAT
NZD
NZDT
NZL
NZST
N[
N]
N^
N_
N_-
Na
Na*
Name
Names
Namibia
Namibia Standard Time
Narb
Narrow
Navajo
Nb
Nbat
Nbe
Nc
Nc;
Nd
Ne
Nepal
Nepal Standard Time
Neutral
New Zealand Standard Time
New_Caledonia
New_Tai_Lue
New_Zealand
Newfoundland
Newfoundland Standard Time
Newline
Next_Line
Nf
Ng
Ng-
Nh
NhT
NhTmQ
Ni
Ni-
Nj
Nk
Nk%
Nk0
Nkgb
Nko
Nkoo
Nl
Nm
Nm1
Nn
No
No-
No_Block
No_Joining_Group
Nobreak
Non_Joining
Noncharacter_Code_Point
None
Nonspacing_Mark
Nonstarter
Noon
North Asia East Standard Time
North Asia Standard Time
North_Mariana
Not_Applicable
Not_Reordered
Np
Nq
Nr
Ns
Ns-
Nshu
Nt^
Nu
Nu-
Nukta
Number
NumberElements
Number_Forms
Numeric
Numeric_Type
Numeric_Value
Nun
Nv
Nw
Nwm
Nx
Nya
Nz
N{
N}-
N~
N
O
O!
O!2
O"
O"2
O#
O#2
O$
O$2
O%
O%2
O&2
O'
O'2
O(
O(2
O)2
O*
O*2
O+2
O,2
O-
O-2
O.
O.2
O/"
O/2
O0
O0!
O0-
O0.
O00
O01
O02
O08
O09
O0;
O0=
O0K
O0S
O0X
O0Z
O0\
O0g
O0s
O1
O12
O2
O22
O32
O42
O5
O52
O6"
O62
O72
O82
O9
O92
O:
O:2
O;2
O<2
O=2
O>2
O?2
O@
O@2
OA2
OB2
OC2
OFFSET_ZONE_MAPPINGS
OG
OLetter
OM
OMN
OMR
OMSST
OMST
ON
OO
OO!
OO-
OO0
OO?
OO]
OP
OP-
OP1
OQ
OR
OSOJS
OT
OU
OU!
OU0
OV
OW
OWL
OX
OY7
OZ1
O^
O_
O_1
Oa
Oc
Oc-
Oc0
OcG
Od
Oe
Of
OfE
Ogam
Ogham
Oi
Oj1
Ol
Ol1
Ol_Chiki
Olck
Old_Italic
Old_Persian
Old_South_Arabian
Old_Turkic
Om^
On
Oo
Oo3
Op3
Open
Open_Punctuation
OptGroupByteToCPName
Optical_Character_Recognition
Or
Oriya
Orkh
Orya
Os
Os!
Osma
Osmanya
Other
Other_Letter
Other_Neutral
Other_Number
Other_Punctuation
Other_Symbol
Ou
Ou*
Ou1
Ov$
Ov1
Overlay
Ow
Ow!
Ow$
Ox$
Oy
Oy$
Oy-
Oz$
Oz1
O{$
O{-
O|!
O|$
O|-
O}$
O
O-
P
P !
P #
P $
P %
P &
P '
P (
P )
P *
P +
P ,
P -
P .
P /
P 0
P 1
P 2
P 7
P ;
P =
P >
P @
P B
P H
P K
P M
P!
P!!
P!"
P!#
P!$
P!%
P!&
P!'
P!(
P!)
P!*
P!+
P!,
P!-
P!.
P!/
P!0
P!1
P!2
P!3
P!:
P!;
P!@
P!B
P!D
P!K
P!M
P"
P"!
P""
P"#
P"$
P"%
P"&
P"'
P"(
P")
P"*
P"+
P",
P"-
P".
P"/
P"0
P"1
P"2
P"3
P"4
P"5
P"6
P"9
P"<
P"@
P"F
P"P
P#
P#!
P#"
P##
P#$
P#%
P#&
P#'
P#(
P#)
P#*
P#+
P#,
P#-
P#.
P#/
P#0
P#1
P#2
P#4
P#;
P#>
P#B
P#H
P#N
P$
P$!
P$"
P$#
P$%
P$&
P$'
P$(
P$)
P$*
P$+
P$,
P$-
P$.
P$/
P$0
P$1
P$2
P$3
P$5
P$<
P$=
P$D
P$J
P$L
P%
P%!
P%"
P%#
P%$
P%%
P%&
P%'
P%(
P%)
P%*
P%+
P%,
P%-
P%.
P%/
P%0
P%2
P%3
P%4
P%:
P%;
P%?
P%A
P%C
P%L
P%Q
P%~
P&
P&!
P&"
P&#
P&$
P&%
P&&
P&'
P&(
P&)
P&*
P&+
P&,
P&-
P&.
P&/
P&0
P&1
P&2
P&3
P&4
P&5
P&:
P&?
P&E
P&H
P&O
P'
P'!
P'"
P'#
P'$
P'%
P'&
P''
P'(
P')
P'*
P'+
P',
P'-
P'.
P'/
P'0
P'1
P'2
P'3
P'5
P'7
P'9
P'=
P'@
P'A
P'G
P'M
P(
P(!
P("
P(#
P($
P(%
P(&
P('
P((
P()
P(*
P(+
P(,
P(-
P(.
P(/
P(0
P(1
P(2
P(3
P(4
P(;
P(<
P(B
P(C
P(I
P(K
P)
P)!
P)#
P)$
P)%
P)&
P)'
P)(
P))
P)*
P)+
P),
P)-
P).
P)/
P)0
P)1
P)2
P)3
P)5
P)6
P)<
P)>
P)@
P)B
P)H
P)K
P)P
P*
P*!
P*"
P*#
P*$
P*%
P*&
P*'
P*(
P*)
P**
P*+
P*,
P*-
P*.
P*/
P*0
P*1
P*2
P*3
P*9
P*;
P*>
P*@
P*D
P*M
P*N
P+
P+!
P+"
P+#
P+$
P+%
P+&
P+'
P+(
P+)
P+*
P++
P+,
P+-
P+.
P+/
P+0
P+1
P+3
P+4
P+5
P+:
P+<
P+@
P+F
P+L
P,
P,!
P,"
P,#
P,$
P,%
P,&
P,'
P,(
P,)
P,*
P,+
P,,
P,-
P,.
P,/
P,0
P,1
P,2
P,3
P,5
P,6
P,9
P,:
P,;
P,@
P,A
P,B
P,H
P,Q
P-
P-!
P-"
P-#
P-$
P-%
P-&
P-'
P-(
P-)
P-*
P-+
P-,
P--
P-.
P-/
P-0
P-1
P-2
P-4
P-=
P-?
P-A
P-D
P-J
P-O
P.
P.!
P."
P.#
P.$
P.%
P.&
P.'
P.(
P.)
P.*
P.+
P.,
P.-
P..
P./
P.0
P.1
P.2
P.3
P.4
P.7
P.<
P.=
P.?
P.C
P.L
P.M
P.r
P/
P/!
P/"
P/#
P/$
P/%
P/&
P/'
P/(
P/)
P/*
P/+
P/,
P/-
P/.
P//
P/0
P/1
P/2
P/3
P/6
P/9
P/;
P/?
P/B
P/E
P/H
P/K
P0
P0!
P0"
P0#
P0$
P0%
P0&
P0'
P0(
P0)
P0*
P0+
P0,
P0-
P0.
P0/
P00
P01
P02
P03
P04
P09
P0:
P0=
P0@
P0A
P0B
P0G
P0K
P0P
P0]
P0g
P0p
P1
P1!
P1"
P1#
P1$
P1%
P1&
P1'
P1(
P1)
P1*
P1+
P1,
P1-
P1.
P1/
P10
P11
P12
P13
P14
P15
P19
P1<
P1>
P1C
P1I
P1N
P2
P2!
P2"
P2#
P2$
P2%
P2&
P2'
P2(
P2)
P2*
P2+
P2,
P2-
P2.
P2/
P20
P21
P22
P24
P25
P26
P28
P29
P2<
P2>
P2B
P2K
P2L
P3
P3!
P3"
P3#
P3$
P3%
P3&
P3'
P3(
P3)
P3*
P3+
P3,
P3-
P3.
P3/
P30
P31
P33
P34
P35
P3:
P3<
P3@
P3A
P3B
P3D
P3M
P3Q
P4
P4!
P4"
P4#
P4$
P4%
P4&
P4'
P4(
P4)
P4*
P4+
P4,
P4-
P4.
P4/
P40
P41
P42
P43
P44
P4;
P4?
P4@
P4F
P4G
P4O
P5
P5!
P5"
P5#
P5$
P5%
P5&
P5'
P5(
P5)
P5*
P5+
P5,
P5-
P5.
P5/
P50
P51
P52
P56
P57
P5:
P5;
P5=
P5B
P5H
P5M
P6
P6!
P6"
P6#
P6$
P6%
P6&
P6'
P6(
P6)
P6*
P6+
P6,
P6-
P6.
P6/
P60
P61
P62
P63
P64
P65
P69
P6;
P6=
P6A
P6B
P6D
P6J
P6K
P7
P7!
P7"
P7#
P7$
P7%
P7&
P7'
P7(
P7)
P7*
P7+
P7,
P7-
P7.
P7/
P70
P71
P73
P74
P78
P79
P7?
P7@
P7C
P7L
P7P
P8
P8!
P8"
P8#
P8$
P8%
P8&
P8'
P8(
P8)
P8*
P8+
P8,
P8-
P8.
P8/
P80
P81
P82
P83
P86
P87
P8<
P8>
P8?
P8@
P8E
P8H
P8N
P9
P9!
P9"
P9#
P9$
P9%
P9&
P9'
P9(
P9)
P9*
P9+
P9,
P9-
P9.
P9/
P90
P91
P92
P94
P95
P9:
P9;
P9<
P9A
P9B
P9G
P9L
P:
P:!
P:"
P:#
P:$
P:%
P:&
P:'
P:(
P:)
P:*
P:+
P:,
P:-
P:.
P:/
P:0
P:1
P:3
P:4
P::
P:<
P:A
P:C
P:I
P:Q
P;
P;!
P;"
P;#
P;$
P;%
P;&
P;'
P;(
P;)
P;*
P;+
P;,
P;-
P;.
P;/
P;0
P;1
P;2
P;5
P;7
P;9
P;=
P;>
P;?
P;A
P;B
P;H
P;K
P;O
P<
P<!
P<"
P<#
P<$
P<%
P<&
P<'
P<(
P<)
P<*
P<+
P<,
P<-
P<.
P</
P<0
P<1
P<2
P<4
P<8
P<9
P<=
P<@
P<B
P<D
P<M
P=
P=!
P="
P=#
P=$
P=%
P=&
P='
P=(
P=)
P=*
P=+
P=,
P=-
P=.
P=/
P=0
P=2
P=3
P=4
P=;
P=<
P=@
P=B
P=F
P=K
P>
P>!
P>"
P>#
P>$
P>%
P>&
P>'
P>(
P>)
P>*
P>+
P>,
P>-
P>.
P>/
P>0
P>1
P>2
P>3
P>;
P>@
P>B
P>H
P>P
P?
P?!
P?"
P?#
P?$
P?%
P?&
P?'
P?(
P?)
P?*
P?+
P?,
P?-
P?.
P?/
P?0
P?1
P?2
P?3
P?4
P?6
P?:
P?=
P?>
P?@
P?A
P?B
P?J
P?M
P?N
P@
P@!
P@"
P@#
P@$
P@%
P@&
P@'
P@(
P@)
P@*
P@+
P@,
P@-
P@.
P@/
P@0
P@1
P@2
P@3
P@4
P@5
P@9
P@<
P@?
P@C
P@L
PA
PA!
PA"
PA#
PA$
PA&
PA'
PA(
PA)
PA*
PA+
PA,
PA-
PA.
PA/
PA0
PA1
PA2
PA4
PA8
PA:
PA?
PAA
PAB
PAE
PAH
PAK
PAMAKA
PAN
PAQ
PB
PB!
PB"
PB#
PB$
PB%
PB&
PB'
PB(
PB)
PB*
PB+
PB,
PB-
PB.
PB/
PB0
PB1
PB3
PB6
PB7
PB<
PB?
PBA
PBB
PBG
PBO
PC
PC!
PC"
PC#
PC$
PC%
PC&
PC'
PC(
PC)
PC*
PC+
PC,
PC-
PC.
PC/
PC0
PC1
PC2
PC3
PC4
PC;
PC<
PC=
PCC
PCI
PCM
PCN
PD
PD!
PD"
PD#
PD$
PD%
PD&
PD'
PD(
PD)
PD*
PD+
PD,
PD-
PD.
PD/
PD0
PD1
PD2
PD3
PD9
PD:
PD;
PD>
PDB
PDH
PDK
PE
PE!
PE"
PE#
PE$
PE%
PE&
PE'
PE(
PE)
PE*
PE+
PE,
PE-
PE.
PE/
PE0
PE1
PE2
PE3
PE5
PE9
PE@
PED
PEI
PEM
PEN
PEP
PER
PES
PETR1708
PETST
PETT
PF
PF!
PF"
PF#
PF$
PF%
PF&
PF'
PF(
PF)
PF*
PF+
PF,
PF-
PF.
PF/
PF0
PF1
PF2
PF3
PF4
PF8
PF>
PF@
PFF
PFN
PG
PG!
PG"
PG#
PG$
PG%
PG&
PG'
PG(
PG)
PG*
PG+
PG,
PG-
PG.
PG/
PG0
PG1
PG2
PG3
PG5
PG;
PG<
PGB
PGH
PGK
PGL
PH
PH!
PH"
PH#
PH$
PH%
PH&
PH'
PH(
PH)
PH*
PH+
PH,
PH-
PH.
PH/
PH0
PH1
PH2
PH:
PH;
PH=
PHA
PHJ
PHL
PHP
PHQ
PI
PI!
PI"
PI#
PI$
PI%
PI&
PI'
PI(
PI)
PI*
PI+
PI,
PI-
PI.
PI/
PI0
PI1
PI3
PI4
PI6
PI7
PI:
PI?
PIC
PIG
PIL
PINYIN
PIO
PJ
PJ!
PJ"
PJ#
PJ$
PJ%
PJ&
PJ'
PJ(
PJ)
PJ*
PJ+
PJ,
PJ-
PJ.
PJ/
PJ0
PJ1
PJ2
PJ5
PJ9
PJ=
PJ?
PJE
PJH
PJM
PK
PK!
PK"
PK#
PK$
PK%
PK&
PK'
PK(
PK)
PK*
PK+
PK,
PK-
PK.
PK/
PK0
PK1
PK2
PK4
PK8
PK9
PK;
PKA
PKB
PKG
PKK
PKM
PKR
PL
PL!
PL"
PL#
PL$
PL%
PL&
PL'
PL(
PL)
PL*
PL+
PL,
PL-
PL.
PL/
PL0
PL1
PL3
PL4
PL<
PL@
PLB
PLC
PLI
PLN
PLP
PLW
PLZ
PM
PM!
PM"
PM#
PM$
PM%
PM&
PM'
PM(
PM)
PM*
PM+
PM,
PM-
PM.
PM/
PM0
PM1
PM2
PM4
PM;
PM>
PMB
PMDT
PMK
PMN
PMST
PN
PN!
PN"
PN#
PN$
PN%
PN&
PN'
PN(
PN)
PN*
PN+
PN,
PN-
PN.
PN/
PN0
PN1
PN2
PN3
PN5
PN:
PN<
PN@
PNB
PND
PNG
PNL
PNM
PO
PO!
PO"
PO#
PO$
PO%
PO&
PO'
PO(
PO)
PO*
PO+
PO,
PO-
PO.
PO/
PO0
PO1
PO2
PO3
PO4
PO5
PO6
PO9
PO:
PO@
POA
POB
POF
POG
POL
POLYTON
POLYTONI
POP
POQ
POSIX
POSIX_CLOSE
POSIX_KEY
POSIX_VALUE
PP
PP!
PP"
PP#
PP$
PP%
PP&
PP'
PP(
PP)
PP*
PP+
PP,
PP-
PP.
PP/
PP0
PP1
PP2
PP4
PP6
PP7
PP8
PP;
PP?
PPB
PPH
PPO
PQ
PQ!
PQ"
PQ#
PQ$
PQ%
PQ&
PQ'
PQ(
PQ)
PQ*
PQ+
PQ,
PQ-
PQ.
PQ/
PQ0
PQ1
PQ2
PQ3
PQ5
PQ<
PQ=
PQA
PQB
PQJ
PQM
PR
PR!
PR"
PR#
PR$
PR%
PR&
PR'
PR(
PR)
PR*
PR+
PR,
PR-
PR.
PR/
PR0
PR1
PR2
PR3
PR4
PR9
PR;
PR?
PRB
PRC
PRI
PRIMES
PRIVATEUSE_KEY
PRIVUSE_VARIANT_PREFIX
PRK
PRL
PROFILE_NAMES
PRT
PRY
PS
PS!
PS"
PS#
PS$
PS%
PS&
PS'
PS(
PS)
PS*
PS+
PS,
PS-
PS.
PS/
PS0
PS1
PS2
PS3
PS6
PS7
PS:
PS?
PS@
PSE
PSP
PST
PST8PDT
PT
PT!
PT"
PT#
PT$
PT%
PT&
PT'
PT(
PT)
PT*
PT+
PT,
PT-
PT.
PT/
PT0
PT1
PT2
PT4
PT5
PT9
PT>
PTA
PTB
PTE
PTG
PTN
PU
PU!
PU"
PU#
PU$
PU%
PU&
PU'
PU(
PU)
PU*
PU+
PU,
PU-
PU.
PU/
PU0
PU1
PU3
PU4
PU5
PU8
PU<
PUC
PUI
PUL
PUTER
PV
PV!
PV#
PV$
PV%
PV&
PV'
PV(
PV)
PV*
PV+
PV,
PV-
PV.
PV/
PV0
PV1
PV2
PV3
PV6
PV:
PV<
PV>
PVA
PVB
PVK
PVQ
PW
PW!
PW"
PW#
PW$
PW%
PW&
PW'
PW(
PW)
PW*
PW+
PW,
PW-
PW.
PW/
PW0
PW1
PW2
PW5
PW9
PW;
PW?
PW@
PWB
PWD
PWM
PWO
PW~
PX
PX!
PX"
PX#
PX$
PX%
PX&
PX'
PX(
PX)
PX*
PX+
PX,
PX-
PX.
PX/
PX0
PX1
PX2
PX3
PX4
PX:
PX=
PX@
PXF
PXM
PY
PY!
PY"
PY#
PY$
PY%
PY&
PY'
PY(
PY)
PY*
PY+
PY,
PY-
PY.
PY/
PY0
PY1
PY2
PY5
PY9
PY;
PYB
PYF
PYG
PYH
PYK
PYST
PYT
PZ
PZ!
PZ"
PZ#
PZ$
PZ%
PZ&
PZ'
PZ(
PZ)
PZ*
PZ+
PZ,
PZ-
PZ.
PZ/
PZ0
PZ1
PZ2
PZ3
PZ4
PZ5
PZ7
PZ8
PZ9
PZ=
PZ@
PZA
PZB
PZJ
PZP
P[
P[!
P["
P[#
P[$
P[%
P[&
P['
P[(
P[)
P[*
P[+
P[,
P[-
P[.
P[/
P[0
P[1
P[2
P[3
P[4
P[5
P[8
P[<
P[>
P[?
P[C
P[D
P[L
P[M
P[N
P[q
P\
P\!
P\"
P\#
P\$
P\%
P\&
P\'
P\(
P\)
P\*
P\+
P\,
P\-
P\.
P\/
P\1
P\2
P\5
P\;
P\<
P\?
P\E
P\G
P\L
P]
P]!
P]"
P]#
P]$
P]%
P]&
P]'
P](
P])
P]*
P]+
P],
P]-
P].
P]/
P]0
P]1
P]3
P]5
P]6
P]7
P]:
P]A
P]B
P]G
P]Q
P^
P^!
P^"
P^#
P^$
P^%
P^&
P^'
P^(
P^)
P^*
P^+
P^,
P^-
P^.
P^/
P^0
P^1
P^2
P^3
P^4
P^5
P^9
P^<
P^?
P^C
P^I
P^O
P_
P_!
P_"
P_#
P_$
P_&
P_'
P_(
P_)
P_*
P_+
P_,
P_-
P_.
P_/
P_0
P_1
P_2
P_4
P_8
P_9
P_=
P_>
P_B
P_K
P_M
P`
P`!
P`"
P`#
P`$
P`%
P`&
P`'
P`(
P`)
P`*
P`+
P`,
P`-
P`.
P`/
P`0
P`1
P`2
P`3
P`5
P`7
P`;
P`<
P`@
P`B
P`D
P`K
P`M
Pa
Pa!
Pa"
Pa#
Pa$
Pa%
Pa&
Pa'
Pa(
Pa)
Pa*
Pa+
Pa,
Pa-
Pa.
Pa/
Pa0
Pa1
Pa2
Pa3
Pa4
Pa;
Pa@
PaC
PaF
PaP
Pacific SA Standard Time
Pacific Standard Time (Mexico)
Pacific/Auckland
Pacific/Chatham
Pacific/Pitcairn
Pacific:Apia
Pacific:Auckland
Pacific:Chatham
Pacific:Chuuk
Pacific:Easter
Pacific:Efate
Pacific:Enderbury
Pacific:Fakaofo
Pacific:Fiji
Pacific:Funafuti
Pacific:Galapagos
Pacific:Gambier
Pacific:Guadalcanal
Pacific:Guam
Pacific:Honolulu
Pacific:Johnston
Pacific:Kiritimati
Pacific:Kosrae
Pacific:Kwajalein
Pacific:Majuro
Pacific:Marquesas
Pacific:Midway
Pacific:Nauru
Pacific:Niue
Pacific:Norfolk
Pacific:Noumea
Pacific:Pago_Pago
Pacific:Palau
Pacific:Pitcairn
Pacific:Pohnpei
Pacific:Ponape
Pacific:Port_Moresby
Pacific:Rarotonga
Pacific:Saipan
Pacific:Samoa
Pacific:Tahiti
Pacific:Tarawa
Pacific:Tongatapu
Pacific:Truk
Pacific:Wake
Pacific:Wallis
Pacific:Yap
Pakistan
Pakistan Standard Time
Palestine
Palm
PaperSize
Papua_New_Guinea
Para
Paragraph_Separator
Paraguay
Paraguay Standard Time
Pattern_Syntax
Pattern_White_Space
Pb
Pb!
Pb"
Pb#
Pb$
Pb%
Pb&
Pb'
Pb(
Pb)
Pb*
Pb+
Pb,
Pb-
Pb.
Pb/
Pb0
Pb1
Pb2
Pb4
Pb:
Pb;
Pb>
PbA
PbB
PbG
PbH
PbN
Pc
Pc!
Pc"
Pc#
Pc$
Pc%
Pc&
Pc'
Pc(
Pc)
Pc*
Pc+
Pc,
Pc-
Pc.
Pc/
Pc0
Pc1
Pc2
Pc5
Pc9
Pc<
Pc=
PcA
PcJ
PcL
Pd
Pd!
Pd"
Pd#
Pd$
Pd%
Pd&
Pd'
Pd(
Pd)
Pd*
Pd+
Pd,
Pd-
Pd.
Pd/
Pd0
Pd1
Pd2
Pd3
Pd4
Pd6
Pd8
Pd:
Pd?
PdA
PdC
PdL
PdQ
Pe
Pe!
Pe"
Pe#
Pe$
Pe%
Pe&
Pe'
Pe(
Pe)
Pe*
Pe+
Pe,
Pe-
Pe.
Pe/
Pe0
Pe1
Pe2
Pe3
Pe4
Pe<
Pe?
PeE
PeO
Perm
Peru
Pf
Pf!
Pf"
Pf#
Pf$
Pf%
Pf&
Pf'
Pf(
Pf)
Pf*
Pf+
Pf,
Pf-
Pf.
Pf/
Pf0
Pf1
Pf2
Pf9
Pf;
Pf=
PfA
PfB
PfC
PfG
PfM
Pg
Pg!
Pg"
Pg#
Pg$
Pg%
Pg&
Pg'
Pg(
Pg)
Pg*
Pg+
Pg,
Pg-
Pg.
Pg/
Pg0
Pg1
Pg3
Pg4
Pg7
Pg:
Pg;
Pg<
PgB
PgC
PgI
PgK
PgP
Pg{
Ph
Ph!
Ph"
Ph#
Ph$
Ph%
Ph&
Ph'
Ph(
Ph)
Ph*
Ph+
Ph,
Ph-
Ph.
Ph/
Ph1
Ph2
Ph4
Ph5
Ph9
Ph>
Ph@
PhB
PhK
PhP
Phag
Phags_Pa
Phaistos_Disc
Philippines
Phli
Phlp
Phlv
Phnx
Phoenician
Phoenix_Islands
Phonetic_Extensions
Phonetic_Extensions_Supplement
Pi
Pi!
Pi"
Pi#
Pi$
Pi%
Pi&
Pi'
Pi(
Pi)
Pi*
Pi+
Pi,
Pi-
Pi.
Pi/
Pi0
Pi1
Pi2
Pi4
Pi8
Pi>
Pi@
PiB
PiD
PiM
PiN
Pierre_Miquelon
Pir
Pj
Pj!
Pj#
Pj$
Pj%
Pj&
Pj'
Pj(
Pj)
Pj*
Pj+
Pj,
Pj-
Pj.
Pj/
Pj0
Pj1
Pj3
Pj4
Pj5
Pj7
Pj<
Pj@
PjF
PjL
Pk
Pk!
Pk"
Pk#
Pk$
Pk%
Pk&
Pk'
Pk(
Pk)
Pk*
Pk+
Pk,
Pk-
Pk.
Pk/
Pk0
Pk1
Pk2
Pk6
Pk9
Pk:
Pk;
PkA
PkB
PkC
PkCQ
PkH
PkQ
Pl
Pl!
Pl"
Pl#
Pl$
Pl%
Pl&
Pl'
Pl(
Pl)
Pl*
Pl+
Pl,
Pl-
Pl.
Pl/
Pl0
Pl1
Pl2
Pl:
Pl=
Pl?
PlA
PlB
PlJ
PlO
Playing_Cards
Plrd
Pm
Pm!
Pm"
Pm#
Pm$
Pm%
Pm&
Pm'
Pm(
Pm)
Pm*
Pm+
Pm,
Pm-
Pm.
Pm/
Pm0
Pm1
Pm2
Pm3
Pm4
Pm5
Pm7
Pm9
Pm=
Pm?
PmC
PmL
PmM
Pn
Pn!
Pn"
Pn#
Pn$
Pn%
Pn&
Pn'
Pn(
Pn)
Pn*
Pn+
Pn,
Pn-
Pn.
Pn/
Pn1
Pn2
Pn3
Pn4
Pn6
Pn8
Pn;
Pn?
PnB
PnC
PnE
PnK
Po
Po!
Po"
Po#
Po$
Po%
Po&
Po'
Po(
Po)
Po*
Po+
Po,
Po-
Po.
Po/
Po0
Po1
Po2
Po3
Po4
Po9
Po<
Po@
PoA
PoB
PoG
PoL
PoM
PoP
Poland
Pop_Directional_Format
Pop_Directional_Isolate
Portugal
Postfix_Numeric
Pp
Pp!
Pp"
Pp#
Pp$
Pp%
Pp&
Pp'
Pp(
Pp)
Pp*
Pp+
Pp,
Pp-
Pp.
Pp/
Pp0
Pp1
Pp2
Pp3
Pp4
Pp5
Pp;
Pp<
Pp>
PpC
PpI
PpN
Pq
Pq!
Pq"
Pq#
Pq$
Pq%
Pq&
Pq'
Pq(
Pq)
Pq*
Pq+
Pq,
Pq-
Pq.
Pq/
Pq0
Pq1
Pq2
Pq3
Pq5
Pq6
Pq:
Pq<
Pq>
PqB
PqC
PqK
PqL
Pr
Pr!
Pr"
Pr#
Pr$
Pr%
Pr&
Pr'
Pr(
Pr)
Pr*
Pr+
Pr,
Pr-
Pr.
Pr/
Pr0
Pr1
Pr2
Pr4
Pr5
Pr9
Pr:
Pr@
PrA
PrB
PrD
PrM
PrQ
Prefix_Numeric
Prepend
Private_Use
Private_Use_Area
Prti
Ps
Ps!
Ps"
Ps#
Ps$
Ps%
Ps&
Ps'
Ps(
Ps)
Ps*
Ps+
Ps,
Ps-
Ps.
Ps/
Ps0
Ps1
Ps3
Ps4
Ps8
Ps?
Ps@
PsF
PsO
Pt
Pt!
Pt"
Pt#
Pt$
Pt%
Pt&
Pt'
Pt(
Pt)
Pt*
Pt+
Pt,
Pt-
Pt.
Pt/
Pt0
Pt1
Pt2
Pt3
Pt6
Pt7
Pt;
Pt<
Pt=
PtB
PtH
PtM
Pto
Pu
Pu!
Pu"
Pu#
Pu$
Pu%
Pu&
Pu'
Pu(
Pu)
Pu*
Pu+
Pu,
Pu-
Pu.
Pu/
Pu0
Pu1
Pu2
Pu;
Pu=
PuA
PuB
PuJ
PuK
Punctuation
Pv
Pv!
Pv"
Pv#
Pv$
Pv%
Pv'
Pv(
Pv)
Pv*
Pv+
Pv,
Pv-
Pv.
Pv/
Pv0
Pv1
Pv2
Pv3
Pv4
Pv9
Pv:
Pv?
Pv@
PvC
PvG
PvL
PvP
Pw
Pw!
Pw"
Pw#
Pw$
Pw%
Pw&
Pw'
Pw(
Pw)
Pw*
Pw+
Pw,
Pw-
Pw.
Pw/
Pw0
Pw1
Pw2
Pw5
Pw6
Pw9
Pw>
Pw?
PwA
PwE
PwM
PwN
Px
Px!
Px"
Px#
Px$
Px%
Px&
Px'
Px(
Px)
Px*
Px+
Px,
Px-
Px.
Px/
Px0
Px1
Px2
Px3
Px4
Px5
Px8
Px<
PxA
PxB
PxG
PxL
Py
Py!
Py"
Py#
Py$
Py%
Py&
Py'
Py(
Py)
Py*
Py+
Py,
Py-
Py.
Py/
Py0
Py1
Py2
Py3
Py4
Py:
Py<
PyA
PyC
PyI
PyQ
Pz
Pz!
Pz"
Pz#
Pz$
Pz%
Pz&
Pz'
Pz(
Pz)
Pz*
Pz+
Pz,
Pz-
Pz.
Pz/
Pz0
Pz1
Pz2
Pz5
Pz6
Pz;
Pz>
Pz?
PzB
PzK
PzO
P{
P{!
P{"
P{#
P{$
P{%
P{&
P{'
P{(
P{)
P{*
P{+
P{,
P{-
P{.
P{/
P{0
P{1
P{2
P{3
P{7
P{:
P{=
P{@
P{B
P{D
P{L
P{M
P|
P|!
P|"
P|#
P|$
P|%
P|'
P|(
P|)
P|*
P|+
P|,
P|-
P|.
P|/
P|0
P|1
P|2
P|3
P|4
P|5
P|9
P|;
P|@
P|B
P|F
P|K
P}
P}!
P}"
P}#
P}$
P}%
P}&
P}'
P}(
P})
P}*
P}+
P},
P}-
P}.
P}/
P}0
P}1
P}2
P}4
P}6
P}8
P}9
P};
P}@
P}A
P}B
P}H
P}P
P~
P~!
P~"
P~#
P~$
P~%
P~&
P~'
P~(
P~)
P~*
P~+
P~,
P~-
P~.
P~/
P~0
P~1
P~3
P~9
P~<
P~=
P~>
P~A
P~C
P~J
P~N
P
P!
P"
P#
P$
P%
P&
P'
P(
P)
P*
P+
P,
P-
P.
P/
P0
P2
P3
P4
P5
P;
P<
P?
PC
PL
PM
P{
Q
Q"
Q#
Q$
Q%
Q%S%
Q&
Q'
Q(
Q*
Q,
Q-
Q.
Q.i/
Q0
Q0"
Q0&
Q0'
Q0.
Q00
Q01
Q02
Q06
Q07
Q08
Q0`#S0
Q0i
Q1W1
Q2
Q4
Q5
Q7~
Q9
Q@
QA
QAR
QAT
QB
QD
QG
QH
QMM
QN
QNN
QO
QP
QPP
QQQ
QRR
QReh~n
QS
QS-
QS0
QSS
QT
QT0
QTT
QU
QUU
QVV
QW
QWW
QX
QX-
QX0
QXX
QY
QY0
QYY
QZZ
Q[
Q\
Q\E
Q]
Q^
Q_
Q`
Qaac
Qaai
Qaf
Qaph
Qb
Qb1
Qc
Qd
Qe
Qe0
QeX
Qf
Qf-
Qg
Qg!
Qg$
Qg)
Qg0
Qg1
Qg;
QgH
QgI
Qgc
Qh
Qh-
Qh0
Qh5
Qh[
Qi-
Qj
Qk
Qm
Qn
Qn-
Qo
Qo0
Qp
Qp-
Qp0
Qt
Qu
Qu%
Qu&
Qu*
Qu+
Qu.
Qu0
Qu_
Quarter
Quotation
Quotation_Mark
Qy
Q{$
Q{0
Q{1
Q{}
Q|
Q}
Q
Q0
R
R ]
R!
R"
R"B
R#
R%
R&
R'
R(
R)
R*c.
R+
R,
R-
R0
R0!
R0)
R0/
R00
R01
R02
R05
R0B
R0Z
R1
R4
R5
R6
R8
R9
R;
R>
R?
RA
RBBISetTable_deleter
RBBISymbolTableEntry_deleter
RC
RE
REPLACEMENT_COUNTRIES
REPLACEMENT_LANGUAGES
RESIZE_POLICY_RATIO_TABLE
REU
REVISED
RF
RH
RHD
RIGIK
RN-
RO
ROC
ROK
ROL
ROM
RON
ROU
ROZAJ
RP
RQ
RQ"
RQ0
RQ1
RR
RS
RS5
RSD
RU
RUB
RUMGR
RUR
RUS
RW
RWA
RWF
RX
RY
R[
R]
R_1
R`
R`-
Ra
Ra-
Radical
Rb
Rc
Rd
Re
Regional_Indicator
Regions
Reh
Rejang
Returns %d.
Returns %d.  Status = %d.
Returns %d.  Status = %p.
Returns.  Status = %d.
Reversed_Pe
Rf
Rf"
Rfn
Rh
Ri
Right
Right_Joining
Right_To_Left
Right_To_Left_Embedding
Right_To_Left_Isolate
Right_To_Left_Override
Rj
Rjng
Rk
Rl
Rm%
Rn
Ro
Rohingya_Yeh
Romance Standard Time
Roro
Rp
Rq
Rq-
Rr
Rr-
Rs
Rt
Ru
RuleBasedTransliteratorIDs
Rules
Rumi_Numeral_Symbols
Runic
Runr
Russian Standard Time
Rv
Rv-
Rvc
Rw
Rx
R{
R{#
R{9
R|
R~
R
S
S!
S#
S$
S&
S-
S.V.Y.\._.b.e.h.k.n.q.
S0
S0"
S0#
S0&
S0'
S0)
S0*
S0,
S0-
S00
S02
S05
S0@
S0A
S0E
S0T
S0[
S0d
S0f
S0i
S1A
S2
S3
S4
S6
S7
S:
S@
SA
SA Eastern Standard Time
SA Pacific Standard Time
SA Western Standard Time
SAAHO
SAKST
SAKT
SAMST
SAMT
SAR
SAU
SB
SBD
SC
SCG
SCOTLAND
SCOUSE
SCR
SCSU
SContinue
SD
SDD
SDG
SDN
SDP
SE
SE Asia Standard Time
SEARCH_TZFILE_RESULT
SEK
SEN
SG
SGD
SGP
SGS
SH
SHARED_DATA_HASHTABLE
SHIFT_IN_STR
SHN
SHP
SI
SIT
SJ
SJM
SK
SKK
SL
SLB
SLE
SLL
SLV
SM
SMR
SN
SO
SO+
SO,
SO6
SOL
SOLBA
SOM
SOS
SP
SPM
SQ
SR
SRB
SRD
SRG
SS
SS0
SSD
SSP
ST
STD
STP
STROKE
STUVWXYZ
STerm
SU
SUN
SUR
SURMIRAN
SURSILV
SUTSILV
SV
SV0
SVC
SVK
SVN
SWE
SWZ
SX
SXM
SY
SY-
SYC
SYP
SYR
SZ
SZL
S[-
S\
S^-
S_
S_%
S_0
S_1
S_h
S_q
S`
Sa
Sad
Sadhe
Samaritan
Samoa
Samoa Standard Time
Samr
Sara
Sarb
Saur
Saurashtra
Sb
Sb)
Sb*
Sb+
Sb-
Sb0
Sb1
SbY
Sbi
Sbv
Sb{
Sc
Sc3
Script
Script_Extensions
Scripts
Scripts%stand-alone
Sd
Sd3
Se-
Se3
Second
Seen
Segment_Separator
Segment_Starter
Semkath
Sentence_Break
Sep
Separator
Sequence
Seychelles
Sf
Sf3
Sf[
Sg
Sg0
Sg3
Sgnw
Sh-
Sh3
Sharada
Shavian
Shaw
Shevchenko
Shift-JIS
Shift_JIS
Shin
Shrd
Si-
Si3
Simple_Case_Folding
Simple_Lowercase_Mapping
Simple_Titlecase_Mapping
Simple_Uppercase_Mapping
Sind
Singapore Standard Time
Single_Quote
Sinh
Sinhala
Sj
Sj3
Sk
Sk-
Sk3
Sm3
Small
Small_Form_Variants
Sn
So
Soft_Dotted
Solomon
Sora
Sora_Sompeng
South Africa Standard Time
Sp
Space
Space_Separator
SpacingMark
Spacing_Mark
Spacing_Modifier_Letters
Specials
Square
Sr
Sri Lanka Standard Time
StandardICU
Sub
Sund
Sundanese
Sundanese_Supplement
Super
Superscripts_And_Subscripts
Supplemental_Arrows_A
Supplemental_Arrows_B
Supplemental_Mathematical_Operators
Supplemental_Punctuation
Supplementary_Private_Use_Area_A
Supplementary_Private_Use_Area_B
Suriname
Surrogate
Sv
Sverdlovsk
Sw
Swash_Kaf
Sy
Sy0
Sylo
Syloti_Nagri
Symbol
Syrc
Syre
Syria
Syria Standard Time
Syriac
Syriac_Waw
Syrj
Syrn
SystemV
S|
S|-
S}
S
T
T"
T$
T&
T'
T)
T,
T.
T0
T0%
T0+
T00
T01
T07
T08
T0>
T0DU02
T0P
T0W
T0^
T0_
T0h
T0z
T1
T4
T6
T8
T:
T;
T?
TA
TAA
TARASK
TB
TC
TCA
TCD
TD
TF
TG
TGO
TH
THA
THB
TIS-620
TJ
TJK
TJR
TJS
TK
TKL
TKM
TL
TLS
TM
TMM
TMP
TMT
TN
TND
TO
TON
TOP
TPE
TQ
TQ-
TQF
TR
TR-
TRL
TRY
TS
TS)
TS0
TT
TTD
TTO
TUN
TUR
TUV
TV
TW
TWD
TWN
TX
TX"
TX0
TY
TY-
TZ
TZA
TZS
TZVersion
T[
T[#
T[-
T[0
T\-
T^-
T_
T_CString_int64ToString_52
T_CString_integerToString_52
T_CString_stringToInteger_52
T_CString_toLowerCase_52
T_CString_toUpperCase_52
T_UConverter_fromUnicode_UTF32_BE
T_UConverter_fromUnicode_UTF32_BE_OFFSET_LOGIC
T_UConverter_fromUnicode_UTF32_LE
T_UConverter_fromUnicode_UTF32_LE_OFFSET_LOGIC
T_UConverter_getNextUChar_UTF32_BE
T_UConverter_getNextUChar_UTF32_LE
T_UConverter_toUnicode_UTF32_BE
T_UConverter_toUnicode_UTF32_BE_OFFSET_LOGIC
T_UConverter_toUnicode_UTF32_LE
T_UConverter_toUnicode_UTF32_LE_OFFSET_LOGIC
T`
Tagalog
Tagb
Tagbanwa
Tags
Tah
Tai_Le
Tai_Tham
Tai_Viet
Tai_Xuan_Jing_Symbols
Taipei Standard Time
Tajikistan
Takr
Takri
Tale
Talu
Tamil
Taml
Tang
Tasmania Standard Time
Tavt
Taw
Tb
Tc
Tc-
Td
Te
Teh_Marbuta
Telu
Telugu
Teng
Terminal_Punctuation
Teth
Tfng
Tg
Tglg
Th
Thaa
Thaana
Thai
Thule
Ti
Ti-
Tibetan
Tibt
Tifinagh
Timezone
Tirh
Titlecase_Letter
Titlecase_Mapping
Tj-
Tk
Tk-
Tl
Tl-
Tn
To
ToCPFuncs
Tokelau
Tokyo Standard Time
Tone
Tonga
Tonga Standard Time
Tp
Tq
Trail_Canonical_Combining_Class
Trailing_Jamo
TransliterateLATIN
TransliteratorNamePattern
Transparent
Transport_And_Map_Symbols
Troll
True
Tt-
Tu
Turkey
Turkey Standard Time
Turkmenistan
Tuvalu
Tv
Tw-
Ty
Types
Tz
T{
T{"
T{$
T{f
T|
T~
T~'
T~-
T~4
T~5
T~^
T~d
T-
U
U!
U"
U#
U%
U&
U(
U)
U-q.
U0
U0"
U0'
U0)
U0/
U00
U01
U02
U07
U0A
U0V
U0]
U0b<`0
U0y
U3
U4
U9
U@
UA
UAH
UAK
UCCOR
UCHARSTRENUM_U_VT
UCHARSTRENUM_VT
UCNV_FROM_U_CALLBACK_ESCAPE_52
UCNV_FROM_U_CALLBACK_SKIP_52
UCNV_FROM_U_CALLBACK_STOP_52
UCNV_FROM_U_CALLBACK_SUBSTITUTE_52
UCNV_TO_U_CALLBACK_ESCAPE_52
UCNV_TO_U_CALLBACK_SKIP_52
UCNV_TO_U_CALLBACK_STOP_52
UCNV_TO_U_CALLBACK_SUBSTITUTE_52
UCRCOR
UConverter_fromUnicode_CompoundText_OFFSETS
UConverter_fromUnicode_HZ_OFFSETS_LOGIC
UConverter_fromUnicode_ISCII_OFFSETS_LOGIC
UConverter_fromUnicode_ISO_2022_CN_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)
UConverter_fromUnicode_ISO_2022_JP_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)
UConverter_fromUnicode_ISO_2022_KR_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)
UConverter_toUnicode_CompoundText_OFFSETS
UConverter_toUnicode_HZ_OFFSETS_LOGIC
UConverter_toUnicode_ISCII_OFFSETS_LOGIC
UConverter_toUnicode_ISO_2022_CN_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)
UConverter_toUnicode_ISO_2022_JP_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)
UConverter_toUnicode_ISO_2022_KR_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)
UDataMemory_createNewInstance_52
UDataMemory_init_52
UDataMemory_isLoaded_52
UDataMemory_normalizeDataPointer_52
UDataMemory_setData_52
UDatamemory_assign_52
UG
UGA
UGS
UGX
UJ
UK
UKR
ULAST
ULAT
ULSTER
UM
UMI
UN-
UNESCAPE_MAP
UNGEGN
UO
UP
UP-
UQ
UR
URY
US
US Mountain Standard Time
US-ASCII
US/Alaska
US/Aleutian
US/Central
US/Eastern
US/Mountain
US/Pacific
US1
US:Alaska
US:Aleutian
US:Arizona
US:Central
US:East-Indiana
US:Eastern
US:Hawaii
US:Indiana-Starke
US:Michigan
US:Mountain
US:Pacific
US:Pacific-New
US:Samoa
USA
USD
USN
USS
USTRENUM_VT
USh
USn
UTC
UTC+12
UTC-02
UTC-11
UTF-16
UTF-16,version=1
UTF-16,version=2
UTF-16BE
UTF-16BE,version=1
UTF-16LE
UTF-16LE,version=1
UTF-32
UTF-32BE
UTF-32LE
UTF-7
UTF-8
UTF-EBCDIC
UTF16_BigEndian
UTF16_LittleEndian
UTF16_OppositeEndian
UTF16_PlatformEndian
UTF32_BigEndian
UTF32_LittleEndian
UTF32_OppositeEndian
UTF32_PlatformEndian
UTR22
UU-
UX
UY
UYI
UYP
UYST
UYT
UYU
UZ
UZ-
UZB
UZS
U[
U[0
U[Q
U\
U\!
U\'
U\+
U\,
U\B
U]
U^
U^b
U_
U_AMBIGUOUS_ALIAS_WARNING
U_ARGUMENT_TYPE_MISMATCH
U_BAD_VARIABLE_DEFINITION
U_BRK_ASSIGN_ERROR
U_BRK_HEX_DIGITS_EXPECTED
U_BRK_INIT_ERROR
U_BRK_INTERNAL_ERROR
U_BRK_MALFORMED_RULE_TAG
U_BRK_MISMATCHED_PAREN
U_BRK_NEW_LINE_IN_QUOTED_STRING
U_BRK_RULE_EMPTY_SET
U_BRK_RULE_SYNTAX
U_BRK_SEMICOLON_EXPECTED
U_BRK_UNCLOSED_SET
U_BRK_UNDEFINED_VARIABLE
U_BRK_UNRECOGNIZED_OPTION
U_BRK_VARIABLE_REDFINITION
U_BUFFER_OVERFLOW_ERROR
U_CE_NOT_FOUND_ERROR
U_COLLATOR_VERSION_MISMATCH
U_DECIMAL_NUMBER_SYNTAX_ERROR
U_DEFAULT_KEYWORD_MISSING
U_DIFFERENT_UCA_VERSION
U_DUPLICATE_KEYWORD
U_ENUM_OUT_OF_SYNC_ERROR
U_FILE_ACCESS_ERROR
U_FORMAT_INEXACT_ERROR
U_IDNA_ACE_PREFIX_ERROR
U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR
U_IDNA_LABEL_TOO_LONG_ERROR
U_IDNA_STD3_ASCII_RULES_ERROR
U_IDNA_VERIFICATION_ERROR
U_IDNA_ZERO_LENGTH_LABEL_ERROR
U_ILLEGAL_ARGUMENT_ERROR
U_ILLEGAL_CHARACTER
U_ILLEGAL_CHAR_FOUND
U_ILLEGAL_CHAR_IN_SEGMENT
U_ILLEGAL_ESCAPE_SEQUENCE
U_ILLEGAL_PAD_POSITION
U_INDEX_OUTOFBOUNDS_ERROR
U_INTERNAL_PROGRAM_ERROR
U_INTERNAL_TRANSLITERATOR_ERROR
U_INVALID_CHAR_FOUND
U_INVALID_FORMAT_ERROR
U_INVALID_FUNCTION
U_INVALID_ID
U_INVALID_PROPERTY_PATTERN
U_INVALID_RBT_SYNTAX
U_INVALID_STATE_ERROR
U_INVALID_TABLE_FILE
U_INVALID_TABLE_FORMAT
U_INVARIANT_CONVERSION_ERROR
U_MALFORMED_EXPONENTIAL_PATTERN
U_MALFORMED_PRAGMA
U_MALFORMED_RULE
U_MALFORMED_SET
U_MALFORMED_SYMBOL_REFERENCE
U_MALFORMED_UNICODE_ESCAPE
U_MALFORMED_VARIABLE_DEFINITION
U_MALFORMED_VARIABLE_REFERENCE
U_MEMORY_ALLOCATION_ERROR
U_MESSAGE_PARSE_ERROR
U_MISMATCHED_SEGMENT_DELIMITERS
U_MISPLACED_ANCHOR_START
U_MISPLACED_COMPOUND_FILTER
U_MISPLACED_CURSOR_OFFSET
U_MISPLACED_QUANTIFIER
U_MISSING_OPERATOR
U_MISSING_RESOURCE_ERROR
U_MISSING_SEGMENT_CLOSE
U_MULTIPLE_ANTE_CONTEXTS
U_MULTIPLE_COMPOUND_FILTERS
U_MULTIPLE_CURSORS
U_MULTIPLE_DECIMAL_SEPARATORS
U_MULTIPLE_EXPONENTIAL_SYMBOLS
U_MULTIPLE_PAD_SPECIFIERS
U_MULTIPLE_PERCENT_SYMBOLS
U_MULTIPLE_PERMILL_SYMBOLS
U_MULTIPLE_POST_CONTEXTS
U_NO_SPACE_AVAILABLE
U_NO_WRITE_PERMISSION
U_PARSE_ERROR
U_PATTERN_SYNTAX_ERROR
U_PLUGIN_CHANGED_LEVEL_WARNING
U_PLUGIN_DIDNT_SET_LEVEL
U_PLUGIN_TOO_HIGH
U_PRIMARY_TOO_LONG_ERROR
U_REGEX_BAD_ESCAPE_SEQUENCE
U_REGEX_BAD_INTERVAL
U_REGEX_INTERNAL_ERROR
U_REGEX_INVALID_BACK_REF
U_REGEX_INVALID_FLAG
U_REGEX_INVALID_RANGE
U_REGEX_INVALID_STATE
U_REGEX_LOOK_BEHIND_LIMIT
U_REGEX_MAX_LT_MIN
U_REGEX_MISMATCHED_PAREN
U_REGEX_MISSING_CLOSE_BRACKET
U_REGEX_NUMBER_TOO_BIG
U_REGEX_OCTAL_TOO_BIG
U_REGEX_PROPERTY_SYNTAX
U_REGEX_RULE_SYNTAX
U_REGEX_SET_CONTAINS_STRING
U_REGEX_STACK_OVERFLOW
U_REGEX_STOPPED_BY_CALLER
U_REGEX_TIME_OUT
U_REGEX_UNIMPLEMENTED
U_RESOURCE_TYPE_MISMATCH
U_RULE_MASK_ERROR
U_SAFECLONE_ALLOCATED_WARNING
U_SORT_KEY_TOO_SHORT_WARNING
U_STATE_OLD_WARNING
U_STATE_TOO_OLD_ERROR
U_STRINGPREP_CHECK_BIDI_ERROR
U_STRINGPREP_PROHIBITED_ERROR
U_STRINGPREP_UNASSIGNED_ERROR
U_STRING_NOT_TERMINATED_WARNING
U_TOO_MANY_ALIASES_ERROR
U_TRAILING_BACKSLASH
U_TRUNCATED_CHAR_FOUND
U_UNCLOSED_SEGMENT
U_UNDEFINED_KEYWORD
U_UNDEFINED_SEGMENT_REFERENCE
U_UNDEFINED_VARIABLE
U_UNEXPECTED_TOKEN
U_UNMATCHED_BRACES
U_UNQUOTED_SPECIAL
U_UNSUPPORTED_ATTRIBUTE
U_UNSUPPORTED_ERROR
U_UNSUPPORTED_ESCAPE_SEQUENCE
U_UNSUPPORTED_PROPERTY
U_UNTERMINATED_QUOTE
U_USELESS_COLLATOR_ERROR
U_USING_DEFAULT_WARNING
U_USING_FALLBACK_WARNING
U_VARIABLE_RANGE_EXHAUSTED
U_VARIABLE_RANGE_OVERLAP
U_ZERO_ERROR
U`
Ua
Ua&
Ub
Ub0
Ubl
Uc
Ue*
Ue-
Ug
Ug-
Ugar
Ugaritic
Uh
Ui
Ui9
Uj
Ul
Ulaanbaatar Standard Time
Unassigned
UniLMBCSGrpMap
UnicodeBig
UnicodeBigUnmarked
UnicodeLittle
UnicodeLittleUnmarked
UnicodeString_charAt
Unicode_1_Name
Unified_Canadian_Aboriginal_Syllabics
Unified_Canadian_Aboriginal_Syllabics_Extended
Unified_Ideograph
Unknown
Uo
Up
Up-
Upper
Uppercase
Uppercase_Letter
Uppercase_Mapping
Uq-
Uq4
Ur
Uralsk
Uruguay
Ut
Ut$
Uv
Ux.
Uy-
Uz
Uzbekistan
U{
U|
U}
U})
U}0
U}5
U~0
U
U0
V
V!
V"
V&
V'
V(
V)
V*
V,
V0
V0+
V0/
V00
V01
V0<
V0=
V0H
V0Y
V0_
V0z-W0
V0
V1
V4
V6
V;
V=
V?
VA
VAIDIKA
VALENCIA
VALLADER
VARIANT_MAP
VAT
VC
VCT
VD
VE
VEB
VEF
VEN
VG
VGB
VI
VIR
VLAST
VLAT
VN
VND
VNM
VNN
VO
VOLST
VOLT
VP
VR
VS
VS>
VU
VU-
VUT
VUV
VX
VY
V[
V\
V^
V_
V_-
V_4
V`
Va
Vai
Vaii
Vanuatu
Variants
Variation_Selector
Variation_Selectors
Variation_Selectors_Supplement
Vb
Vedic_Extensions
Venezuela
Venezuela Standard Time
Version
Vertical
Vertical_Forms
Vg
VgO
Vi-
Virama
Visp
Vj
Vk
Vladivostok Standard Time
Vn
Vn!
Vowel_Jamo
Vq
Vr
Vs
Vv
Vv-
Vv0
VvM
Vw
Vy#
Vy(
Vy0
Vy1
VyF
Vyd
Vz
Vz-
V{
V{#
V{3
V{Z
V|
V}
V~
W
W!
W"
W$
W%
W&
W'
W(
W+
W-
W-SU
W-Y-[-]-_-a-c-
W. Australia Standard Time
W. Central Africa Standard Time
W. Europe Standard Time
W0
W0!
W0"
W0#
W0$
W0&
W0.
W0/
W00
W01
W02
W03
W04
W0=
W0C
W0D=K0
W0G
W0X
W2
W3
W7
W<
W=
W@
WADEGILE
WAST
WAT
WEST
WET
WF
WG
WGST
WGT
WINDOWS
WK
WLF
WN
WN-
WN/
WN0
WN;
WO
WP
WQ
WQ{
WR
WS
WS%
WS-
WS0
WS1
WS2
WS6
WS;
WSC
WSM
WST
WSe
WSui
WSui2m
WS}
WU
WV-
WV3
WW
WW%
WW-
WW@
WX
WX-
WY
WY*
WY-
WYY
W[
W[+
W[-
W[0
W[1
W[3
W[;
W^
W^-
W_
W_0
W`
Wara
Waw
Wb
Wb3
Wc
We)
We0
We;
West Asia Standard Time
West Pacific Standard Time
Wf
Wg
Wh
White_Space
Wi
Wide
Wi}
Wl
Wl3
WlB
WlM
Wm
Wn
Wo
Wo-
Wole
Word_Break
Word_Joiner
Wq
Ws
Ws-
Wt
Wu
Ww
Wy
Wz
Wz$
W|
W}
W
W(
W2
W;
X
X"
X"O%
X#
X$
X%
X&
X(
X)
X*
X-
X-EUC-JP
X.
X0
X0+
X0,
X0/
X00
X01
X02
X04
X07
X0>
X0F
X0M
X0N*j00
X0R>Z00
X0T
X09Z00
X1
X2
X3
X6
X7
X8
X9
X;
X<
X>
X?
XAA
XAF
XAG
XAU
XB
XBA
XBB
XBC
XBD
XC
XCC
XCD
XD
XDD
XDR
XEE
XEU
XFF
XFO
XFU
XGG
XHH
XI
XID_Continue
XID_Start
XII
XJJ
XK
XKK
XLL
XM
XMM
XN
XN-
XNN
XO
XOF
XOO
XPD
XPF
XPP
XPT
XQ
XQQ
XR
XRE
XRR
XS
XSS
XSU
XTS
XTT
XU
XUA
XUU
XVV
XW
XWW
XXX
XY
XYY
XZ
XZZ
X[
X[0
X\-
X^
X_
X`-
Xa
Xa-
Xb
Xb$
Xb-
Xb0
Xb2
Xb=
XbB
Xc
Xc3
Xd
Xd-
Xd]
Xf
Xh
Xj
Xj-
Xk
Xm-
Xm3
Xn
Xo
Xo<\>rqg
Xp
Xp'
Xp1
Xp2
Xpeo
Xq-
Xr-
Xs
Xsux
Xv
Xy
Xz
X{
X|
X}
X~
X
Y
Y!
Y"
Y#
Y$
Y&
Y(
Y*
Y0
Y0"
Y0#
Y0$
Y0%
Y0&
Y0+,a0
Y0,
Y0/
Y00
Y01
Y02
Y02,h00
Y03
Y05
Y08
Y0>
Y0B
Y0E
Y0G
Y0G%hc1
Y0Jh0
Y0L
Y0N
Y0V
Y0X
Y0_
Y0e
Y0j
Y0{[0
Y3
Y5
Y7
Y@
YA
YAKST
YAKT
YC
YD
YDD
YE
YEKST
YEKT
YEM
YER
YJ
YMD
YN
YN*g
YN0
YNoS
YO
YO+
YO-
YO0
YO;
YP
YQ-
YS
YT
YU
YUD
YUG
YUM
YUN
YUR
YY
Y[
Y[!
Y\
Y]
Y^
Y_
Y`-
Y`|
Yakutsk Standard Time
Yd
Ye
Ye,
Ye-
Ye0
YeK
Ye]
Year
Yeh
Yeh_Barree
Yeh_With_Tail
Yer
Yes
Yf
Yf-
Yg
Yg-
Yh
Yi
Yi-
Yi_Radicals
Yi_Syllables
Yiii
Yijing_Hexagram_Symbols
Yj
Yk
Yl
Yl,
Ym-
Yo
Yp
Yq
Yq0
Yq1
Yqi
Yr
Yr0
Yt-
Yu
Yu#
Yu-
Yu0
Yu:
Yu<\jl
Yudh
Yudh_He
Yukon
Yv
Yw-
Yy
Yz
Y|
Y|-
Y}
Y~-
Z
Z"
Z$
Z&
Z'
Z)
Z-
Z0
Z0"
Z0$
Z00
Z01
Z02
Z04
Z07
Z0@[p:R0
Z0B
Z0D
Z0F
Z0N
Z0P
Z0T
Z0\
Z0g
Z6
Z7
Z;
Z=
Z>
Z?
ZA
ZAF
ZAL
ZAR
ZB
ZM
ZMB
ZMK
ZMW
ZN
ZO
ZP
ZP%
ZP-
ZQ
ZQ0
ZQ@
ZQ|
ZR
ZR-
ZRN
ZRZ
ZS
ZS0
ZU
ZV
ZW
ZW1
ZWD
ZWE
ZWL
ZWN
ZWR
ZWSpace
ZX
ZX&
ZX1
ZX8
ZY
ZY%
ZZ
ZZ&
ZZ-
ZZZ
Z[-
Z\
Z`
Za
Za-
Zain
Zb
Zc
Zd
Zf
Zf0
Zg
Zh
Zhain
Zi
ZiKQ
Zinh
Zion
Zl
Zm
Zmth
Zn-
Zo
Zo-
Zones
Zp-
Zq
Zr
Zsym
Zt
Zu$
Zv
Zw-
Zxxx
Zy
Zy-
Zyyy
Zz-
Zzzz
Z|
Z}
Z~
Z2
[
[!
[!^!
["
[#
[%
['
[(
[+
[,
[-
[0
[0#
[0%
[0(
[0)
[0,
[00
[01
[08
[0B-_0
[0K
[0X-]0
[0q
[2
[3
[:Han:]
[:Hiragana:]
[<
[=
[BOGUS Trace Function Number]
[G
[O
[R
[R1
[S
[U
[V
[X
[Y
[[:Katakana:]\uff9e\uff9f]
[[:Khmr:]&[:LineBreak=SA:]&[:M:]]
[[:Khmr:]&[:LineBreak=SA:]]
[[:Laoo:]&[:LineBreak=SA:]&[:M:]]
[[:Laoo:]&[:LineBreak=SA:]]
[[:Thai:]&[:LineBreak=SA:]&[:M:]]
[[:Thai:]&[:LineBreak=SA:]]
[\uac00-\ud7a3]
[]
[^
[^-
[_
[`
[a
[b
[c
[d
[d-
[f
[h
[i
[j
[k
[k-
[l
[l-
[n
[o
[o-
[p
[r
[r1
[s
[t0
[w
[y
[z:
[|
[}
[}-
[
[-
\
\"
\$
\%
\&
\'
\(
\)
\,
\-
\.
\/
\0
\00
\01
\02
\06
\0A
\0P
\5
\6
\9
\;
\?
\A
\E
\H
\N
\N-
\O
\O(
\O*
\O/
\O0
\OI
\Ok
\P
\P"
\Q
\R
\S
\U
\U-
\W
\X3
\Y
\[
\\
\\-
\]
\^
\_-
\b
\c
\d
\d3
\e-
\e3
\f
\f3
\g
\g-
\g3
\g@
\gJ
\h
\h"
\h-
\h0
\h2
\h3
\hw
\i-
\i3
\j3
\k
\k3
\l
\l3
\m
\m"
\m#
\m%
\m+
\m,
\m0
\m3
\m6
\mX
\mh
\n
\n3
\o
\o*
\o0
\q
\q-
\r
\t
\u
\u;
\v
\w
\x
\x-
\y
\ym
\z
\|
\}
\~
\
]
]"
]#
]$
]%
]&
](
],
]-
]-X
]0
]0!9a00
]0"
]0%
]0+
]0/
]00
]01
]02
]04
]0Q
]0f
]0h
]0k
]0o
]0t
]3
]5
]7
]9
]E
]H
]L
]N
]N)
]N-
]N0
]N1
]NA
]NR
]U
]W
]W$
]X-
]Y
][
][$
][&
]\
]^
]^S
]_
]`
]`-
]a
]a-
]d
]e-
]f-
]g
]h
]h0
]j-
]k
]l-
]n
]o
]o-
]p
]p#
]p-
]r
]r-
]s
]s-
]t
]u
]uM
]x
]x0
]y
]y%
]y)
]y-
]y0
]z
]{
]|
]}
]~-
]
^
^!
^#
^%
^&
^(
^+
^0
^0&
^0'
^00
^02
^0<
^0T
^0e
^0h
^3
^4
^5
^6
^9
^:
^;
^=
^?
^B
^C
^F
^J
^K
^N
^O
^R
^S
^T
^U
^U-
^V
^X
^X-^>r
^X0
^Y
^Z
^[
^\
^\.
^]
^^
^_
^a
^b
^c
^c0
^cH
^e
^g
^g-
^i
^i0
^k-
^m
^m-
^n
^o
^p
^q
^r
^s
^t$
^t%
^t&
^t-
^t0
^t2
^txQ
^u
^v
^w
^w-
^x
^y
^y"
^y(
^y+
^y.
^y0
^y1
^y:
^y?
^yQ
^yV
^yz
^|
^}
^}-
^}0
^~
^~-
_
_!
_"
_#
_%
_&
_'
_(
_*
_,
_-
_0
_0"
_0'
_0(
_0-
_00
_01
_02
_03
_04
_07
_0<
_0=
_0@
_0B
_0C
_0F
_0H
_0I
_0P
_0S
_0o
_0w
_0y<c0#
_1
_3
_5
_6
_7
_8
_9
_:
_<
_ASCIIData_52
_ASCIIGetNextUChar
_ASCIIGetUnicodeSet
_ASCIIImpl
_ASCIIStaticData
_ASCIIToUnicodeWithOffsets
_Bocu1Data_52
_Bocu1FromUnicode(UConverterFromUnicodeArgs*, UErrorCode*)
_Bocu1FromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)
_Bocu1Impl
_Bocu1StaticData
_Bocu1ToUnicode(UConverterToUnicodeArgs*, UErrorCode*)
_Bocu1ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)
_CESU8Data_52
_CESU8Impl
_CESU8StaticData
_CompoundTextClose
_CompoundTextData_52
_CompoundTextImpl
_CompoundTextOpen
_CompoundTextOpen.part.0
_CompoundTextReset
_CompoundTextStaticData
_CompoundText_GetUnicodeSet
_CompoundTextgetName
_DBCSUTF8Impl
_DYNAMIC
_F
_GLOBAL_OFFSET_TABLE_
_HZClose
_HZData_52
_HZImpl
_HZOpen
_HZReset
_HZStaticData
_HZ_GetUnicodeSet
_HZ_SafeClone
_HZ_WriteSub
_I
_IMAPData_52
_IMAPFromUnicodeWithOffsets
_IMAPImpl
_IMAPStaticData
_IMAPToUnicodeWithOffsets
_ISCIIClose
_ISCIIData_52
_ISCIIGetUnicodeSet
_ISCIIImpl
_ISCIIOpen
_ISCIIReset
_ISCIIStaticData
_ISCII_SafeClone
_ISCIIgetName
_ISO2022CNImpl
_ISO2022CNStaticData
_ISO2022Close(UConverter*)
_ISO2022Data_52
_ISO2022Impl
_ISO2022JPImpl
_ISO2022JPStaticData
_ISO2022KRImpl
_ISO2022KRStaticData
_ISO2022Open(UConverter*, UConverterLoadArgs*, UErrorCode*)
_ISO2022Reset(UConverter*, UConverterResetChoice)
_ISO2022StaticData
_ISO2022getName(UConverter const*)
_ISO_2022_GetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)
_ISO_2022_SafeClone(UConverter const*, void*, int*, UErrorCode*)
_ISO_2022_WriteSub(UConverterFromUnicodeArgs*, int, UErrorCode*)
_Jv_RegisterClasses
_K
_LMBCSClose
_LMBCSData11_52
_LMBCSData16_52
_LMBCSData17_52
_LMBCSData18_52
_LMBCSData19_52
_LMBCSData1_52
_LMBCSData2_52
_LMBCSData3_52
_LMBCSData4_52
_LMBCSData5_52
_LMBCSData6_52
_LMBCSData8_52
_LMBCSFromUnicode
_LMBCSGetNextUCharWorker.part.1
_LMBCSImpl1
_LMBCSImpl11
_LMBCSImpl16
_LMBCSImpl17
_LMBCSImpl18
_LMBCSImpl19
_LMBCSImpl2
_LMBCSImpl3
_LMBCSImpl4
_LMBCSImpl5
_LMBCSImpl6
_LMBCSImpl8
_LMBCSOpen1
_LMBCSOpen11
_LMBCSOpen16
_LMBCSOpen17
_LMBCSOpen18
_LMBCSOpen19
_LMBCSOpen2
_LMBCSOpen3
_LMBCSOpen4
_LMBCSOpen5
_LMBCSOpen6
_LMBCSOpen8
_LMBCSOpenWorker.isra.3
_LMBCSSafeClone
_LMBCSStaticData1
_LMBCSStaticData11
_LMBCSStaticData16
_LMBCSStaticData17
_LMBCSStaticData18
_LMBCSStaticData19
_LMBCSStaticData2
_LMBCSStaticData3
_LMBCSStaticData4
_LMBCSStaticData5
_LMBCSStaticData6
_LMBCSStaticData8
_LMBCSToUnicodeWithOffsets
_Latin1Data_52
_Latin1FromUnicodeWithOffsets
_Latin1GetNextUChar
_Latin1GetUnicodeSet
_Latin1Impl
_Latin1StaticData
_Latin1ToUnicodeWithOffsets
_MBCSData_52
_MBCSImpl
_N
_N0
_O
_P
_P2
_POSIX
_Q
_R
_SBCSUTF8Impl
_SCSUClose
_SCSUData_52
_SCSUFromUnicode
_SCSUFromUnicodeWithOffsets
_SCSUGetName
_SCSUImpl
_SCSUOpen
_SCSUReset
_SCSUSafeClone
_SCSUStaticData
_SCSUToUnicode
_SCSUToUnicodeWithOffsets
_T
_T!
_U
_UR
_UTF16BEData_52
_UTF16BEFromUnicodeWithOffsets
_UTF16BEGetName
_UTF16BEGetNextUChar
_UTF16BEImpl
_UTF16BEOpen
_UTF16BEReset
_UTF16BEStaticData
_UTF16BEToUnicodeWithOffsets
_UTF16Data_52
_UTF16GetName
_UTF16GetNextUChar
_UTF16Impl
_UTF16LEData_52
_UTF16LEFromUnicodeWithOffsets
_UTF16LEGetName
_UTF16LEGetNextUChar
_UTF16LEImpl
_UTF16LEOpen
_UTF16LEReset
_UTF16LEStaticData
_UTF16LEToUnicodeWithOffsets
_UTF16Open
_UTF16Reset
_UTF16StaticData
_UTF16ToUnicodeWithOffsets
_UTF16v2Data
_UTF16v2Impl
_UTF16v2StaticData
_UTF32BEData_52
_UTF32BEImpl
_UTF32BEStaticData
_UTF32Data_52
_UTF32GetNextUChar
_UTF32Impl
_UTF32LEData_52
_UTF32LEImpl
_UTF32LEStaticData
_UTF32Open
_UTF32Reset
_UTF32StaticData
_UTF32ToUnicodeWithOffsets
_UTF7Data_52
_UTF7FromUnicodeWithOffsets
_UTF7GetName
_UTF7Impl
_UTF7Open
_UTF7Reset
_UTF7StaticData
_UTF7ToUnicodeWithOffsets
_UTF8Data_52
_UTF8Impl
_UTF8StaticData
_W
_X
_Y
_ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv121__vmi_class_type_infoE@@CXXABI_1.3
_ZdlPv@@GLIBCXX_3.4
_[
_[0
_]
_^
_^-
_^=
__CTOR_END__
__CTOR_LIST__
__DTOR_END__
__DTOR_LIST__
__FRAME_END__
__JCR_END__
__JCR_LIST__
___
__bss_start
__cxa_finalize
__cxa_finalize@@GLIBC_2.2.5
__cxa_pure_virtual
__cxa_pure_virtual@@CXXABI_1.3
__do_global_ctors_aux
__do_global_dtors_aux
__dso_handle
__dynamic_cast
__dynamic_cast@@CXXABI_1.3
__gmon_start__
__rawmemchr
__rawmemchr@@GLIBC_2.2.5
__timezone
__timezone@@GLIBC_2.2.5
__tzname
__tzname@@GLIBC_2.2.5
__xstat
__xstat@@GLIBC_2.2.5
_`
_`-
_a
_addExtensionToList
_c
_c0
_cU
_canonicalize(char const*, char*, int, unsigned int, UErrorCode*) [clone .part.2]
_caseMap(UCaseMap const*, int (*)(UCaseProps const*, int, int (*)(void*, signed char), void*, unsigned short const**, char const*, int*), unsigned char*, int, unsigned char const*, UCaseContext*, int, int, UErrorCode*)
_caseMap(UCaseMap const*, int (*)(UCaseProps const*, int, int (*)(void*, signed char), void*, unsigned short const**, char const*, int*), unsigned short*, int, unsigned short const*, UCaseContext*, int, int, UErrorCode*)
_charPtr_charAt(int, void*)
_concatenate(unsigned short const*, int, unsigned short const*, int, unsigned short*, int, icu_52::Normalizer2 const*, UErrorCode*) [clone .part.3]
_d
_deleteEngine
_deleteFactory
_e
_edata
_end
_enumPropertyStartsRange
_enumPropertyStartsRange(void const*, int, int, unsigned int)
_enumTypeRange
_enumTypeValue
_extFromU.isra.3
_extToU.isra.4
_f
_findRow
_fini
_fromUnicodeWithCallback
_g
_g0
_gV
_getDisplayNameForComponent(char const*, char const*, unsigned short*, int, int (*)(char const*, char*, int, UErrorCode*), char const*, UErrorCode*) [clone .part.0]
_getKeywords(char const*, char, char*, int, char*, int, int*, signed char, char const*, char const*, UErrorCode*) [clone .part.1]
_getStringOrCopyKey(char const*, char const*, char const*, char const*, char const*, char const*, unsigned short*, int, UErrorCode*)
_getVariantEx(char const*, char, char*, int, signed char)
_gf
_gq
_h
_h0
_h}
_init
_installedLocales
_installedLocalesCount
_installedLocalesInitOnce
_internal_toASCII(unsigned short const*, int, unsigned short*, int, int, UStringPrepProfile*, UParseError*, UErrorCode*)
_internal_toUnicode(unsigned short const*, int, unsigned short*, int, int, UStringPrepProfile*, UParseError*, UErrorCode*)
_isPrivateuseValueSubtags
_iterate(UCharIterator*, signed char, unsigned short*, int, icu_52::Normalizer2 const*, signed char, signed char*, UErrorCode*) [clone .part.4]
_j
_j(
_j0
_j1
_jT
_k
_kCountries
_kCurrencies
_kCurrency
_kIndexLocaleName
_kIndexTag
_kKeys
_kLanguages
_kLocaleDisplayPattern
_kPattern
_kScripts
_kScriptsStandAlone
_kSeparator
_kTypes
_kVariants
_l
_l!
_l$
_l%
_l0
_l1
_l:
_m
_matchFromSet(unsigned short const*, unsigned short const*, signed char)
_n
_normalize(icu_52::Normalizer2 const*, unsigned short const*, int, icu_52::UnicodeString&, UErrorCode*)
_o
_oC
_r
_r"
_r0
_r1
_r3
_res_findTableItem
_reset
_s
_set_add
_set_addRange
_set_addString
_shapeToArabicDigitsWithContext(unsigned short*, int, unsigned short, signed char, signed char)
_t
_toUnicodeWithCallback
_u
_uBrkErrorName
_uErrorInfoName
_uErrorName
_uFmtErrorName
_uIDNAErrorName
_uPluginErrorName
_uRegexErrorName
_uTransErrorName
_uhash_allocate
_uhash_find
_uhash_put
_uhash_rehash
_uhash_remove
_uloc_getOrientationHelper(char const*, char const*, UErrorCode*) [clone .part.0]
_v
_v-
_w
_z
_z-
_|-
_|U
_}
_~
_-
_C
`
`!
`!J
`#
`$
`$*
`$.
`$F
`%
`%/
`&
`&$
`'
`(
`(#
`)
`).
`*
`+
`+#
`,
`-
`-&
`.
`.#
`/
`0
`0!
`0"
`0#
`0.
`00
`01
`02
`09
`0=
`0L
`0P
`0y
`1
`1"
`2
`3
`4
`4*
`4I
`5&
`6
`7
`7^
`7k
`8
`8!
`9
`:
`:#@'="
`:$
`:p
`;
`;)
`;G
`<
`<.
`<N
`<v
`=
`>
`>#
`?
`?*
`?9
`@
`A
`B
`B-
`BL
`C
`C~
`D
`E
`F
`G
`G$
`H
`I
`J
`J*
`K
`K?
`M#
`M,
`N
`N0
`O
`P
`P"
`Q"
`R
`S
`S(
`S-
`T
`T-
`U
`U#
`V
`V#
`V0
`W
`Y
`Y-
`Z
`Z$
`[
`\
`\-
`\4
`\N
`]
`]#
`^
`_
`_$
``
`a
`b
`b$
`b'
`b(
`b-
`c
`d
`d+
`di
`e
`e)
`e.
`f
`g
`g2
`i
`i!
`i-
`i1
`iA
`j
`j8
`k
`k+
`l
`l#
`l$
`l%
`l&
`l*
`l-
`l0
`l1
`l4
`l>
`lG
`l`
`lg
`lv
`lx
`m
`n
`n!
`o
`o$
`oB
`p
`p*
`q
`q!
`r
`r"
`s
`t
`u
`u+
`u0
`uO
`v
`w
`wS
`x
`x)
`xp
`y
`y!
`z
`{
`{!
`{-
`|
`|#
`|0
`|9
`}
`~
`~"
`
`
a
a!
a"
a#
a%
a'
a(
a-
a0
a0$
a0&
a0'
a0(
a0,
a0.
a00
a01
a02
a03
a06
a0<
a0@
a0D
a0E
a0J
a0O
a0P
a0`
a0a
a0f
a0h
a0j
a0}
a3
aF
aJ
aN
aN1
aQ-
aR
aR-
aS
aS2
aSTX>r
aS^X
aU
aU-
aV
aW
aW-
aX
aY
a\
a\=
a]
a^
a^+
a^-
a^1
a^2
a^9
a^J
a^Q
a_-
a`
aa-
aa_SAAHO
aar
abbreviated
abcdefghi
abcdefghijklmnopqrstuvwxyz
abk
abq
abr
acceleration
accountingFormat
ace
ach
acre
ad
ada
addPoint
ady
af
af-
af_ZA
afa
afh
afr
after
afterCurrency
afternoon
ag
ag*
ag,
ag0
ag6
agP
agg
agq
ain
aj-
aju
ak
ak-
ak0
aka
akk
al
al0
ale
alg
algorithmic
all
allowed
alnum
als
alt
alternateQuotationEnd
alternateQuotationStart
am
am_ET
ambiguousConverters
amh
amo
angle
anp
ansi1251
ansix341968
ansix341986
ao
aoZ
aoz
apa
appendItems
appendable.cpp
ar
ar-
arA
ar_001
ar_AE
ar_BH
ar_DZ
ar_EG
ar_IQ
ar_JO
ar_KW
ar_LB
ar_LY
ar_MA
ar_MO
ar_OM
ar_QA
ar_SA
ar_SD
ar_SY
ar_TN
ar_YE
ara
araLink
arab
arabext
arabic
arb
arc
arc-minute
arc-second
area
arg
armn
armnlow
arn
arn_CL
arp
art
art-lojban
art_LOJBAN
art_lojban
arw
as_IN
asa
ascii
ascii7
asciiFromEbcdic
asciiTypes
asm
asmo708
ast
at
atLeast
ath
atj
attribute
au
aus
av-
av1
av@
ava
availableFormats
ave
aw
aw&
aw?
awU
aw[
awa
ax
ay
aym
ayr
az
az-
az.
az_AZ
az_AZ_CYRL
az_AZ_LATN
az_Arab
az_Cyrl
az_Cyrl_AZ
az_IR
az_Latn
az_Latn_AZ
az_RU
aze
azj
a{
a|
a}-
a~
a
b
b"
b"e"
b&
b(
b)
b*
b+
b-
b0
b00
b01
b02
b0>
b0A
b1
b3u
b8
b9
b:
b;
b?
bB
bC
bHS
bN
bP
bP[
bQ
bR
bT
bV
bV-
bW
bX
bX-
bY
bY"
bY1
bZ
b[-
b\
b\-
b\^
b]
b]-
b_
b_%
b_+
b_0
b_1
b_g
b_z
b`
b`-
ba
ba-
ba_RU
bad
bai
bak
bal
bali
bam
ban
bap
bas
basicToDigit
bat
bax
bbc
bbj
bc
bc-
bcc
bci
bcl
be
be+
be-
be1
be_BY
before
beforeCurrency
bej
bel
bem
ben
beng
ber
bew
bez
bf
bfd
bfq
bft
bfy
bg
bg_BG
bgc
bgx
bh
bhb
bhi
bhk
bho
bi
bi-
bi0
biDiGetMaxValue(IntProperty const&, UProperty)
big5
big5-hkscs:unicode3.0
big5han
big5hk
big5hkscs
big5hkscsunicode30
bih
bik
bin
binProps
bin_NG
bis
bj
bjj
bjn
bk
bk(
bk0
bk1
bk2
bkj
bkm
bku
bl
bla
blank
blt
bm
bmpset.cpp
bmq
bn
bn_BD
bn_IN
bnt
bo
bo_BT
bo_CN
bocu1
bocu1ByteToTrail
bocu1TrailToByte
bod
bom.4249
bom.4284
bom.4306
bom.4319
bom.4376
bom.4398
bos
boundaries
bq
bqi
bqv
br
brD
br_FR
bra
bracketAddOpening
bracketInit
bracketProcessChar
brah
bre
breakiterator_cleanup
breakiterator_cleanup_dict
brh
brkeng.cpp
brkiter.cpp
brx
bs
bs_BA
bs_Cyrl
bs_Cyrl_BA
bs_Latn
bs_Latn_BA
bss
bt
bt-
btk
bto
btv
bu
bu-
bu0
bua
buc
buddhist
bug
bul
bum
bv
bv*
bv0
bv1
bvb
bw
bx
bxk
bxr
by
by0
bya
byn
bytesFromUTF8
bytestream.cpp
bytestrie.cpp
bytestriebuilder.cpp
bytestrieiterator.cpp
byv
bz
bz0
bze
bzx
b{
b}<
b~
b
c
c"
c#
c$
c%
c&
c'
c(
c,A
c0
c0!
c0#
c0%
c0,
c0-
c0/
c00
c01
c02
c05
c08
c0<
c0=
c0>
c0@
c0K
c0T
c0U
c0V
c0X
c0]
c0n
c0s
c06h00
c1
c3
c6
c@
cD
cI
cJ
cM
cN
cO
cP
cQ
cR
cR)
cR-
cS
cU
cV
cY
cZ
c[
c[-
c[0
c\
c]
c^
c^0
c_
c`
c`0
c`A
ca
ca0
ca_ES
ca_ES_PREEURO
ca_ES_VALENCIA
cache
cacheDeleter
cad
cai
cakm
calculateSize(unsigned short const*, int, int, unsigned int) [clone .isra.3]
calendar
calendarData
calendarPreferenceData
call_gmon_start
can
caniter.cpp
car
caseBinaryPropertyContains(BinaryProperty const&, int, UProperty)
cat
cau
cay
cb
cch
ccp
cd
ce
ce0
ce3
ce@
ceM
ceb
cei
ceil
ceil@@GLIBC_2.2.5
cel
celsius
centimeter
ces
cesu8
cev
cgg
ch
cha
chain
cham
changeState_2022(UConverter*, char const**, char const*, Variant2022, UErrorCode*)
changesWhenCasefolded(BinaryProperty const&, int, UProperty)
changesWhenNFKC_Casefolded(BinaryProperty const&, int, UProperty)
charIterFuncs
charIterTextAccess
charIterTextClone
charIterTextClose
charIterTextExtract
charIterTextLength
characterIteratorCurrent
characterIteratorGetIndex
characterIteratorGetState
characterIteratorHasNext
characterIteratorHasPrevious
characterIteratorMove
characterIteratorNext
characterIteratorPrevious
characterIteratorSetState
characters
chariter.cpp
charstr.cpp
chb
che
chg
chinese
chk
chm
chn
cho
chp
chr
chr_US
chu
chv
chy
ci
cja
cjm
cjs
ck
ck"
ck%
ck'
ck-N
ck0
ckCQ
ck]
ckb
ckb_Arab
ckb_Arab_IQ
cks^
ckt
cld
cldrVersion
close@@GLIBC_2.2.5
closedir
closedir@@GLIBC_2.2.5
cm-
cmc
cmemory.c
cmemory_cleanup_52
cmemory_inUse_52
cmn
cn
cntrl
cnv
cnvCacheMutex
cnvNameType
cnvalias
co_FR
code
codeMap
codeMappings
codePatterns
colAlternate
colBackwards
colCaseFirst
colCaseLevel
colHiraganaQuaternary
colNormalization
colNumeric
colReorder
colStrength
colalternate
colbackwards
colcasefirst
colcaselevel
colhiraganaquaternary
collation
collations
colnormalization
colnumeric
colreorder
colstrength
com
combining spacing mark
compareElementStrings
compareEntries
compareEntries(UElement, UElement)
compareKeywordStructs(void const*, void const*, void const*)
completed.5889
compound
connector punctuation
contextTransforms
control
convertFBto06
convertFEto06
convertLamAlef
converterData
cop
coptic
copyEnumRange(void const*, int, int, unsigned int)
cor
cos
cp
cp1089
cp1200
cp1201
cp1208
cp1250
cp1251
cp1252
cp1253
cp1254
cp1255
cp1256
cp1257
cp1258
cp367
cp819
cp866
cp878
cp912
cp913
cp914
cp915
cp920
cp921
cp923
cp932
cp936
cp943c
cpe
cpf
cpp
cr
cr_Cans
cre
createLikelySubtagsString(char const*, int, char const*, int, char const*, int, char const*, int, char*, int, UErrorCode*)
createTagStringWithAlternates(char const*, int, char const*, int, char const*, int, char const*, int, char const*, char*, int, UErrorCode*)
crh
crj
crk
crl
crm
crp
crs
crtstuff.c
cs
csASCII
csBig5
csEUCKR
csEUCPkdFmtJapanese
csGB2312
csIBM866
csISO2022CN
csISO2022JP
csISO2022KR
csISOLatin1
csISOLatin2
csISOLatin3
csISOLatin4
csISOLatin5
csISOLatin6
csISOLatinArabic
csISOLatinCyrillic
csISOLatinGreek
csISOLatinHebrew
csKOI8R
csKSC56011987
csMacintosh
csShiftJIS
csUCS4
csUnicode
csWindows31J
cs_CZ
csascii
csb
csbig5
cseuckr
cseucpkdfmtjapanese
csgb2312
csibm866
csiso2022cn
csiso2022jp
csiso2022kr
csisolatin0
csisolatin1
csisolatin2
csisolatin3
csisolatin4
csisolatin5
csisolatin6
csisolatin9
csisolatinarabic
csisolatincyrillic
csisolatingreek
csisolatinhebrew
cskoi8r
csksc56011987
csmacintosh
csshiftjis
cstring.c
csucs4
csunicode
csw
cswindows31j
ct-
cu
cubic-kilometer
cubic-mile
currency
currency symbol
currencyDecimal
currencyFormat
currencyMatch
currencySpacing
cus
cv
cv7
cw
cwchar.c
cwd
cx
cy
cy-
cy_GB
cyclicNameSets
cym
cyrillic
cz
cz%
c{%
c{-
c|
c|-
c}
c~
c
d
d#
d%
d&
d'
d(
d)
d*
d+
d,
d0
d0!
d0"
d0#
d0$
d0&
d0'
d0(
d0+
d0,
d0.
d00
d01
d02
d03
d08
d0;
d0=
d0>
d0A
d0B
d0J
d0U
d0V
d0Vy0
d0i
d0k
d0}
d1
d2
d4
d7
d:
d;
d?
dE
dG
dO
dQ
dR$
dT
dU
dV
dVL
dV_
dW
dW8u
dX
dZ-
dZw
d[
d\
d\-
d\0
d]
d^
d_
d_-
da
da_DK
daf
dak
dan
dangi
dar
dash punctuation
dataInfo
dataVersion
dav
day
day-format-except-narrow
day-standalone-except-narrow
dayNames
dayParts
dayperiod
days
db
dcc
de
de@collation=phonebook
de_AT
de_AT_PREEURO
de_BE
de_CH
de_DE
de_DE@collation=phonebook
de_DE_PREEURO
de_LI
de_LU
de_LU_PREEURO
de__PHONEBOOK
decimal
decimal digit number
decimalFormat
default
defaultContains(BinaryProperty const&, int, UProperty)
defaultEncodings
defaultGetFoldedValue(UNewTrie*, int, int)
defaultGetMaxValue(IntProperty const&, UProperty)
defaultGetValue(IntProperty const&, int, UProperty)
defaultTableOptions
degree
del
deleteLocale
deleteNorm2AllModes
deleteUObject
delimiters
den
depends
desc
deu
deva
df
df-
dgo
dgr
dhd
di
dictbe.cpp
dictionaries
dictionary
dictionarydata.cpp
digit
dik
din
diq
direct
direction
displayName
div
dj
dje
dk
dk'
dk*
dk0
dk1
dl
dm
dn
dng
do
doInsertionSort
doLoadFromCommonData(signed char, char const*, char const*, char const*, char const*, char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*, UErrorCode*) [clone .isra.7]
doOpenChoice(char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*)
doWriteForward
doWriteReverse
doi
dp
dq-
dqN
dqs
dra
dsb
dsb_DE
dt
dtintrv.cpp
dtm
dtor_idx.5891
du-
dua
ducet
dum
duration
durationUnits
dv
dv-
dv_MV
dw
dx
dx-
dyo
dyu
dz
dzg
dzo
d{
d|-
d
e
e!
e"
e$
e%
e(
e-
e/
e0
e00
e01
e02
e0?
e0J
e0L
e3
e5
e@
eA
eF
eP
eP0
ePQ
eQ
eQ!
eQ"
eQ%
eQ&
eQ.
eQ0
eQ1
eQ4
eQ5
eQB
eR
eR0
eS
eVX
eW
eX
eY
eY(
eY*
eY0W)R
eY1
eYKQpQ
eZ
e[
e\
e\O
e\Y
e]
e^
e_
e_0
e_O
e_s
e`
e`-
e`1
ea
ea-
earlyAfternoon
earlyMorning
ebcdicFromAscii
ebcdicTypes
ebu
ec
ecma114
ecma118
ecma128
ed-
ee
efi
eg
eg'
eg(
eg0
eg1
eg3
eg4
egI
egy
eh
ei
ei-
ek
ek0
ek1
eka
ekk
eky
el
el-
el-Upper
el_GR
el_GR_PREEURO
ell
elot928
elx
em
emk
en
en-GB-oed
en-GB-x-oed
en-x-i-default
en_001
en_029
en_AS
en_AU
en_BE
en_BE_PREEURO
en_BW
en_BZ
en_CA
en_GB
en_GU
en_HK
en_ID
en_IE
en_IE_PREEURO
en_IN
en_JM
en_MH
en_MP
en_MT
en_MY
en_NZ
en_PH
en_SG
en_TT
en_UM
en_US
en_US_POSIX
en_VI
en_ZA
en_ZW
enc
enclosing mark
encodeDirectlyMaximum
encodeDirectlyRestricted
end
end punctuation
eng
enm
entryOpen(char const*, char const*, UErrorCode*)
enumCIDRangeHandler
enumEitherTrie(UTrie2 const*, int, int, unsigned int (*)(void const*, unsigned int), signed char (*)(void const*, int, int, unsigned int), void const*)
enumPropertyStartsRange
enumSameValue(void const*, unsigned int)
enumToU.constprop.6
eo
eor
ep
epo
equalStringTrieNodes
era
era-abbr
era-name
eras
errorcode.cpp
es
es-
es@collation=traditional
es_419
es_AR
es_BO
es_CL
es_CO
es_CR
es_DO
es_EC
es_ES
es_ES@collation=traditional
es_ES_PREEURO
es_GT
es_HN
es_MX
es_NI
es_PA
es_PE
es_PR
es_PY
es_SV
es_US
es_UY
es_VE
es__TRADITIONAL
escSeqChars
escSeqCharsCN
escSeqCharsLen
escSeqCompoundText
escSeqStateTable_Key_2022
escSeqStateTable_Value_2022
esk
est
et
et_EE
ethi
ethiopic
ethiopic-amete-alem
ett
eu
eu&
eu0
euZ
eu_ES
eu_ES_PREEURO
euc
euc-jp-html5
euccn
eucjis
eucjp
eucjphtml5
euckr
eus
ev
evening
evn
ew-
ewe
ewo
ex
expandCompositChar(unsigned short*, int, int, unsigned int, UErrorCode*, int, uShapeVariables) [clone .isra.9]
expandCompositCharAtBegin(unsigned short*, int, int, UErrorCode*) [clone .isra.7]
expandCompositCharAtEnd(unsigned short*, int, int, UErrorCode*) [clone .isra.8]
expandCompositCharAtNear(unsigned short*, int, int, UErrorCode*, int, int, int, uShapeVariables) [clone .isra.5]
exponential
extendedunixcodepackedformatforjapanese
ey
ey%
ez
e{
e|
e}
e~
e
e-
f
f$
f&
f&f&
f)
f+
f0
f0"
f00
f01
f02
f0:
f0C
f0D
f0G
f0I
f0\&p02
f2
f:
f<
f?
f@
fM
fN
fP
fQ
fR
fS
fS"
fSh
fT
fU
fV
fW
fZ
fZ(
fZ0
fZ1
f[
f['
f[(
f[)
f[-
f[.
f[/
f[0
f[1
f[4
f[W
f[\
f\0
f^-
f_
f_#
f_/
f_S
f_r
f_{
fa
fa_AF
fa_IR
fahrenheit
fallback
fallbackFormat
fan
fao
fas
fat
fb
fc
fclose
fclose@@GLIBC_2.2.5
fe
fe0
few
ff
ff-
ff_Latn
ff_Latn_SN
ffm
fg
fghijklmno
fi
fi_FI
fi_FI_PREEURO
fields
fij
fil
fil_PH
file
filterednormalizer2.cpp
fin
final punctuation
finalRaw
finalRule
finalYear
finance
findFirstExisting(char const*, char*, signed char*, signed char*, signed char*, UErrorCode*)
findLikelySubtags(char const*, char*, int, UErrorCode*) [clone .part.0] [clone .constprop.1]
findTaggedAliasListsOffset(char const*, char const*, UErrorCode*)
fit
fiu
fixN0c
fixedOffsets
fj
fj-
fk
fk!
fk%
fk0
fk8
fk9
flagE
flagLR
flagO
flagsOffset
floor
floor@@GLIBC_2.2.5
fm
fm$
fm'
fm(
fm0
fm3
fm9
fmJ
fmo
fmod
fmod@@GLIBC_2.2.5
fmu
fo
fo-
fo_FO
fon
font
fopen
fopen@@GLIBC_2.2.5
format
fp
fq
fr
fr_015
fr_029
fr_BE
fr_BE_PREEURO
fr_CA
fr_CD
fr_CG
fr_CH
fr_CI
fr_CM
fr_FR
fr_FR_PREEURO
fr_HT
fr_LU
fr_LU_PREEURO
fr_MA
fr_MC
fr_ML
fr_RE
fr_SN
fra
frame_dummy
fread
fread@@GLIBC_2.2.5
free
free@@GLIBC_2.2.5
free_entry(UResourceDataEntry*)
fri
frm
fro
from
fromBase64
fromUnicodeTable
frr
frs
fry
fs
fseek
fseek@@GLIBC_2.2.5
ft
ftell
ftell@@GLIBC_2.2.5
fu
fuc
fud
ful
fullwide
fuq
fur
future
fuv
fuv_NG
fw
fw6
fy
fy_NL
f{
f}
f}-
f}0
f}1
f}3
f}f
f~-
f
g
g"
g#
g$
g%
g&
g'
g(
g)
g*
g+
g,
g-
g-force
g.
g/i/
g0
g0"
g0#
g00
g01
g06
g0A
g0I
g0r
g1
g2
g3
g6
g7
g8
g:
g;
g<
g=
g>
g@
gA
gAliasData
gAliasDataInitOnce
gAvailableConverterCount
gAvailableConverters
gAvailableConvertersInitOnce
gC
gCacheInitOnce
gCollationBinKey
gCommonCleanupFunctions
gCommonDataCache
gCommonDataCacheInitOnce
gCommonICUDataArray
gCorrectedPOSIXLocale
gD
gDataDirectory
gDataFileAccess
gDecimal
gDefaultAlgorithmicSharedData
gDefaultConverter
gDefaultConverterContainsOption
gDefaultConverterName
gDefaultConverterNameBuffer
gEmpty16
gEmpty32
gEmptyString
gEmptyUString
gEnumAliases
gEnumAllConverters
gExitFmt
gExitFmtPtrStatus
gExitFmtStatus
gExitFmtValue
gExitFmtValueStatus
gF
gG
gH
gHaveTriedToLoadCommonData
gHeapInUse
gI
gInclusions
gInitOnce
gJ
gKeywordsEnum
gLanguageBreakFactories
gLanguageBreakFactoriesInitOnce
gLibCleanupFunctions
gLocalesEnum
gM
gMainTable
gO
gP
gPosixIDmap
gPublicTypes
gQ
gQ"
gQ$
gQ-
gQ1
gQB
gR
gRuleSet_digit_char_pattern
gRuleSet_name_char_pattern
gRuleSet_name_start_char_pattern
gRuleSet_rule_char_pattern
gS
gService
gSharedDataInitOnce
gT
gTimeZoneBuffer
gTimeZoneBufferPtr
gTraceContext
gU
gV
gW
gX
gY
gY-
gY0
gY0W)R
gZ
g[
g\
g\-
g]
g]"
g]-
g^
g_
g`
ga
ga-
ga0
ga_IE
ga_IE_PREEURO
gaa
gag
gan
gay
gaz
gaz_ET
gb
gb18030
gb18030Ranges
gb2312
gb2312-1980
gb23121980
gb231280
gb2312han
gba
gbk
gbm
gbo
gc
gc-
gcbToHst
gcr
gd
gd_GB
ge
gem
genderList
generic
geor
getBiDiClass(IntProperty const&, int, UProperty)
getBiDiPairedBracketType(IntProperty const&, int, UProperty)
getCombiningClass(IntProperty const&, int, UProperty)
getDataBlock(UNewTrie2*, int, signed char)
getDirProps
getDynamicOffset
getFallbackData(UResourceBundle const*, char const**, UResourceDataEntry**, unsigned int*, UErrorCode*) [clone .isra.2]
getFoldedRBBIValue
getFoldingOffset
getGeneralCategory(IntProperty const&, int, UProperty)
getHangulSyllableType(IntProperty const&, int, UProperty)
getHostID.isra.1
getJoiningGroup(IntProperty const&, int, UProperty)
getJoiningType(IntProperty const&, int, UProperty)
getLeadCombiningClass(IntProperty const&, int, UProperty)
getLink(unsigned short)
getMaxValueFromShift(IntProperty const&, UProperty)
getNormQuickCheck(IntProperty const&, int, UProperty)
getNumericType(IntProperty const&, int, UProperty)
getSPrepFoldingOffset
getScript(IntProperty const&, int, UProperty)
getStateProp
getTrailCombiningClass(IntProperty const&, int, UProperty)
getenv
getenv@@GLIBC_2.2.5
gettimeofday
gettimeofday@@GLIBC_2.2.5
gez
ggn
gh
gil
gj
gjk
gju
gk
gl
gl_ES
gl_ES_PREEURO
gla
gld
gle
glg
glk
globalMutex
glv
gm
gmh
gmtFormat
gmtZeroFormat
gn
gn0
gn_PY
gno
go
goh
gon
gon_Telu
gor
gos
got
gp
gq
gq0
gqL
gqq
gr
gr'
gr(
gr0
gr<
graph
grapheme
grb
grc
greek
greek8
gregorian
grek
greklow
grn
group
groupProp
grouping
grt
gs
gsw
gsw_FR
gt
gu
gu_IN
gub
gug
guj
gujr
guru
guw
guz
gv
gv-
gvr
gw
gwi
gx
gy
gy-
gyW
gya
gz
gz-
g{
g|
g}
g~
g
g-
g0
h
h!
h"
h#
h$
h)
h*
h0
h0!
h0"
h0#
h0%
h0&
h0)
h0*
h00
h01
h02
h03
h08
h0;
h0D
h0L
h0O
h0_
h0t
h0w
h1
h4
h7
h<
h>
h?
hD
hE
hG
hJ
hN
hP-
hQ-
hQ0
hQE
hQb_
hT
hT#
hT1
hTMR
hV
hV!
hV+
hV-
hW
hW-
hX
h[
h\
h\0
h^
h`
h`!
h`-
ha
ha+
ha>
ha_Arab
ha_CM
ha_Latn
ha_Latn_NG
ha_SD
hai
hanidec
hans
hansfin
hant
hantfin
hasFullCompositionExclusion(BinaryProperty const&, int, UProperty)
hasValidTrailBytes
hashEntry
hashEntry(UElement)
hashStringTrieNode
hat
hau
haw
haw_US
haz
hb
hbs
hc
hc0
hc=
hdn
he
he_IL
hea
heb
hebr
hebrew
hebrew8
hectare
hectopascal
her
hf
hi
hi-
hi_IN
hi__DIRECT
hil
him
hin
hit
hkbig5
hkscsbig5
hl
hmd
hmn
hmo
hmv
hn
hnd
hne
hnn
hno
ho
hoc
hoj
hop
horsepower
hourFormat
hp-
hq
hr
hr_BA
hr_HR
hrv
hs
hs0
hs1
hsb
hsb_DE
hsn
ht
hu
hu_HU
hun
hup
hv
hw
hwkana_fb
hx
hx-
hy
hy$
hy,
hy-
hy4
hy_AM
hye
hyj
hyo
hz
hzgb2312
h}
h~-
i
i!
i"
i#
i$
i%
i(
i)
i,
i-
i-ami
i-bnn
i-default
i-hak
i-klingon
i-lux
i-navajo
i-pwn
i-tao
i-tay
i-tsu
i.
i/
i0
i0$
i00
i01
i02
i04
i05
i09
i0:
i0D
i0F
i0Q
i0[
i3
i4
i5
i6
i8
i?
i@
iD
iDot
iDotAcute
iDotGrave
iDotTilde
iH
iI
iN
iO
iO-
iOgonekDot
iQ
iQ"
iQ0
iQ1
iR$
iR-
iR4
iS
iT
iV
iW
iW-
iX
iX0
iX1
iY-
iZ-
i[
i\
i]
i_
i_-
i_4
i_ami
i_bnn
i_default
i_hak
i_klingon
i_lux
i_navajo
i_pwn
i_tao
i_tay
i_tsu
i`
i`"
i`0
i`J
ia
iana
ib<
iba
ibb
ibb_NG
ibm
ibm-1041_P100-1995
ibm-1088_P100-1995
ibm-1089
ibm-1089_P100-1995
ibm-1168
ibm-1168_P100-2002
ibm-1200
ibm-1201
ibm-1202
ibm-1203
ibm-1204
ibm-1205
ibm-1208
ibm-1209
ibm-1232
ibm-1233
ibm-1234
ibm-1235
ibm-1236
ibm-1237
ibm-13488
ibm-13489
ibm-13490
ibm-13491
ibm-13496
ibm-13497
ibm-1363_P110-1997
ibm-1375
ibm-1375_P100-2007
ibm-1392
ibm-17584
ibm-17585
ibm-17586
ibm-17587
ibm-17592
ibm-17593
ibm-21680
ibm-21681
ibm-21682
ibm-21683
ibm-25776
ibm-25777
ibm-25778
ibm-25779
ibm-29872
ibm-29873
ibm-29874
ibm-29875
ibm-33722_P120-1999
ibm-367
ibm-5012
ibm-5012_P100-1999
ibm-5304
ibm-5305
ibm-5346
ibm-5346_P100-1998
ibm-5347
ibm-5347_P100-1998
ibm-5348
ibm-5348_P100-1997
ibm-5349
ibm-5349_P100-1998
ibm-5350
ibm-5350_P100-1998
ibm-5354
ibm-5354_P100-1998
ibm-5471
ibm-5471_P100-2006
ibm-61955
ibm-61956
ibm-819
ibm-850
ibm-851
ibm-852
ibm-866
ibm-866_html5-2012
ibm-874_P100-1995
ibm-878
ibm-878_P100-1996
ibm-897_P100-1995
ibm-9005
ibm-9005_X110-2007
ibm-912
ibm-912_P100-1995
ibm-913
ibm-913_P100-2000
ibm-914
ibm-914_P100-1995
ibm-915
ibm-915_P100-1995
ibm-916_P100-1995
ibm-920
ibm-920_P100-1995
ibm-921
ibm-921_P100-1995
ibm-923
ibm-923_P100-1998
ibm-9424
ibm-942_P120-1999
ibm-943
ibm-943_P130-1999
ibm-943_P15A-2003
ibm-943_VSUB_VPUA
ibm-9447
ibm-9447_P100-2002
ibm-9448
ibm-9448_X100-2005
ibm-9449
ibm-9449_P100-2002
ibm-944_P100-1995
ibm-946_P100-1995
ibm-949
ibm-949_P110-1999
ibm1089
ibm1089p1001995
ibm1168
ibm1168p1002002
ibm1200
ibm1201
ibm1202
ibm1203
ibm1204
ibm1205
ibm1208
ibm1209
ibm1232
ibm1233
ibm1234
ibm1235
ibm1236
ibm1237
ibm13488
ibm13489
ibm13490
ibm13491
ibm13496
ibm13497
ibm1375
ibm1375p1002007
ibm1392
ibm17584
ibm17585
ibm17586
ibm17587
ibm17592
ibm17593
ibm21680
ibm21681
ibm21682
ibm21683
ibm25776
ibm25777
ibm25778
ibm25779
ibm29872
ibm29873
ibm29874
ibm29875
ibm367
ibm5012
ibm5012p1001999
ibm5304
ibm5305
ibm5346
ibm5346p1001998
ibm5347
ibm5347p1001998
ibm5348
ibm5348p1001997
ibm5349
ibm5349p1001998
ibm5350
ibm5350p1001998
ibm5354
ibm5354p1001998
ibm5471
ibm5471p1002006
ibm61955
ibm61956
ibm819
ibm866
ibm866html52012
ibm878
ibm878p1001996
ibm9005
ibm9005x1102007
ibm912
ibm912p1001995
ibm913
ibm913p1002000
ibm914
ibm914p1001995
ibm915
ibm915p1001995
ibm920
ibm920p1001995
ibm921
ibm921p1001995
ibm923
ibm923p1001998
ibm9424
ibm943
ibm943c
ibm943p15a2003
ibm943vsubvpua
ibm9447
ibm9447p1002002
ibm9448
ibm9448x1002005
ibm9449
ibm9449p1002002
ibo
ic
icu
icu-internal-compound-d1
icu-internal-compound-d2
icu-internal-compound-d3
icu-internal-compound-d4
icu-internal-compound-d5
icu-internal-compound-d6
icu-internal-compound-d7
icu-internal-compound-s1
icu-internal-compound-s2
icu-internal-compound-s3
icu-internal-compound-t
icu_52::Appendable::appendCodePoint(int)
icu_52::Appendable::appendString(unsigned short const*, int)
icu_52::Appendable::getAppendBuffer(int, int, unsigned short*, int, int*)
icu_52::Appendable::reserveAppendCapacity(int)
icu_52::Appendable::~Appendable()
icu_52::BMPSet::BMPSet(icu_52::BMPSet const&, int const*, int)
icu_52::BMPSet::BMPSet(int const*, int)
icu_52::BMPSet::contains(int) const
icu_52::BMPSet::findCodePoint(int, int, int) const
icu_52::BMPSet::initBits()
icu_52::BMPSet::overrideIllegal()
icu_52::BMPSet::span(unsigned short const*, unsigned short const*, USetSpanCondition) const
icu_52::BMPSet::spanBack(unsigned short const*, unsigned short const*, USetSpanCondition) const
icu_52::BMPSet::spanBackUTF8(unsigned char const*, int, USetSpanCondition) const
icu_52::BMPSet::spanUTF8(unsigned char const*, int, USetSpanCondition) const
icu_52::BMPSet::~BMPSet()
icu_52::BackwardUTrie2StringIterator::previous16()
icu_52::BreakIterator::BreakIterator()
icu_52::BreakIterator::buildInstance(icu_52::Locale const&, char const*, int, UErrorCode&)
icu_52::BreakIterator::createCharacterInstance(icu_52::Locale const&, UErrorCode&)
icu_52::BreakIterator::createInstance(icu_52::Locale const&, int, UErrorCode&)
icu_52::BreakIterator::createInstance(icu_52::Locale const&, int, UErrorCode&) [clone .part.3]
icu_52::BreakIterator::createLineInstance(icu_52::Locale const&, UErrorCode&)
icu_52::BreakIterator::createSentenceInstance(icu_52::Locale const&, UErrorCode&)
icu_52::BreakIterator::createTitleInstance(icu_52::Locale const&, UErrorCode&)
icu_52::BreakIterator::createWordInstance(icu_52::Locale const&, UErrorCode&)
icu_52::BreakIterator::getAvailableLocales()
icu_52::BreakIterator::getAvailableLocales(int&)
icu_52::BreakIterator::getDisplayName(icu_52::Locale const&, icu_52::Locale const&, icu_52::UnicodeString&)
icu_52::BreakIterator::getDisplayName(icu_52::Locale const&, icu_52::UnicodeString&)
icu_52::BreakIterator::getLocale(ULocDataLocaleType, UErrorCode&) const
icu_52::BreakIterator::getLocaleID(ULocDataLocaleType, UErrorCode&) const
icu_52::BreakIterator::getRuleStatus() const
icu_52::BreakIterator::getRuleStatusVec(int*, int, UErrorCode&)
icu_52::BreakIterator::makeInstance(icu_52::Locale const&, int, UErrorCode&)
icu_52::BreakIterator::registerInstance(icu_52::BreakIterator*, icu_52::Locale const&, UBreakIteratorType, UErrorCode&)
icu_52::BreakIterator::unregister(void const*, UErrorCode&)
icu_52::BreakIterator::~BreakIterator()
icu_52::ByteSink::Flush()
icu_52::ByteSink::GetAppendBuffer(int, int, char*, int, int*)
icu_52::ByteSink::~ByteSink()
icu_52::BytesDictionaryMatcher::getType() const
icu_52::BytesDictionaryMatcher::matches(UText*, int, int*, int&, int, int*) const
icu_52::BytesDictionaryMatcher::transform(int) const
icu_52::BytesDictionaryMatcher::~BytesDictionaryMatcher()
icu_52::BytesTrie::Iterator::Iterator(icu_52::BytesTrie const&, int, UErrorCode&)
icu_52::BytesTrie::Iterator::Iterator(void const*, int, UErrorCode&)
icu_52::BytesTrie::Iterator::branchNext(unsigned char const*, int, UErrorCode&)
icu_52::BytesTrie::Iterator::hasNext() const
icu_52::BytesTrie::Iterator::next(UErrorCode&)
icu_52::BytesTrie::Iterator::reset()
icu_52::BytesTrie::Iterator::truncateAndStop()
icu_52::BytesTrie::Iterator::~Iterator()
icu_52::BytesTrie::append(icu_52::ByteSink&, int)
icu_52::BytesTrie::branchNext(unsigned char const*, int, int)
icu_52::BytesTrie::current() const
icu_52::BytesTrie::findUniqueValue(unsigned char const*, signed char, int&)
icu_52::BytesTrie::findUniqueValueFromBranch(unsigned char const*, int, signed char, int&)
icu_52::BytesTrie::getNextBranchBytes(unsigned char const*, int, icu_52::ByteSink&)
icu_52::BytesTrie::getNextBytes(icu_52::ByteSink&) const
icu_52::BytesTrie::jumpByDelta(unsigned char const*)
icu_52::BytesTrie::next(char const*, int)
icu_52::BytesTrie::next(int)
icu_52::BytesTrie::nextImpl(unsigned char const*, int)
icu_52::BytesTrie::readValue(unsigned char const*, int)
icu_52::BytesTrie::~BytesTrie()
icu_52::BytesTrieBuilder::BTLinearMatchNode::BTLinearMatchNode(char const*, int, icu_52::StringTrieBuilder::Node*)
icu_52::BytesTrieBuilder::BTLinearMatchNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::BytesTrieBuilder::BTLinearMatchNode::write(icu_52::StringTrieBuilder&)
icu_52::BytesTrieBuilder::BTLinearMatchNode::~BTLinearMatchNode()
icu_52::BytesTrieBuilder::BytesTrieBuilder(UErrorCode&)
icu_52::BytesTrieBuilder::add(icu_52::StringPiece const&, int, UErrorCode&)
icu_52::BytesTrieBuilder::build(UStringTrieBuildOption, UErrorCode&)
icu_52::BytesTrieBuilder::buildBytes(UStringTrieBuildOption, UErrorCode&)
icu_52::BytesTrieBuilder::buildStringPiece(UStringTrieBuildOption, UErrorCode&)
icu_52::BytesTrieBuilder::clear()
icu_52::BytesTrieBuilder::countElementUnits(int, int, int) const
icu_52::BytesTrieBuilder::createLinearMatchNode(int, int, int, icu_52::StringTrieBuilder::Node*) const
icu_52::BytesTrieBuilder::ensureCapacity(int)
icu_52::BytesTrieBuilder::getElementStringLength(int) const
icu_52::BytesTrieBuilder::getElementUnit(int, int) const
icu_52::BytesTrieBuilder::getElementValue(int) const
icu_52::BytesTrieBuilder::getLimitOfLinearMatch(int, int, int) const
icu_52::BytesTrieBuilder::getMaxBranchLinearSubNodeLength() const
icu_52::BytesTrieBuilder::getMaxLinearMatchLength() const
icu_52::BytesTrieBuilder::getMinLinearMatch() const
icu_52::BytesTrieBuilder::indexOfElementWithNextUnit(int, int, unsigned short) const
icu_52::BytesTrieBuilder::matchNodesCanHaveValues() const
icu_52::BytesTrieBuilder::skipElementsBySomeUnits(int, int, int) const
icu_52::BytesTrieBuilder::write(char const*, int)
icu_52::BytesTrieBuilder::write(int)
icu_52::BytesTrieBuilder::writeDeltaTo(int)
icu_52::BytesTrieBuilder::writeElementUnits(int, int, int)
icu_52::BytesTrieBuilder::writeValueAndFinal(int, signed char)
icu_52::BytesTrieBuilder::writeValueAndType(signed char, int, int)
icu_52::BytesTrieBuilder::~BytesTrieBuilder()
icu_52::BytesTrieElement::compareStringTo(icu_52::BytesTrieElement const&, icu_52::CharString const&) const
icu_52::BytesTrieElement::setTo(icu_52::StringPiece const&, int, icu_52::CharString&, UErrorCode&)
icu_52::CanonIterData::CanonIterData(UErrorCode&)
icu_52::CanonIterData::addToStartSet(int, int, UErrorCode&)
icu_52::CanonIterData::~CanonIterData()
icu_52::CanonicalIterator::CanonicalIterator(icu_52::UnicodeString const&, UErrorCode&)
icu_52::CanonicalIterator::cleanPieces()
icu_52::CanonicalIterator::extract(icu_52::Hashtable*, int, unsigned short const*, int, int, UErrorCode&)
icu_52::CanonicalIterator::getDynamicClassID() const
icu_52::CanonicalIterator::getEquivalents(icu_52::UnicodeString const&, int&, UErrorCode&)
icu_52::CanonicalIterator::getEquivalents2(icu_52::Hashtable*, unsigned short const*, int, UErrorCode&)
icu_52::CanonicalIterator::getSource()
icu_52::CanonicalIterator::getStaticClassID()
icu_52::CanonicalIterator::getStaticClassID()::classID
icu_52::CanonicalIterator::next()
icu_52::CanonicalIterator::permute(icu_52::UnicodeString&, signed char, icu_52::Hashtable*, UErrorCode&)
icu_52::CanonicalIterator::reset()
icu_52::CanonicalIterator::setSource(icu_52::UnicodeString const&, UErrorCode&)
icu_52::CanonicalIterator::~CanonicalIterator()
icu_52::CharString::append(char const*, int, UErrorCode&)
icu_52::CharString::append(char, UErrorCode&)
icu_52::CharString::appendInvariantChars(icu_52::UnicodeString const&, UErrorCode&)
icu_52::CharString::appendPathPart(icu_52::StringPiece const&, UErrorCode&)
icu_52::CharString::copyFrom(icu_52::CharString const&, UErrorCode&)
icu_52::CharString::ensureCapacity(int, int, UErrorCode&)
icu_52::CharString::getAppendBuffer(int, int, int&, UErrorCode&)
icu_52::CharString::truncate(int)
icu_52::CharacterIterator::CharacterIterator()
icu_52::CharacterIterator::CharacterIterator(icu_52::CharacterIterator const&)
icu_52::CharacterIterator::CharacterIterator(int)
icu_52::CharacterIterator::CharacterIterator(int, int)
icu_52::CharacterIterator::CharacterIterator(int, int, int, int)
icu_52::CharacterIterator::first32PostInc()
icu_52::CharacterIterator::firstPostInc()
icu_52::CharacterIterator::operator=(icu_52::CharacterIterator const&)
icu_52::CharacterIterator::~CharacterIterator()
icu_52::CheckedArrayByteSink::Append(char const*, int)
icu_52::CheckedArrayByteSink::CheckedArrayByteSink(char*, int)
icu_52::CheckedArrayByteSink::GetAppendBuffer(int, int, char*, int, int*)
icu_52::CheckedArrayByteSink::Reset()
icu_52::CheckedArrayByteSink::~CheckedArrayByteSink()
icu_52::CjkBreakEngine::CjkBreakEngine(icu_52::DictionaryMatcher*, icu_52::LanguageType, UErrorCode&)
icu_52::CjkBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_52::UStack&) const
icu_52::CjkBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_52::UStack&) const [clone .part.15]
icu_52::CjkBreakEngine::~CjkBreakEngine()
icu_52::ComposeNormalizer2::getQuickCheck(int) const
icu_52::ComposeNormalizer2::hasBoundaryAfter(int) const
icu_52::ComposeNormalizer2::hasBoundaryBefore(int) const
icu_52::ComposeNormalizer2::isInert(int) const
icu_52::ComposeNormalizer2::isNormalized(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::ComposeNormalizer2::normalize(unsigned short const*, unsigned short const*, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::ComposeNormalizer2::normalizeAndAppend(unsigned short const*, unsigned short const*, signed char, icu_52::UnicodeString&, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::ComposeNormalizer2::quickCheck(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::ComposeNormalizer2::spanQuickCheckYes(unsigned short const*, unsigned short const*, UErrorCode&) const
icu_52::ComposeNormalizer2::~ComposeNormalizer2()
icu_52::DATA_NAME
icu_52::DATA_TYPE
icu_52::DateInterval::DateInterval(double, double)
icu_52::DateInterval::DateInterval(icu_52::DateInterval const&)
icu_52::DateInterval::clone() const
icu_52::DateInterval::getDynamicClassID() const
icu_52::DateInterval::getStaticClassID()
icu_52::DateInterval::getStaticClassID()::classID
icu_52::DateInterval::operator=(icu_52::DateInterval const&)
icu_52::DateInterval::operator==(icu_52::DateInterval const&) const
icu_52::DateInterval::~DateInterval()
icu_52::DecomposeNormalizer2::getQuickCheck(int) const
icu_52::DecomposeNormalizer2::hasBoundaryAfter(int) const
icu_52::DecomposeNormalizer2::hasBoundaryBefore(int) const
icu_52::DecomposeNormalizer2::isInert(int) const
icu_52::DecomposeNormalizer2::normalize(unsigned short const*, unsigned short const*, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::DecomposeNormalizer2::normalizeAndAppend(unsigned short const*, unsigned short const*, signed char, icu_52::UnicodeString&, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::DecomposeNormalizer2::spanQuickCheckYes(unsigned short const*, unsigned short const*, UErrorCode&) const
icu_52::DecomposeNormalizer2::~DecomposeNormalizer2()
icu_52::DictionaryBreakEngine::DictionaryBreakEngine(unsigned int)
icu_52::DictionaryBreakEngine::findBreaks(UText*, int, int, signed char, int, icu_52::UStack&) const
icu_52::DictionaryBreakEngine::handles(int, int) const
icu_52::DictionaryBreakEngine::setCharacters(icu_52::UnicodeSet const&)
icu_52::DictionaryBreakEngine::~DictionaryBreakEngine()
icu_52::DictionaryData::TRANSFORM_NONE
icu_52::DictionaryData::TRANSFORM_OFFSET_MASK
icu_52::DictionaryData::TRANSFORM_TYPE_MASK
icu_52::DictionaryData::TRANSFORM_TYPE_OFFSET
icu_52::DictionaryData::TRIE_HAS_VALUES
icu_52::DictionaryData::TRIE_TYPE_BYTES
icu_52::DictionaryData::TRIE_TYPE_MASK
icu_52::DictionaryData::TRIE_TYPE_UCHARS
icu_52::DictionaryMatcher::~DictionaryMatcher()
icu_52::ErrorCode::assertSuccess() const
icu_52::ErrorCode::errorName() const
icu_52::ErrorCode::handleFailure() const
icu_52::ErrorCode::reset()
icu_52::ErrorCode::~ErrorCode()
icu_52::EventListener::getDynamicClassID() const
icu_52::EventListener::getStaticClassID()
icu_52::EventListener::getStaticClassID()::classID
icu_52::EventListener::~EventListener()
icu_52::FCDNormalizer2::hasBoundaryAfter(int) const
icu_52::FCDNormalizer2::hasBoundaryBefore(int) const
icu_52::FCDNormalizer2::isInert(int) const
icu_52::FCDNormalizer2::normalize(unsigned short const*, unsigned short const*, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::FCDNormalizer2::normalizeAndAppend(unsigned short const*, unsigned short const*, signed char, icu_52::UnicodeString&, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::FCDNormalizer2::spanQuickCheckYes(unsigned short const*, unsigned short const*, UErrorCode&) const
icu_52::FCDNormalizer2::~FCDNormalizer2()
icu_52::FIRST_PARAMETER
icu_52::FilteredNormalizer2::append(icu_52::UnicodeString&, icu_52::UnicodeString const&, UErrorCode&) const
icu_52::FilteredNormalizer2::composePair(int, int) const
icu_52::FilteredNormalizer2::getCombiningClass(int) const
icu_52::FilteredNormalizer2::getDecomposition(int, icu_52::UnicodeString&) const
icu_52::FilteredNormalizer2::getRawDecomposition(int, icu_52::UnicodeString&) const
icu_52::FilteredNormalizer2::hasBoundaryAfter(int) const
icu_52::FilteredNormalizer2::hasBoundaryBefore(int) const
icu_52::FilteredNormalizer2::isInert(int) const
icu_52::FilteredNormalizer2::isNormalized(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::FilteredNormalizer2::normalize(icu_52::UnicodeString const&, icu_52::UnicodeString&, UErrorCode&) const
icu_52::FilteredNormalizer2::normalize(icu_52::UnicodeString const&, icu_52::UnicodeString&, USetSpanCondition, UErrorCode&) const
icu_52::FilteredNormalizer2::normalizeSecondAndAppend(icu_52::UnicodeString&, icu_52::UnicodeString const&, UErrorCode&) const
icu_52::FilteredNormalizer2::normalizeSecondAndAppend(icu_52::UnicodeString&, icu_52::UnicodeString const&, signed char, UErrorCode&) const
icu_52::FilteredNormalizer2::quickCheck(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::FilteredNormalizer2::spanQuickCheckYes(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::FilteredNormalizer2::~FilteredNormalizer2()
icu_52::ForwardCharacterIterator::ForwardCharacterIterator()
icu_52::ForwardCharacterIterator::ForwardCharacterIterator(icu_52::ForwardCharacterIterator const&)
icu_52::ForwardCharacterIterator::~ForwardCharacterIterator()
icu_52::ForwardUTrie2StringIterator::next16()
icu_52::FullCaseFoldingIterator::FullCaseFoldingIterator()
icu_52::FullCaseFoldingIterator::next(icu_52::UnicodeString&)
icu_52::ICUBreakIteratorFactory::handleCreate(icu_52::Locale const&, int, icu_52::ICUService const*, UErrorCode&) const
icu_52::ICUBreakIteratorFactory::~ICUBreakIteratorFactory()
icu_52::ICUBreakIteratorService::cloneInstance(icu_52::UObject*) const
icu_52::ICUBreakIteratorService::handleDefault(icu_52::ICUServiceKey const&, icu_52::UnicodeString*, UErrorCode&) const
icu_52::ICUBreakIteratorService::isDefault() const
icu_52::ICUBreakIteratorService::~ICUBreakIteratorService()
icu_52::ICULanguageBreakFactory::ICULanguageBreakFactory(UErrorCode&)
icu_52::ICULanguageBreakFactory::getEngineFor(int, int)
icu_52::ICULanguageBreakFactory::loadDictionaryMatcherFor(UScriptCode, int)
icu_52::ICULanguageBreakFactory::loadEngineFor(int, int)
icu_52::ICULanguageBreakFactory::~ICULanguageBreakFactory()
icu_52::ICULocaleService::ICULocaleService()
icu_52::ICULocaleService::ICULocaleService(icu_52::UnicodeString const&)
icu_52::ICULocaleService::createKey(icu_52::UnicodeString const*, UErrorCode&) const
icu_52::ICULocaleService::createKey(icu_52::UnicodeString const*, int, UErrorCode&) const
icu_52::ICULocaleService::get(icu_52::Locale const&, UErrorCode&) const
icu_52::ICULocaleService::get(icu_52::Locale const&, icu_52::Locale*, UErrorCode&) const
icu_52::ICULocaleService::get(icu_52::Locale const&, int, UErrorCode&) const
icu_52::ICULocaleService::get(icu_52::Locale const&, int, icu_52::Locale*, UErrorCode&) const
icu_52::ICULocaleService::getAvailableLocales() const
icu_52::ICULocaleService::registerInstance(icu_52::UObject*, icu_52::Locale const&, UErrorCode&)
icu_52::ICULocaleService::registerInstance(icu_52::UObject*, icu_52::Locale const&, int, UErrorCode&)
icu_52::ICULocaleService::registerInstance(icu_52::UObject*, icu_52::Locale const&, int, int, UErrorCode&)
icu_52::ICULocaleService::registerInstance(icu_52::UObject*, icu_52::UnicodeString const&, signed char, UErrorCode&)
icu_52::ICULocaleService::validateFallbackLocale() const
icu_52::ICULocaleService::~ICULocaleService()
icu_52::ICUNotifier::ICUNotifier()
icu_52::ICUNotifier::addListener(icu_52::EventListener const*, UErrorCode&)
icu_52::ICUNotifier::notifyChanged()
icu_52::ICUNotifier::removeListener(icu_52::EventListener const*, UErrorCode&)
icu_52::ICUNotifier::~ICUNotifier()
icu_52::ICUResourceBundleFactory::ICUResourceBundleFactory()
icu_52::ICUResourceBundleFactory::ICUResourceBundleFactory(icu_52::UnicodeString const&)
icu_52::ICUResourceBundleFactory::getDynamicClassID() const
icu_52::ICUResourceBundleFactory::getStaticClassID()
icu_52::ICUResourceBundleFactory::getStaticClassID()::classID
icu_52::ICUResourceBundleFactory::getSupportedIDs(UErrorCode&) const
icu_52::ICUResourceBundleFactory::handleCreate(icu_52::Locale const&, int, icu_52::ICUService const*, UErrorCode&) const
icu_52::ICUResourceBundleFactory::~ICUResourceBundleFactory()
icu_52::ICUService::ICUService()
icu_52::ICUService::ICUService(icu_52::UnicodeString const&)
icu_52::ICUService::acceptsListener(icu_52::EventListener const&) const
icu_52::ICUService::clearCaches()
icu_52::ICUService::clearServiceCache()
icu_52::ICUService::countFactories() const
icu_52::ICUService::createKey(icu_52::UnicodeString const*, UErrorCode&) const
icu_52::ICUService::createSimpleFactory(icu_52::UObject*, icu_52::UnicodeString const&, signed char, UErrorCode&)
icu_52::ICUService::get(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::ICUService::get(icu_52::UnicodeString const&, icu_52::UnicodeString*, UErrorCode&) const
icu_52::ICUService::getDisplayName(icu_52::UnicodeString const&, icu_52::UnicodeString&) const
icu_52::ICUService::getDisplayName(icu_52::UnicodeString const&, icu_52::UnicodeString&, icu_52::Locale const&) const
icu_52::ICUService::getDisplayNames(icu_52::UVector&, UErrorCode&) const
icu_52::ICUService::getDisplayNames(icu_52::UVector&, icu_52::Locale const&, UErrorCode&) const
icu_52::ICUService::getDisplayNames(icu_52::UVector&, icu_52::Locale const&, icu_52::UnicodeString const*, UErrorCode&) const
icu_52::ICUService::getKey(icu_52::ICUServiceKey&, UErrorCode&) const
icu_52::ICUService::getKey(icu_52::ICUServiceKey&, icu_52::UnicodeString*, UErrorCode&) const
icu_52::ICUService::getKey(icu_52::ICUServiceKey&, icu_52::UnicodeString*, icu_52::ICUServiceFactory const*, UErrorCode&) const
icu_52::ICUService::getName(icu_52::UnicodeString&) const
icu_52::ICUService::getTimestamp() const
icu_52::ICUService::getVisibleIDMap(UErrorCode&) const
icu_52::ICUService::getVisibleIDs(icu_52::UVector&, UErrorCode&) const
icu_52::ICUService::getVisibleIDs(icu_52::UVector&, icu_52::UnicodeString const*, UErrorCode&) const
icu_52::ICUService::handleDefault(icu_52::ICUServiceKey const&, icu_52::UnicodeString*, UErrorCode&) const
icu_52::ICUService::isDefault() const
icu_52::ICUService::notifyListener(icu_52::EventListener&) const
icu_52::ICUService::reInitializeFactories()
icu_52::ICUService::registerFactory(icu_52::ICUServiceFactory*, UErrorCode&)
icu_52::ICUService::registerInstance(icu_52::UObject*, icu_52::UnicodeString const&, UErrorCode&)
icu_52::ICUService::registerInstance(icu_52::UObject*, icu_52::UnicodeString const&, signed char, UErrorCode&)
icu_52::ICUService::reset()
icu_52::ICUService::unregister(void const*, UErrorCode&)
icu_52::ICUService::~ICUService()
icu_52::ICUServiceFactory::~ICUServiceFactory()
icu_52::ICUServiceKey::ICUServiceKey(icu_52::UnicodeString const&)
icu_52::ICUServiceKey::PREFIX_DELIMITER
icu_52::ICUServiceKey::canonicalID(icu_52::UnicodeString&) const
icu_52::ICUServiceKey::currentDescriptor(icu_52::UnicodeString&) const
icu_52::ICUServiceKey::currentID(icu_52::UnicodeString&) const
icu_52::ICUServiceKey::fallback()
icu_52::ICUServiceKey::getDynamicClassID() const
icu_52::ICUServiceKey::getID() const
icu_52::ICUServiceKey::getStaticClassID()
icu_52::ICUServiceKey::getStaticClassID()::classID
icu_52::ICUServiceKey::isFallbackOf(icu_52::UnicodeString const&) const
icu_52::ICUServiceKey::parsePrefix(icu_52::UnicodeString&)
icu_52::ICUServiceKey::parseSuffix(icu_52::UnicodeString&)
icu_52::ICUServiceKey::prefix(icu_52::UnicodeString&) const
icu_52::ICUServiceKey::~ICUServiceKey()
icu_52::ICU_Utility::appendNumber(icu_52::UnicodeString&, int, int, int)
icu_52::ICU_Utility::appendToRule(icu_52::UnicodeString&, icu_52::UnicodeMatcher const*, signed char, icu_52::UnicodeString&)
icu_52::ICU_Utility::appendToRule(icu_52::UnicodeString&, icu_52::UnicodeString const&, signed char, signed char, icu_52::UnicodeString&)
icu_52::ICU_Utility::appendToRule(icu_52::UnicodeString&, int, signed char, signed char, icu_52::UnicodeString&)
icu_52::ICU_Utility::escapeUnprintable(icu_52::UnicodeString&, int)
icu_52::ICU_Utility::isUnprintable(int)
icu_52::ICU_Utility::parseChar(icu_52::UnicodeString const&, int&, unsigned short)
icu_52::ICU_Utility::parseInteger(icu_52::UnicodeString const&, int&, int)
icu_52::ICU_Utility::parseNumber(icu_52::UnicodeString const&, int&, signed char)
icu_52::ICU_Utility::parsePattern(icu_52::UnicodeString const&, icu_52::Replaceable const&, int, int)
icu_52::ICU_Utility::parsePattern(icu_52::UnicodeString const&, int, int, icu_52::UnicodeString const&, int*)
icu_52::ICU_Utility::parseUnicodeIdentifier(icu_52::UnicodeString const&, int&)
icu_52::ICU_Utility::skipWhitespace(icu_52::UnicodeString const&, int&, signed char)
icu_52::IDNA::createUTS46Instance(unsigned int, UErrorCode&)
icu_52::IDNA::labelToASCII_UTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::IDNA::labelToUnicodeUTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::IDNA::nameToASCII_UTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::IDNA::nameToUnicodeUTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::IDNA::~IDNA()
icu_52::KeywordEnumeration::clone() const
icu_52::KeywordEnumeration::count(UErrorCode&) const
icu_52::KeywordEnumeration::fgClassID
icu_52::KeywordEnumeration::getDynamicClassID() const
icu_52::KeywordEnumeration::next(int*, UErrorCode&)
icu_52::KeywordEnumeration::reset(UErrorCode&)
icu_52::KeywordEnumeration::snext(UErrorCode&)
icu_52::KeywordEnumeration::~KeywordEnumeration()
icu_52::KhmerBreakEngine::KhmerBreakEngine(icu_52::DictionaryMatcher*, UErrorCode&)
icu_52::KhmerBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_52::UStack&) const
icu_52::KhmerBreakEngine::~KhmerBreakEngine()
icu_52::LanguageBreakEngine::LanguageBreakEngine()
icu_52::LanguageBreakEngine::~LanguageBreakEngine()
icu_52::LanguageBreakFactory::LanguageBreakFactory()
icu_52::LanguageBreakFactory::~LanguageBreakFactory()
icu_52::LaoBreakEngine::LaoBreakEngine(icu_52::DictionaryMatcher*, UErrorCode&)
icu_52::LaoBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_52::UStack&) const
icu_52::LaoBreakEngine::~LaoBreakEngine()
icu_52::ListFormatter::ListFormatter(icu_52::ListFormatData const*)
icu_52::ListFormatter::ListFormatter(icu_52::ListFormatter const&)
icu_52::ListFormatter::addNewString(icu_52::UnicodeString const&, icu_52::UnicodeString&, icu_52::UnicodeString const&, UErrorCode&) const
icu_52::ListFormatter::createInstance(UErrorCode&)
icu_52::ListFormatter::createInstance(icu_52::Locale const&, UErrorCode&)
icu_52::ListFormatter::createInstance(icu_52::Locale const&, char const*, UErrorCode&)
icu_52::ListFormatter::format(icu_52::UnicodeString const*, int, icu_52::UnicodeString&, UErrorCode&) const
icu_52::ListFormatter::getListFormatData(icu_52::Locale const&, char const*, UErrorCode&)
icu_52::ListFormatter::initializeHash(UErrorCode&)
icu_52::ListFormatter::operator=(icu_52::ListFormatter const&)
icu_52::ListFormatter::~ListFormatter()
icu_52::Locale::Locale()
icu_52::Locale::Locale(char const*, char const*, char const*, char const*)
icu_52::Locale::Locale(icu_52::Locale const&)
icu_52::Locale::Locale(icu_52::Locale::ELocaleType)
icu_52::Locale::clone() const
icu_52::Locale::createCanonical(char const*)
icu_52::Locale::createFromName(char const*)
icu_52::Locale::createKeywords(UErrorCode&) const
icu_52::Locale::getAvailableLocales(int&)
icu_52::Locale::getBaseName() const
icu_52::Locale::getCanada()
icu_52::Locale::getCanadaFrench()
icu_52::Locale::getChina()
icu_52::Locale::getChinese()
icu_52::Locale::getDefault()
icu_52::Locale::getDisplayCountry(icu_52::Locale const&, icu_52::UnicodeString&) const
icu_52::Locale::getDisplayCountry(icu_52::UnicodeString&) const
icu_52::Locale::getDisplayLanguage(icu_52::Locale const&, icu_52::UnicodeString&) const
icu_52::Locale::getDisplayLanguage(icu_52::UnicodeString&) const
icu_52::Locale::getDisplayName(icu_52::Locale const&, icu_52::UnicodeString&) const
icu_52::Locale::getDisplayName(icu_52::UnicodeString&) const
icu_52::Locale::getDisplayScript(icu_52::Locale const&, icu_52::UnicodeString&) const
icu_52::Locale::getDisplayScript(icu_52::UnicodeString&) const
icu_52::Locale::getDisplayVariant(icu_52::Locale const&, icu_52::UnicodeString&) const
icu_52::Locale::getDisplayVariant(icu_52::UnicodeString&) const
icu_52::Locale::getDynamicClassID() const
icu_52::Locale::getEnglish()
icu_52::Locale::getFrance()
icu_52::Locale::getFrench()
icu_52::Locale::getGerman()
icu_52::Locale::getGermany()
icu_52::Locale::getISO3Country() const
icu_52::Locale::getISO3Language() const
icu_52::Locale::getISOCountries()
icu_52::Locale::getISOLanguages()
icu_52::Locale::getItalian()
icu_52::Locale::getItaly()
icu_52::Locale::getJapan()
icu_52::Locale::getJapanese()
icu_52::Locale::getKeywordValue(char const*, char*, int, UErrorCode&) const
icu_52::Locale::getKorea()
icu_52::Locale::getKorean()
icu_52::Locale::getLCID() const
icu_52::Locale::getLocale(int)
icu_52::Locale::getLocaleCache()
icu_52::Locale::getPRC()
icu_52::Locale::getRoot()
icu_52::Locale::getSimplifiedChinese()
icu_52::Locale::getStaticClassID()
icu_52::Locale::getStaticClassID()::classID
icu_52::Locale::getTaiwan()
icu_52::Locale::getTraditionalChinese()
icu_52::Locale::getUK()
icu_52::Locale::getUS()
icu_52::Locale::hashCode() const
icu_52::Locale::init(char const*, signed char)
icu_52::Locale::operator=(icu_52::Locale const&)
icu_52::Locale::operator==(icu_52::Locale const&) const
icu_52::Locale::setDefault(icu_52::Locale const&, UErrorCode&)
icu_52::Locale::setFromPOSIXID(char const*)
icu_52::Locale::setKeywordValue(char const*, char const*, UErrorCode&)
icu_52::Locale::setToBogus()
icu_52::Locale::~Locale()
icu_52::LocaleBased::getLocale(ULocDataLocaleType, UErrorCode&) const
icu_52::LocaleBased::getLocaleID(ULocDataLocaleType, UErrorCode&) const
icu_52::LocaleBased::setLocaleIDs(char const*, char const*)
icu_52::LocaleKey::LocaleKey(icu_52::UnicodeString const&, icu_52::UnicodeString const&, icu_52::UnicodeString const*, int)
icu_52::LocaleKey::canonicalID(icu_52::UnicodeString&) const
icu_52::LocaleKey::canonicalLocale(icu_52::Locale&) const
icu_52::LocaleKey::createWithCanonicalFallback(icu_52::UnicodeString const*, icu_52::UnicodeString const*, UErrorCode&)
icu_52::LocaleKey::createWithCanonicalFallback(icu_52::UnicodeString const*, icu_52::UnicodeString const*, int, UErrorCode&)
icu_52::LocaleKey::currentDescriptor(icu_52::UnicodeString&) const
icu_52::LocaleKey::currentID(icu_52::UnicodeString&) const
icu_52::LocaleKey::currentLocale(icu_52::Locale&) const
icu_52::LocaleKey::fallback()
icu_52::LocaleKey::getDynamicClassID() const
icu_52::LocaleKey::getStaticClassID()
icu_52::LocaleKey::getStaticClassID()::classID
icu_52::LocaleKey::isFallbackOf(icu_52::UnicodeString const&) const
icu_52::LocaleKey::kind() const
icu_52::LocaleKey::prefix(icu_52::UnicodeString&) const
icu_52::LocaleKey::~LocaleKey()
icu_52::LocaleKeyFactory::LocaleKeyFactory(int)
icu_52::LocaleKeyFactory::LocaleKeyFactory(int, icu_52::UnicodeString const&)
icu_52::LocaleKeyFactory::create(icu_52::ICUServiceKey const&, icu_52::ICUService const*, UErrorCode&) const
icu_52::LocaleKeyFactory::getDisplayName(icu_52::UnicodeString const&, icu_52::Locale const&, icu_52::UnicodeString&) const
icu_52::LocaleKeyFactory::getDisplayName(icu_52::UnicodeString const&, icu_52::Locale const&, icu_52::UnicodeString&) const [clone .part.0]
icu_52::LocaleKeyFactory::getDynamicClassID() const
icu_52::LocaleKeyFactory::getStaticClassID()
icu_52::LocaleKeyFactory::getStaticClassID()::classID
icu_52::LocaleKeyFactory::getSupportedIDs(UErrorCode&) const
icu_52::LocaleKeyFactory::handleCreate(icu_52::Locale const&, int, icu_52::ICUService const*, UErrorCode&) const
icu_52::LocaleKeyFactory::handlesKey(icu_52::ICUServiceKey const&, UErrorCode&) const
icu_52::LocaleKeyFactory::updateVisibleIDs(icu_52::Hashtable&, UErrorCode&) const
icu_52::LocaleKeyFactory::~LocaleKeyFactory()
icu_52::LocaleUtility::canonicalLocaleString(icu_52::UnicodeString const*, icu_52::UnicodeString&)
icu_52::LocaleUtility::getAvailableLocaleNames(icu_52::UnicodeString const&)
icu_52::LocaleUtility::initLocaleFromName(icu_52::UnicodeString const&, icu_52::Locale&)
icu_52::LocaleUtility::initNameFromLocale(icu_52::Locale const&, icu_52::UnicodeString&)
icu_52::LocaleUtility::isFallbackOf(icu_52::UnicodeString const&, icu_52::UnicodeString const&)
icu_52::MaybeStackArray<char, 40>::MaybeStackArray()
icu_52::MaybeStackArray<char, 40>::MaybeStackArray(icu_52::MaybeStackArray<char, 40> const&)
icu_52::MaybeStackArray<char, 40>::aliasInstead(char*, int)
icu_52::MaybeStackArray<char, 40>::getAlias() const
icu_52::MaybeStackArray<char, 40>::getArrayLimit() const
icu_52::MaybeStackArray<char, 40>::getCapacity() const
icu_52::MaybeStackArray<char, 40>::operator!=(icu_52::MaybeStackArray<char, 40> const&)
icu_52::MaybeStackArray<char, 40>::operator=(icu_52::MaybeStackArray<char, 40> const&)
icu_52::MaybeStackArray<char, 40>::operator==(icu_52::MaybeStackArray<char, 40> const&)
icu_52::MaybeStackArray<char, 40>::operator[](long)
icu_52::MaybeStackArray<char, 40>::operator[](long) const
icu_52::MaybeStackArray<char, 40>::orphanOrClone(int, int&)
icu_52::MaybeStackArray<char, 40>::releaseArray()
icu_52::MaybeStackArray<char, 40>::resize(int, int)
icu_52::MaybeStackArray<char, 40>::~MaybeStackArray()
icu_52::MessageImpl::appendReducedApostrophes(icu_52::UnicodeString const&, int, int, icu_52::UnicodeString&)
icu_52::MessageImpl::appendSubMessageWithoutSkipSyntax(icu_52::MessagePattern const&, int, icu_52::UnicodeString&)
icu_52::MessagePattern::MessagePattern(UErrorCode&)
icu_52::MessagePattern::MessagePattern(UMessagePatternApostropheMode, UErrorCode&)
icu_52::MessagePattern::MessagePattern(icu_52::MessagePattern const&)
icu_52::MessagePattern::MessagePattern(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::MessagePattern::Part::operator==(icu_52::MessagePattern::Part const&) const
icu_52::MessagePattern::addArgDoublePart(double, int, int, UErrorCode&)
icu_52::MessagePattern::addLimitPart(int, UMessagePatternPartType, int, int, int, UErrorCode&)
icu_52::MessagePattern::addPart(UMessagePatternPartType, int, int, int, UErrorCode&)
icu_52::MessagePattern::autoQuoteApostropheDeep() const
icu_52::MessagePattern::clear()
icu_52::MessagePattern::copyStorage(icu_52::MessagePattern const&, UErrorCode&)
icu_52::MessagePattern::getNumericValue(icu_52::MessagePattern::Part const&) const
icu_52::MessagePattern::getPluralOffset(int) const
icu_52::MessagePattern::hashCode() const
icu_52::MessagePattern::inMessageFormatPattern(int)
icu_52::MessagePattern::inTopLevelChoiceMessage(int, UMessagePatternArgType)
icu_52::MessagePattern::init(UErrorCode&)
icu_52::MessagePattern::isArgTypeChar(int)
icu_52::MessagePattern::isChoice(int)
icu_52::MessagePattern::isOrdinal(int)
icu_52::MessagePattern::isPlural(int)
icu_52::MessagePattern::isSelect(int)
icu_52::MessagePattern::operator=(icu_52::MessagePattern const&)
icu_52::MessagePattern::operator==(icu_52::MessagePattern const&) const
icu_52::MessagePattern::parse(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::MessagePattern::parseArg(int, int, int, UParseError*, UErrorCode&)
icu_52::MessagePattern::parseArgNumber(icu_52::UnicodeString const&, int, int)
icu_52::MessagePattern::parseChoiceStyle(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::MessagePattern::parseChoiceStyle(int, int, UParseError*, UErrorCode&)
icu_52::MessagePattern::parseDouble(int, int, signed char, UParseError*, UErrorCode&)
icu_52::MessagePattern::parseMessage(int, int, int, UMessagePatternArgType, UParseError*, UErrorCode&)
icu_52::MessagePattern::parsePluralOrSelectStyle(UMessagePatternArgType, int, int, UParseError*, UErrorCode&)
icu_52::MessagePattern::parsePluralStyle(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::MessagePattern::parseSelectStyle(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::MessagePattern::parseSimpleStyle(int, UParseError*, UErrorCode&)
icu_52::MessagePattern::postParse()
icu_52::MessagePattern::preParse(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::MessagePattern::setParseError(UParseError*, int)
icu_52::MessagePattern::skipDouble(int)
icu_52::MessagePattern::skipIdentifier(int)
icu_52::MessagePattern::skipWhiteSpace(int)
icu_52::MessagePattern::validateArgumentName(icu_52::UnicodeString const&)
icu_52::MessagePattern::~MessagePattern()
icu_52::NoopNormalizer2::append(icu_52::UnicodeString&, icu_52::UnicodeString const&, UErrorCode&) const
icu_52::NoopNormalizer2::getDecomposition(int, icu_52::UnicodeString&) const
icu_52::NoopNormalizer2::hasBoundaryAfter(int) const
icu_52::NoopNormalizer2::hasBoundaryBefore(int) const
icu_52::NoopNormalizer2::isInert(int) const
icu_52::NoopNormalizer2::isNormalized(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::NoopNormalizer2::normalize(icu_52::UnicodeString const&, icu_52::UnicodeString&, UErrorCode&) const
icu_52::NoopNormalizer2::normalizeSecondAndAppend(icu_52::UnicodeString&, icu_52::UnicodeString const&, UErrorCode&) const
icu_52::NoopNormalizer2::quickCheck(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::NoopNormalizer2::spanQuickCheckYes(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::NoopNormalizer2::~NoopNormalizer2()
icu_52::Norm2AllModes::createInstance(char const*, char const*, UErrorCode&)
icu_52::Normalizer2::composePair(int, int) const
icu_52::Normalizer2::getCombiningClass(int) const
icu_52::Normalizer2::getInstance(char const*, char const*, UNormalization2Mode, UErrorCode&)
icu_52::Normalizer2::getNFCInstance(UErrorCode&)
icu_52::Normalizer2::getNFDInstance(UErrorCode&)
icu_52::Normalizer2::getNFKCCasefoldInstance(UErrorCode&)
icu_52::Normalizer2::getNFKCInstance(UErrorCode&)
icu_52::Normalizer2::getNFKDInstance(UErrorCode&)
icu_52::Normalizer2::getRawDecomposition(int, icu_52::UnicodeString&) const
icu_52::Normalizer2::~Normalizer2()
icu_52::Normalizer2Factory::getFCCInstance(UErrorCode&)
icu_52::Normalizer2Factory::getFCDInstance(UErrorCode&)
icu_52::Normalizer2Factory::getImpl(icu_52::Normalizer2 const*)
icu_52::Normalizer2Factory::getInstance(UNormalizationMode, UErrorCode&)
icu_52::Normalizer2Factory::getNFCImpl(UErrorCode&)
icu_52::Normalizer2Factory::getNFCInstance(UErrorCode&)
icu_52::Normalizer2Factory::getNFDInstance(UErrorCode&)
icu_52::Normalizer2Factory::getNFKCImpl(UErrorCode&)
icu_52::Normalizer2Factory::getNFKCInstance(UErrorCode&)
icu_52::Normalizer2Factory::getNFKC_CFImpl(UErrorCode&)
icu_52::Normalizer2Factory::getNFKC_CFInstance(UErrorCode&)
icu_52::Normalizer2Factory::getNFKDInstance(UErrorCode&)
icu_52::Normalizer2Factory::getNoopInstance(UErrorCode&)
icu_52::Normalizer2Impl::addCanonIterPropertyStarts(USetAdder const*, UErrorCode&) const
icu_52::Normalizer2Impl::addComposites(unsigned short const*, icu_52::UnicodeSet&) const
icu_52::Normalizer2Impl::addPropertyStarts(USetAdder const*, UErrorCode&) const
icu_52::Normalizer2Impl::combine(unsigned short const*, int)
icu_52::Normalizer2Impl::compose(unsigned short const*, unsigned short const*, signed char, signed char, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::Normalizer2Impl::composeAndAppend(unsigned short const*, unsigned short const*, signed char, signed char, icu_52::UnicodeString&, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::Normalizer2Impl::composePair(int, int) const
icu_52::Normalizer2Impl::composeQuickCheck(unsigned short const*, unsigned short const*, signed char, UNormalizationCheckResult*) const
icu_52::Normalizer2Impl::copyLowPrefixFromNulTerminated(unsigned short const*, int, icu_52::ReorderingBuffer*, UErrorCode&) const
icu_52::Normalizer2Impl::decompose(int, unsigned short, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::Normalizer2Impl::decompose(unsigned short const*, unsigned short const*, icu_52::ReorderingBuffer*, UErrorCode&) const
icu_52::Normalizer2Impl::decomposeAndAppend(unsigned short const*, unsigned short const*, signed char, icu_52::UnicodeString&, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::Normalizer2Impl::decomposeShort(unsigned short const*, unsigned short const*, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::Normalizer2Impl::ensureCanonIterData(UErrorCode&) const
icu_52::Normalizer2Impl::findNextCompBoundary(unsigned short const*, unsigned short const*) const
icu_52::Normalizer2Impl::findNextFCDBoundary(unsigned short const*, unsigned short const*) const
icu_52::Normalizer2Impl::findPreviousCompBoundary(unsigned short const*, unsigned short const*) const
icu_52::Normalizer2Impl::findPreviousFCDBoundary(unsigned short const*, unsigned short const*) const
icu_52::Normalizer2Impl::getCanonStartSet(int) const
icu_52::Normalizer2Impl::getCanonStartSet(int, icu_52::UnicodeSet&) const
icu_52::Normalizer2Impl::getCanonValue(int) const
icu_52::Normalizer2Impl::getDecomposition(int, unsigned short*, int&) const
icu_52::Normalizer2Impl::getFCD16FromNormData(int) const
icu_52::Normalizer2Impl::getRawDecomposition(int, unsigned short*, int&) const
icu_52::Normalizer2Impl::getTrailCCFromCompYesAndZeroCC(unsigned short const*, unsigned short const*) const
icu_52::Normalizer2Impl::hasCompBoundaryAfter(int, signed char, signed char) const
icu_52::Normalizer2Impl::hasCompBoundaryBefore(int, unsigned short) const
icu_52::Normalizer2Impl::hasDecompBoundary(int, signed char) const
icu_52::Normalizer2Impl::isAcceptable(void*, char const*, char const*, UDataInfo const*)
icu_52::Normalizer2Impl::isCanonSegmentStarter(int) const
icu_52::Normalizer2Impl::load(char const*, char const*, UErrorCode&)
icu_52::Normalizer2Impl::makeCanonIterDataFromNorm16(int, int, unsigned short, icu_52::CanonIterData&, UErrorCode&) const
icu_52::Normalizer2Impl::makeFCD(unsigned short const*, unsigned short const*, icu_52::ReorderingBuffer*, UErrorCode&) const
icu_52::Normalizer2Impl::makeFCDAndAppend(unsigned short const*, unsigned short const*, signed char, icu_52::UnicodeString&, icu_52::ReorderingBuffer&, UErrorCode&) const
icu_52::Normalizer2Impl::recompose(icu_52::ReorderingBuffer&, int, signed char) const
icu_52::Normalizer2Impl::~Normalizer2Impl()
icu_52::Normalizer2WithImpl::append(icu_52::UnicodeString&, icu_52::UnicodeString const&, UErrorCode&) const
icu_52::Normalizer2WithImpl::composePair(int, int) const
icu_52::Normalizer2WithImpl::getCombiningClass(int) const
icu_52::Normalizer2WithImpl::getDecomposition(int, icu_52::UnicodeString&) const
icu_52::Normalizer2WithImpl::getQuickCheck(int) const
icu_52::Normalizer2WithImpl::getRawDecomposition(int, icu_52::UnicodeString&) const
icu_52::Normalizer2WithImpl::isNormalized(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::Normalizer2WithImpl::normalize(icu_52::UnicodeString const&, icu_52::UnicodeString&, UErrorCode&) const
icu_52::Normalizer2WithImpl::normalizeSecondAndAppend(icu_52::UnicodeString&, icu_52::UnicodeString const&, UErrorCode&) const
icu_52::Normalizer2WithImpl::quickCheck(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::Normalizer2WithImpl::spanQuickCheckYes(icu_52::UnicodeString const&, UErrorCode&) const
icu_52::Normalizer2WithImpl::~Normalizer2WithImpl()
icu_52::Normalizer::Normalizer(icu_52::CharacterIterator const&, UNormalizationMode)
icu_52::Normalizer::Normalizer(icu_52::Normalizer const&)
icu_52::Normalizer::Normalizer(icu_52::UnicodeString const&, UNormalizationMode)
icu_52::Normalizer::Normalizer(unsigned short const*, int, UNormalizationMode)
icu_52::Normalizer::clearBuffer()
icu_52::Normalizer::clone() const
icu_52::Normalizer::compose(icu_52::UnicodeString const&, signed char, int, icu_52::UnicodeString&, UErrorCode&)
icu_52::Normalizer::concatenate(icu_52::UnicodeString const&, icu_52::UnicodeString const&, icu_52::UnicodeString&, UNormalizationMode, int, UErrorCode&)
icu_52::Normalizer::current()
icu_52::Normalizer::decompose(icu_52::UnicodeString const&, signed char, int, icu_52::UnicodeString&, UErrorCode&)
icu_52::Normalizer::endIndex() const
icu_52::Normalizer::first()
icu_52::Normalizer::getDynamicClassID() const
icu_52::Normalizer::getIndex() const
icu_52::Normalizer::getOption(int) const
icu_52::Normalizer::getStaticClassID()
icu_52::Normalizer::getStaticClassID()::classID
icu_52::Normalizer::getText(icu_52::UnicodeString&)
icu_52::Normalizer::getUMode() const
icu_52::Normalizer::hashCode() const
icu_52::Normalizer::init()
icu_52::Normalizer::isNormalized(icu_52::UnicodeString const&, UNormalizationMode, int, UErrorCode&)
icu_52::Normalizer::last()
icu_52::Normalizer::next()
icu_52::Normalizer::nextNormalize()
icu_52::Normalizer::normalize(icu_52::UnicodeString const&, UNormalizationMode, int, icu_52::UnicodeString&, UErrorCode&)
icu_52::Normalizer::operator==(icu_52::Normalizer const&) const
icu_52::Normalizer::previous()
icu_52::Normalizer::previousNormalize()
icu_52::Normalizer::quickCheck(icu_52::UnicodeString const&, UNormalizationMode, int, UErrorCode&)
icu_52::Normalizer::reset()
icu_52::Normalizer::setIndexOnly(int)
icu_52::Normalizer::setMode(UNormalizationMode)
icu_52::Normalizer::setOption(int, signed char)
icu_52::Normalizer::setText(icu_52::CharacterIterator const&, UErrorCode&)
icu_52::Normalizer::setText(icu_52::UnicodeString const&, UErrorCode&)
icu_52::Normalizer::setText(unsigned short const*, int, UErrorCode&)
icu_52::Normalizer::startIndex() const
icu_52::Normalizer::~Normalizer()
icu_52::ParsePosition::clone() const
icu_52::ParsePosition::getDynamicClassID() const
icu_52::ParsePosition::getStaticClassID()
icu_52::ParsePosition::getStaticClassID()::classID
icu_52::ParsePosition::~ParsePosition()
icu_52::PatternProps::isIdentifier(unsigned short const*, int)
icu_52::PatternProps::isSyntax(int)
icu_52::PatternProps::isSyntaxOrWhiteSpace(int)
icu_52::PatternProps::isWhiteSpace(int)
icu_52::PatternProps::skipIdentifier(unsigned short const*, int)
icu_52::PatternProps::skipWhiteSpace(unsigned short const*, int)
icu_52::PatternProps::trimWhiteSpace(unsigned short const*, int&)
icu_52::PropNameData::bytesTries
icu_52::PropNameData::containsName(icu_52::BytesTrie&, char const*)
icu_52::PropNameData::findProperty(int)
icu_52::PropNameData::findPropertyValueNameGroup(int, int)
icu_52::PropNameData::getName(char const*, int)
icu_52::PropNameData::getPropertyEnum(char const*)
icu_52::PropNameData::getPropertyName(int, int)
icu_52::PropNameData::getPropertyOrValueEnum(int, char const*)
icu_52::PropNameData::getPropertyValueEnum(int, char const*)
icu_52::PropNameData::getPropertyValueName(int, int, int)
icu_52::PropNameData::indexes
icu_52::PropNameData::nameGroups
icu_52::PropNameData::valueMaps
icu_52::RBBIDataWrapper::RBBIDataWrapper(UDataMemory*, UErrorCode&)
icu_52::RBBIDataWrapper::RBBIDataWrapper(icu_52::RBBIDataHeader const*, UErrorCode&)
icu_52::RBBIDataWrapper::RBBIDataWrapper(icu_52::RBBIDataHeader const*, icu_52::RBBIDataWrapper::EDontAdopt, UErrorCode&)
icu_52::RBBIDataWrapper::addReference()
icu_52::RBBIDataWrapper::getRuleSourceString() const
icu_52::RBBIDataWrapper::hashCode()
icu_52::RBBIDataWrapper::init(icu_52::RBBIDataHeader const*, UErrorCode&)
icu_52::RBBIDataWrapper::operator==(icu_52::RBBIDataWrapper const&) const
icu_52::RBBIDataWrapper::removeReference()
icu_52::RBBIDataWrapper::~RBBIDataWrapper()
icu_52::RBBINode::RBBINode(icu_52::RBBINode const&)
icu_52::RBBINode::RBBINode(icu_52::RBBINode::NodeType)
icu_52::RBBINode::cloneTree()
icu_52::RBBINode::findNodes(icu_52::UVector*, icu_52::RBBINode::NodeType, UErrorCode&)
icu_52::RBBINode::flattenSets()
icu_52::RBBINode::flattenVariables()
icu_52::RBBINode::~RBBINode()
icu_52::RBBIRuleBuilder::RBBIRuleBuilder(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::RBBIRuleBuilder::createRuleBasedBreakIterator(icu_52::UnicodeString const&, UParseError*, UErrorCode&)
icu_52::RBBIRuleBuilder::flattenData()
icu_52::RBBIRuleBuilder::~RBBIRuleBuilder()
icu_52::RBBIRuleScanner::RBBIRuleScanner(icu_52::RBBIRuleBuilder*)
icu_52::RBBIRuleScanner::doParseActions(int)
icu_52::RBBIRuleScanner::error(UErrorCode)
icu_52::RBBIRuleScanner::findSetFor(icu_52::UnicodeString const&, icu_52::RBBINode*, icu_52::UnicodeSet*)
icu_52::RBBIRuleScanner::fixOpStack(icu_52::RBBINode::OpPrecedence)
icu_52::RBBIRuleScanner::nextChar(icu_52::RBBIRuleScanner::RBBIRuleChar&)
icu_52::RBBIRuleScanner::nextCharLL()
icu_52::RBBIRuleScanner::parse()
icu_52::RBBIRuleScanner::pushNewNode(icu_52::RBBINode::NodeType)
icu_52::RBBIRuleScanner::scanSet()
icu_52::RBBIRuleScanner::stripRules(icu_52::UnicodeString const&)
icu_52::RBBIRuleScanner::~RBBIRuleScanner()
icu_52::RBBISetBuilder::RBBISetBuilder(icu_52::RBBIRuleBuilder*)
icu_52::RBBISetBuilder::addValToSet(icu_52::RBBINode*, unsigned int)
icu_52::RBBISetBuilder::addValToSets(icu_52::UVector*, unsigned int)
icu_52::RBBISetBuilder::build()
icu_52::RBBISetBuilder::build()::bofUString
icu_52::RBBISetBuilder::build()::eofUString
icu_52::RBBISetBuilder::getFirstChar(int) const
icu_52::RBBISetBuilder::getNumCharCategories() const
icu_52::RBBISetBuilder::getTrieSize()
icu_52::RBBISetBuilder::sawBOF() const
icu_52::RBBISetBuilder::serializeTrie(unsigned char*)
icu_52::RBBISetBuilder::~RBBISetBuilder()
icu_52::RBBIStateDescriptor::RBBIStateDescriptor(int, UErrorCode*)
icu_52::RBBIStateDescriptor::~RBBIStateDescriptor()
icu_52::RBBISymbolTable::RBBISymbolTable(icu_52::RBBIRuleScanner*, icu_52::UnicodeString const&, UErrorCode&)
icu_52::RBBISymbolTable::addEntry(icu_52::UnicodeString const&, icu_52::RBBINode*, UErrorCode&)
icu_52::RBBISymbolTable::lookup(icu_52::UnicodeString const&) const
icu_52::RBBISymbolTable::lookupMatcher(int) const
icu_52::RBBISymbolTable::lookupNode(icu_52::UnicodeString const&) const
icu_52::RBBISymbolTable::parseReference(icu_52::UnicodeString const&, icu_52::ParsePosition&, int) const
icu_52::RBBISymbolTable::~RBBISymbolTable()
icu_52::RBBISymbolTableEntry::RBBISymbolTableEntry()
icu_52::RBBISymbolTableEntry::~RBBISymbolTableEntry()
icu_52::RBBITableBuilder::RBBITableBuilder(icu_52::RBBIRuleBuilder*, icu_52::RBBINode**)
icu_52::RBBITableBuilder::bofFixup()
icu_52::RBBITableBuilder::build()
icu_52::RBBITableBuilder::buildStateTable()
icu_52::RBBITableBuilder::calcChainedFollowPos(icu_52::RBBINode*)
icu_52::RBBITableBuilder::calcFirstPos(icu_52::RBBINode*)
icu_52::RBBITableBuilder::calcFollowPos(icu_52::RBBINode*)
icu_52::RBBITableBuilder::calcLastPos(icu_52::RBBINode*)
icu_52::RBBITableBuilder::calcNullable(icu_52::RBBINode*)
icu_52::RBBITableBuilder::exportTable(void*)
icu_52::RBBITableBuilder::flagAcceptingStates()
icu_52::RBBITableBuilder::flagLookAheadStates()
icu_52::RBBITableBuilder::flagTaggedStates()
icu_52::RBBITableBuilder::getTableSize() const
icu_52::RBBITableBuilder::mergeRuleStatusVals()
icu_52::RBBITableBuilder::setAdd(icu_52::UVector*, icu_52::UVector*)
icu_52::RBBITableBuilder::setEquals(icu_52::UVector*, icu_52::UVector*)
icu_52::RBBITableBuilder::sortedAdd(icu_52::UVector**, int)
icu_52::RBBITableBuilder::~RBBITableBuilder()
icu_52::RangeDescriptor::RangeDescriptor(UErrorCode&)
icu_52::RangeDescriptor::RangeDescriptor(icu_52::RangeDescriptor const&, UErrorCode&)
icu_52::RangeDescriptor::setDictionaryFlag()
icu_52::RangeDescriptor::split(int, UErrorCode&)
icu_52::RangeDescriptor::~RangeDescriptor()
icu_52::ReorderingBuffer::append(unsigned short const*, int, unsigned char, unsigned char, UErrorCode&)
icu_52::ReorderingBuffer::appendSupplementary(int, unsigned char, UErrorCode&)
icu_52::ReorderingBuffer::appendZeroCC(int, UErrorCode&)
icu_52::ReorderingBuffer::appendZeroCC(unsigned short const*, unsigned short const*, UErrorCode&)
icu_52::ReorderingBuffer::equals(unsigned short const*, unsigned short const*) const
icu_52::ReorderingBuffer::init(int, UErrorCode&)
icu_52::ReorderingBuffer::insert(int, unsigned char)
icu_52::ReorderingBuffer::previousCC()
icu_52::ReorderingBuffer::remove()
icu_52::ReorderingBuffer::removeSuffix(int)
icu_52::ReorderingBuffer::resize(int, UErrorCode&)
icu_52::ReorderingBuffer::skipPrevious()
icu_52::Replaceable::clone() const
icu_52::Replaceable::hasMetaData() const
icu_52::Replaceable::~Replaceable()
icu_52::ResourceBundle::ResourceBundle(UErrorCode&)
icu_52::ResourceBundle::ResourceBundle(UResourceBundle*, UErrorCode&)
icu_52::ResourceBundle::ResourceBundle(char const*, icu_52::Locale const&, UErrorCode&)
icu_52::ResourceBundle::ResourceBundle(icu_52::ResourceBundle const&)
icu_52::ResourceBundle::ResourceBundle(icu_52::UnicodeString const&, UErrorCode&)
icu_52::ResourceBundle::ResourceBundle(icu_52::UnicodeString const&, icu_52::Locale const&, UErrorCode&)
icu_52::ResourceBundle::clone() const
icu_52::ResourceBundle::constructForLocale(icu_52::UnicodeString const&, icu_52::Locale const&, UErrorCode&)
icu_52::ResourceBundle::get(char const*, UErrorCode&) const
icu_52::ResourceBundle::get(int, UErrorCode&) const
icu_52::ResourceBundle::getBinary(int&, UErrorCode&) const
icu_52::ResourceBundle::getDynamicClassID() const
icu_52::ResourceBundle::getInt(UErrorCode&) const
icu_52::ResourceBundle::getIntVector(int&, UErrorCode&) const
icu_52::ResourceBundle::getKey() const
icu_52::ResourceBundle::getLocale() const
icu_52::ResourceBundle::getLocale(ULocDataLocaleType, UErrorCode&) const
icu_52::ResourceBundle::getName() const
icu_52::ResourceBundle::getNext(UErrorCode&)
icu_52::ResourceBundle::getNextString(UErrorCode&)
icu_52::ResourceBundle::getNextString(char const**, UErrorCode&)
icu_52::ResourceBundle::getSize() const
icu_52::ResourceBundle::getStaticClassID()
icu_52::ResourceBundle::getStaticClassID()::classID
icu_52::ResourceBundle::getString(UErrorCode&) const
icu_52::ResourceBundle::getStringEx(char const*, UErrorCode&) const
icu_52::ResourceBundle::getStringEx(int, UErrorCode&) const
icu_52::ResourceBundle::getType() const
icu_52::ResourceBundle::getUInt(UErrorCode&) const
icu_52::ResourceBundle::getVersion(unsigned char*) const
icu_52::ResourceBundle::getVersionNumber() const
icu_52::ResourceBundle::getWithFallback(char const*, UErrorCode&)
icu_52::ResourceBundle::hasNext() const
icu_52::ResourceBundle::operator=(icu_52::ResourceBundle const&)
icu_52::ResourceBundle::resetIterator()
icu_52::ResourceBundle::~ResourceBundle()
icu_52::RuleBasedBreakIterator::RuleBasedBreakIterator()
icu_52::RuleBasedBreakIterator::RuleBasedBreakIterator(UDataMemory*, UErrorCode&)
icu_52::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_52::RBBIDataHeader const*, icu_52::RuleBasedBreakIterator::EDontAdopt, UErrorCode&)
icu_52::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_52::RBBIDataHeader*, UErrorCode&)
icu_52::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_52::RuleBasedBreakIterator const&)
icu_52::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_52::UnicodeString const&, UParseError&, UErrorCode&)
icu_52::RuleBasedBreakIterator::RuleBasedBreakIterator(unsigned char const*, unsigned int, UErrorCode&)
icu_52::RuleBasedBreakIterator::adoptText(icu_52::CharacterIterator*)
icu_52::RuleBasedBreakIterator::checkDictionary(int, int, signed char)
icu_52::RuleBasedBreakIterator::checkDictionary(int, int, signed char)::utext_utf8Funcs
icu_52::RuleBasedBreakIterator::clone() const
icu_52::RuleBasedBreakIterator::createBufferClone(void*, int&, UErrorCode&)
icu_52::RuleBasedBreakIterator::current() const
icu_52::RuleBasedBreakIterator::first()
icu_52::RuleBasedBreakIterator::following(int)
icu_52::RuleBasedBreakIterator::getBinaryRules(unsigned int&)
icu_52::RuleBasedBreakIterator::getDynamicClassID() const
icu_52::RuleBasedBreakIterator::getLanguageBreakEngine(int)
icu_52::RuleBasedBreakIterator::getRuleStatus() const
icu_52::RuleBasedBreakIterator::getRuleStatusVec(int*, int, UErrorCode&)
icu_52::RuleBasedBreakIterator::getRules() const
icu_52::RuleBasedBreakIterator::getRules() const::s
icu_52::RuleBasedBreakIterator::getStaticClassID()
icu_52::RuleBasedBreakIterator::getStaticClassID()::classID
icu_52::RuleBasedBreakIterator::getText() const
icu_52::RuleBasedBreakIterator::getUText(UText*, UErrorCode&) const
icu_52::RuleBasedBreakIterator::handleNext(icu_52::RBBIStateTable const*)
icu_52::RuleBasedBreakIterator::handlePrevious(icu_52::RBBIStateTable const*)
icu_52::RuleBasedBreakIterator::hashCode() const
icu_52::RuleBasedBreakIterator::init()
icu_52::RuleBasedBreakIterator::isBoundary(int)
icu_52::RuleBasedBreakIterator::last()
icu_52::RuleBasedBreakIterator::makeRuleStatusValid()
icu_52::RuleBasedBreakIterator::next()
icu_52::RuleBasedBreakIterator::next(int)
icu_52::RuleBasedBreakIterator::operator=(icu_52::RuleBasedBreakIterator const&)
icu_52::RuleBasedBreakIterator::operator==(icu_52::BreakIterator const&) const
icu_52::RuleBasedBreakIterator::preceding(int)
icu_52::RuleBasedBreakIterator::previous()
icu_52::RuleBasedBreakIterator::refreshInputText(UText*, UErrorCode&)
icu_52::RuleBasedBreakIterator::reset()
icu_52::RuleBasedBreakIterator::setBreakType(int)
icu_52::RuleBasedBreakIterator::setText(UText*, UErrorCode&)
icu_52::RuleBasedBreakIterator::setText(UText*, UErrorCode&)::c
icu_52::RuleBasedBreakIterator::setText(icu_52::UnicodeString const&)
icu_52::RuleBasedBreakIterator::~RuleBasedBreakIterator()
icu_52::RuleCharacterIterator::RuleCharacterIterator(icu_52::UnicodeString const&, icu_52::SymbolTable const*, icu_52::ParsePosition&)
icu_52::RuleCharacterIterator::_advance(int)
icu_52::RuleCharacterIterator::_current() const
icu_52::RuleCharacterIterator::atEnd() const
icu_52::RuleCharacterIterator::getPos(icu_52::RuleCharacterIterator::Pos&) const
icu_52::RuleCharacterIterator::jumpahead(int)
icu_52::RuleCharacterIterator::lookahead(icu_52::UnicodeString&, int) const
icu_52::RuleCharacterIterator::next(int, signed char&, UErrorCode&)
icu_52::RuleCharacterIterator::setPos(icu_52::RuleCharacterIterator::Pos const&)
icu_52::RuleCharacterIterator::skipIgnored(int)
icu_52::SECOND_PARAMETER
icu_52::ServiceEnumeration::clone() const
icu_52::ServiceEnumeration::count(UErrorCode&) const
icu_52::ServiceEnumeration::getDynamicClassID() const
icu_52::ServiceEnumeration::getStaticClassID()
icu_52::ServiceEnumeration::getStaticClassID()::classID
icu_52::ServiceEnumeration::reset(UErrorCode&)
icu_52::ServiceEnumeration::snext(UErrorCode&)
icu_52::ServiceEnumeration::~ServiceEnumeration()
icu_52::ServiceListener::getDynamicClassID() const
icu_52::ServiceListener::getStaticClassID()
icu_52::ServiceListener::getStaticClassID()::classID
icu_52::ServiceListener::~ServiceListener()
icu_52::SimpleFactory::SimpleFactory(icu_52::UObject*, icu_52::UnicodeString const&, signed char)
icu_52::SimpleFactory::create(icu_52::ICUServiceKey const&, icu_52::ICUService const*, UErrorCode&) const
icu_52::SimpleFactory::getDisplayName(icu_52::UnicodeString const&, icu_52::Locale const&, icu_52::UnicodeString&) const
icu_52::SimpleFactory::getDynamicClassID() const
icu_52::SimpleFactory::getStaticClassID()
icu_52::SimpleFactory::getStaticClassID()::classID
icu_52::SimpleFactory::updateVisibleIDs(icu_52::Hashtable&, UErrorCode&) const
icu_52::SimpleFactory::~SimpleFactory()
icu_52::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_52::UObject*, icu_52::Locale const&, int, int)
icu_52::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_52::UObject*, icu_52::UnicodeString const&, int, int)
icu_52::SimpleLocaleKeyFactory::create(icu_52::ICUServiceKey const&, icu_52::ICUService const*, UErrorCode&) const
icu_52::SimpleLocaleKeyFactory::getDynamicClassID() const
icu_52::SimpleLocaleKeyFactory::getStaticClassID()
icu_52::SimpleLocaleKeyFactory::getStaticClassID()::classID
icu_52::SimpleLocaleKeyFactory::updateVisibleIDs(icu_52::Hashtable&, UErrorCode&) const
icu_52::SimpleLocaleKeyFactory::~SimpleLocaleKeyFactory()
icu_52::StringCharacterIterator::StringCharacterIterator()
icu_52::StringCharacterIterator::StringCharacterIterator(icu_52::StringCharacterIterator const&)
icu_52::StringCharacterIterator::StringCharacterIterator(icu_52::UnicodeString const&)
icu_52::StringCharacterIterator::StringCharacterIterator(icu_52::UnicodeString const&, int)
icu_52::StringCharacterIterator::StringCharacterIterator(icu_52::UnicodeString const&, int, int, int)
icu_52::StringCharacterIterator::clone() const
icu_52::StringCharacterIterator::getDynamicClassID() const
icu_52::StringCharacterIterator::getStaticClassID()
icu_52::StringCharacterIterator::getStaticClassID()::classID
icu_52::StringCharacterIterator::getText(icu_52::UnicodeString&)
icu_52::StringCharacterIterator::operator=(icu_52::StringCharacterIterator const&)
icu_52::StringCharacterIterator::operator==(icu_52::ForwardCharacterIterator const&) const
icu_52::StringCharacterIterator::setText(icu_52::UnicodeString const&)
icu_52::StringCharacterIterator::~StringCharacterIterator()
icu_52::StringEnumeration::StringEnumeration()
icu_52::StringEnumeration::clone() const
icu_52::StringEnumeration::ensureCharsCapacity(int, UErrorCode&)
icu_52::StringEnumeration::next(int*, UErrorCode&)
icu_52::StringEnumeration::operator!=(icu_52::StringEnumeration const&) const
icu_52::StringEnumeration::operator==(icu_52::StringEnumeration const&) const
icu_52::StringEnumeration::setChars(char const*, int, UErrorCode&)
icu_52::StringEnumeration::snext(UErrorCode&)
icu_52::StringEnumeration::unext(int*, UErrorCode&)
icu_52::StringEnumeration::~StringEnumeration()
icu_52::StringPair::StringPair(icu_52::UnicodeString const&, icu_52::UnicodeString const&)
icu_52::StringPair::create(icu_52::UnicodeString const&, icu_52::UnicodeString const&, UErrorCode&)
icu_52::StringPair::isBogus() const
icu_52::StringPiece::StringPiece(char const*)
icu_52::StringPiece::StringPiece(icu_52::StringPiece const&, int)
icu_52::StringPiece::StringPiece(icu_52::StringPiece const&, int, int)
icu_52::StringPiece::npos
icu_52::StringPiece::set(char const*)
icu_52::StringTrieBuilder::BranchHeadNode::markRightEdgesFirst(int)
icu_52::StringTrieBuilder::BranchHeadNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::BranchHeadNode::write(icu_52::StringTrieBuilder&)
icu_52::StringTrieBuilder::BranchHeadNode::~BranchHeadNode()
icu_52::StringTrieBuilder::BranchNode::~BranchNode()
icu_52::StringTrieBuilder::FinalValueNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::FinalValueNode::write(icu_52::StringTrieBuilder&)
icu_52::StringTrieBuilder::FinalValueNode::~FinalValueNode()
icu_52::StringTrieBuilder::IntermediateValueNode::markRightEdgesFirst(int)
icu_52::StringTrieBuilder::IntermediateValueNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::IntermediateValueNode::write(icu_52::StringTrieBuilder&)
icu_52::StringTrieBuilder::IntermediateValueNode::~IntermediateValueNode()
icu_52::StringTrieBuilder::LinearMatchNode::markRightEdgesFirst(int)
icu_52::StringTrieBuilder::LinearMatchNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::LinearMatchNode::~LinearMatchNode()
icu_52::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(int)
icu_52::StringTrieBuilder::ListBranchNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::ListBranchNode::write(icu_52::StringTrieBuilder&)
icu_52::StringTrieBuilder::ListBranchNode::~ListBranchNode()
icu_52::StringTrieBuilder::Node::markRightEdgesFirst(int)
icu_52::StringTrieBuilder::Node::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::Node::~Node()
icu_52::StringTrieBuilder::SplitBranchNode::markRightEdgesFirst(int)
icu_52::StringTrieBuilder::SplitBranchNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::SplitBranchNode::write(icu_52::StringTrieBuilder&)
icu_52::StringTrieBuilder::SplitBranchNode::~SplitBranchNode()
icu_52::StringTrieBuilder::StringTrieBuilder()
icu_52::StringTrieBuilder::ValueNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::StringTrieBuilder::ValueNode::~ValueNode()
icu_52::StringTrieBuilder::build(UStringTrieBuildOption, int, UErrorCode&)
icu_52::StringTrieBuilder::createCompactBuilder(int, UErrorCode&)
icu_52::StringTrieBuilder::deleteCompactBuilder()
icu_52::StringTrieBuilder::equalNodes(void const*, void const*)
icu_52::StringTrieBuilder::hashNode(void const*)
icu_52::StringTrieBuilder::makeBranchSubNode(int, int, int, int, UErrorCode&)
icu_52::StringTrieBuilder::makeNode(int, int, int, UErrorCode&)
icu_52::StringTrieBuilder::registerFinalValue(int, UErrorCode&)
icu_52::StringTrieBuilder::registerNode(icu_52::StringTrieBuilder::Node*, UErrorCode&)
icu_52::StringTrieBuilder::writeBranchSubNode(int, int, int, int)
icu_52::StringTrieBuilder::writeNode(int, int, int)
icu_52::StringTrieBuilder::~StringTrieBuilder()
icu_52::SymbolTable::~SymbolTable()
icu_52::ThaiBreakEngine::ThaiBreakEngine(icu_52::DictionaryMatcher*, UErrorCode&)
icu_52::ThaiBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_52::UStack&) const
icu_52::ThaiBreakEngine::~ThaiBreakEngine()
icu_52::UCharCharacterIterator::UCharCharacterIterator()
icu_52::UCharCharacterIterator::UCharCharacterIterator(icu_52::UCharCharacterIterator const&)
icu_52::UCharCharacterIterator::UCharCharacterIterator(unsigned short const*, int)
icu_52::UCharCharacterIterator::UCharCharacterIterator(unsigned short const*, int, int)
icu_52::UCharCharacterIterator::UCharCharacterIterator(unsigned short const*, int, int, int, int)
icu_52::UCharCharacterIterator::clone() const
icu_52::UCharCharacterIterator::current() const
icu_52::UCharCharacterIterator::current32() const
icu_52::UCharCharacterIterator::first()
icu_52::UCharCharacterIterator::first32()
icu_52::UCharCharacterIterator::first32PostInc()
icu_52::UCharCharacterIterator::firstPostInc()
icu_52::UCharCharacterIterator::getDynamicClassID() const
icu_52::UCharCharacterIterator::getStaticClassID()
icu_52::UCharCharacterIterator::getStaticClassID()::classID
icu_52::UCharCharacterIterator::getText(icu_52::UnicodeString&)
icu_52::UCharCharacterIterator::hasNext()
icu_52::UCharCharacterIterator::hasPrevious()
icu_52::UCharCharacterIterator::hashCode() const
icu_52::UCharCharacterIterator::last()
icu_52::UCharCharacterIterator::last32()
icu_52::UCharCharacterIterator::move(int, icu_52::CharacterIterator::EOrigin)
icu_52::UCharCharacterIterator::move32(int, icu_52::CharacterIterator::EOrigin)
icu_52::UCharCharacterIterator::next()
icu_52::UCharCharacterIterator::next32()
icu_52::UCharCharacterIterator::next32PostInc()
icu_52::UCharCharacterIterator::nextPostInc()
icu_52::UCharCharacterIterator::operator=(icu_52::UCharCharacterIterator const&)
icu_52::UCharCharacterIterator::operator==(icu_52::ForwardCharacterIterator const&) const
icu_52::UCharCharacterIterator::previous()
icu_52::UCharCharacterIterator::previous32()
icu_52::UCharCharacterIterator::setIndex(int)
icu_52::UCharCharacterIterator::setIndex32(int)
icu_52::UCharCharacterIterator::setText(unsigned short const*, int)
icu_52::UCharCharacterIterator::~UCharCharacterIterator()
icu_52::UCharsDictionaryMatcher::getType() const
icu_52::UCharsDictionaryMatcher::matches(UText*, int, int*, int&, int, int*) const
icu_52::UCharsDictionaryMatcher::~UCharsDictionaryMatcher()
icu_52::UCharsTrie::Iterator::Iterator(icu_52::UCharsTrie const&, int, UErrorCode&)
icu_52::UCharsTrie::Iterator::Iterator(unsigned short const*, int, UErrorCode&)
icu_52::UCharsTrie::Iterator::branchNext(unsigned short const*, int, UErrorCode&)
icu_52::UCharsTrie::Iterator::hasNext() const
icu_52::UCharsTrie::Iterator::next(UErrorCode&)
icu_52::UCharsTrie::Iterator::reset()
icu_52::UCharsTrie::Iterator::~Iterator()
icu_52::UCharsTrie::branchNext(unsigned short const*, int, int)
icu_52::UCharsTrie::current() const
icu_52::UCharsTrie::findUniqueValue(unsigned short const*, signed char, int&)
icu_52::UCharsTrie::findUniqueValueFromBranch(unsigned short const*, int, signed char, int&)
icu_52::UCharsTrie::firstForCodePoint(int)
icu_52::UCharsTrie::getNextBranchUChars(unsigned short const*, int, icu_52::Appendable&)
icu_52::UCharsTrie::getNextUChars(icu_52::Appendable&) const
icu_52::UCharsTrie::next(int)
icu_52::UCharsTrie::next(unsigned short const*, int)
icu_52::UCharsTrie::nextForCodePoint(int)
icu_52::UCharsTrie::nextImpl(unsigned short const*, int)
icu_52::UCharsTrie::~UCharsTrie()
icu_52::UCharsTrieBuilder::UCTLinearMatchNode::UCTLinearMatchNode(unsigned short const*, int, icu_52::StringTrieBuilder::Node*)
icu_52::UCharsTrieBuilder::UCTLinearMatchNode::operator==(icu_52::StringTrieBuilder::Node const&) const
icu_52::UCharsTrieBuilder::UCTLinearMatchNode::write(icu_52::StringTrieBuilder&)
icu_52::UCharsTrieBuilder::UCTLinearMatchNode::~UCTLinearMatchNode()
icu_52::UCharsTrieBuilder::UCharsTrieBuilder(UErrorCode&)
icu_52::UCharsTrieBuilder::add(icu_52::UnicodeString const&, int, UErrorCode&)
icu_52::UCharsTrieBuilder::build(UStringTrieBuildOption, UErrorCode&)
icu_52::UCharsTrieBuilder::buildUChars(UStringTrieBuildOption, UErrorCode&)
icu_52::UCharsTrieBuilder::buildUnicodeString(UStringTrieBuildOption, icu_52::UnicodeString&, UErrorCode&)
icu_52::UCharsTrieBuilder::countElementUnits(int, int, int) const
icu_52::UCharsTrieBuilder::createLinearMatchNode(int, int, int, icu_52::StringTrieBuilder::Node*) const
icu_52::UCharsTrieBuilder::ensureCapacity(int)
icu_52::UCharsTrieBuilder::getElementStringLength(int) const
icu_52::UCharsTrieBuilder::getElementUnit(int, int) const
icu_52::UCharsTrieBuilder::getElementValue(int) const
icu_52::UCharsTrieBuilder::getLimitOfLinearMatch(int, int, int) const
icu_52::UCharsTrieBuilder::getMaxBranchLinearSubNodeLength() const
icu_52::UCharsTrieBuilder::getMaxLinearMatchLength() const
icu_52::UCharsTrieBuilder::getMinLinearMatch() const
icu_52::UCharsTrieBuilder::indexOfElementWithNextUnit(int, int, unsigned short) const
icu_52::UCharsTrieBuilder::matchNodesCanHaveValues() const
icu_52::UCharsTrieBuilder::skipElementsBySomeUnits(int, int, int) const
icu_52::UCharsTrieBuilder::write(int)
icu_52::UCharsTrieBuilder::write(unsigned short const*, int)
icu_52::UCharsTrieBuilder::writeDeltaTo(int)
icu_52::UCharsTrieBuilder::writeElementUnits(int, int, int)
icu_52::UCharsTrieBuilder::writeValueAndFinal(int, signed char)
icu_52::UCharsTrieBuilder::writeValueAndType(signed char, int, int)
icu_52::UCharsTrieBuilder::~UCharsTrieBuilder()
icu_52::UCharsTrieElement::compareStringTo(icu_52::UCharsTrieElement const&, icu_52::UnicodeString const&) const
icu_52::UCharsTrieElement::setTo(icu_52::UnicodeString const&, int, icu_52::UnicodeString&, UErrorCode&)
icu_52::UDataPathIterator::UDataPathIterator(char const*, char const*, char const*, char const*, signed char, UErrorCode*)
icu_52::UDataPathIterator::next(UErrorCode*)
icu_52::UMemory::operator delete(void*)
icu_52::UMemory::operator delete[](void*)
icu_52::UMemory::operator new(unsigned long)
icu_52::UMemory::operator new[](unsigned long)
icu_52::UObject::getDynamicClassID() const
icu_52::UObject::~UObject()
icu_52::UStack::UStack(UErrorCode&)
icu_52::UStack::UStack(int, UErrorCode&)
icu_52::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), UErrorCode&)
icu_52::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), int, UErrorCode&)
icu_52::UStack::getDynamicClassID() const
icu_52::UStack::getStaticClassID()
icu_52::UStack::getStaticClassID()::classID
icu_52::UStack::pop()
icu_52::UStack::popi()
icu_52::UStack::search(void*) const
icu_52::UStack::~UStack()
icu_52::UStringEnumeration::UStringEnumeration(UEnumeration*)
icu_52::UStringEnumeration::count(UErrorCode&) const
icu_52::UStringEnumeration::getDynamicClassID() const
icu_52::UStringEnumeration::getStaticClassID()
icu_52::UStringEnumeration::getStaticClassID()::classID
icu_52::UStringEnumeration::next(int*, UErrorCode&)
icu_52::UStringEnumeration::reset(UErrorCode&)
icu_52::UStringEnumeration::snext(UErrorCode&)
icu_52::UStringEnumeration::~UStringEnumeration()
icu_52::UTS46::UTS46(unsigned int, UErrorCode&)
icu_52::UTS46::checkLabelBiDi(unsigned short const*, int, icu_52::IDNAInfo&) const
icu_52::UTS46::checkLabelContextO(unsigned short const*, int, icu_52::IDNAInfo&) const
icu_52::UTS46::isLabelOkContextJ(unsigned short const*, int) const
icu_52::UTS46::labelToASCII(icu_52::UnicodeString const&, icu_52::UnicodeString&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::labelToASCII_UTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::labelToUnicode(icu_52::UnicodeString const&, icu_52::UnicodeString&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::labelToUnicodeUTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::mapDevChars(icu_52::UnicodeString&, int, int, UErrorCode&) const
icu_52::UTS46::markBadACELabel(icu_52::UnicodeString&, int, int, signed char, icu_52::IDNAInfo&) const
icu_52::UTS46::nameToASCII(icu_52::UnicodeString const&, icu_52::UnicodeString&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::nameToASCII_UTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::nameToUnicode(icu_52::UnicodeString const&, icu_52::UnicodeString&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::nameToUnicodeUTF8(icu_52::StringPiece const&, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::process(icu_52::UnicodeString const&, signed char, signed char, icu_52::UnicodeString&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::processLabel(icu_52::UnicodeString&, int, int, signed char, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::processUTF8(icu_52::StringPiece const&, signed char, signed char, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::processUTF8(icu_52::StringPiece const&, signed char, signed char, icu_52::ByteSink&, icu_52::IDNAInfo&, UErrorCode&) const [clone .part.16]
icu_52::UTS46::processUnicode(icu_52::UnicodeString const&, int, int, signed char, signed char, icu_52::UnicodeString&, icu_52::IDNAInfo&, UErrorCode&) const
icu_52::UTS46::~UTS46()
icu_52::UVector32::UVector32(UErrorCode&)
icu_52::UVector32::UVector32(int, UErrorCode&)
icu_52::UVector32::_init(int, UErrorCode&)
icu_52::UVector32::assign(icu_52::UVector32 const&, UErrorCode&)
icu_52::UVector32::containsAll(icu_52::UVector32 const&) const
icu_52::UVector32::containsNone(icu_52::UVector32 const&) const
icu_52::UVector32::equals(icu_52::UVector32 const&) const
icu_52::UVector32::expandCapacity(int, UErrorCode&)
icu_52::UVector32::getDynamicClassID() const
icu_52::UVector32::getStaticClassID()
icu_52::UVector32::getStaticClassID()::classID
icu_52::UVector32::indexOf(int, int) const
icu_52::UVector32::insertElementAt(int, int, UErrorCode&)
icu_52::UVector32::operator==(icu_52::UVector32 const&)
icu_52::UVector32::removeAll(icu_52::UVector32 const&)
icu_52::UVector32::removeAllElements()
icu_52::UVector32::removeElementAt(int)
icu_52::UVector32::retainAll(icu_52::UVector32 const&)
icu_52::UVector32::setElementAt(int, int)
icu_52::UVector32::setMaxCapacity(int)
icu_52::UVector32::setSize(int)
icu_52::UVector32::sortedInsert(int, UErrorCode&)
icu_52::UVector32::~UVector32()
icu_52::UVector64::UVector64(UErrorCode&)
icu_52::UVector64::UVector64(int, UErrorCode&)
icu_52::UVector64::_init(int, UErrorCode&)
icu_52::UVector64::assign(icu_52::UVector64 const&, UErrorCode&)
icu_52::UVector64::expandCapacity(int, UErrorCode&)
icu_52::UVector64::getDynamicClassID() const
icu_52::UVector64::getStaticClassID()
icu_52::UVector64::getStaticClassID()::classID
icu_52::UVector64::insertElementAt(long, int, UErrorCode&)
icu_52::UVector64::operator==(icu_52::UVector64 const&)
icu_52::UVector64::removeAllElements()
icu_52::UVector64::setElementAt(long, int)
icu_52::UVector64::setMaxCapacity(int)
icu_52::UVector64::setSize(int)
icu_52::UVector64::~UVector64()
icu_52::UVector::UVector(UErrorCode&)
icu_52::UVector::UVector(int, UErrorCode&)
icu_52::UVector::UVector(void (*)(void*), signed char (*)(UElement, UElement), UErrorCode&)
icu_52::UVector::UVector(void (*)(void*), signed char (*)(UElement, UElement), int, UErrorCode&)
icu_52::UVector::_init(int, UErrorCode&)
icu_52::UVector::addElement(int, UErrorCode&)
icu_52::UVector::addElement(void*, UErrorCode&)
icu_52::UVector::assign(icu_52::UVector const&, void (*)(UElement*, UElement*), UErrorCode&)
icu_52::UVector::containsAll(icu_52::UVector const&) const
icu_52::UVector::containsNone(icu_52::UVector const&) const
icu_52::UVector::elementAt(int) const
icu_52::UVector::elementAti(int) const
icu_52::UVector::ensureCapacity(int, UErrorCode&)
icu_52::UVector::equals(icu_52::UVector const&) const
icu_52::UVector::getDynamicClassID() const
icu_52::UVector::getStaticClassID()
icu_52::UVector::getStaticClassID()::classID
icu_52::UVector::indexOf(UElement, int, signed char) const
icu_52::UVector::indexOf(int, int) const
icu_52::UVector::indexOf(void*, int) const
icu_52::UVector::insertElementAt(int, int, UErrorCode&)
icu_52::UVector::insertElementAt(void*, int, UErrorCode&)
icu_52::UVector::operator==(icu_52::UVector const&)
icu_52::UVector::orphanElementAt(int)
icu_52::UVector::removeAll(icu_52::UVector const&)
icu_52::UVector::removeAllElements()
icu_52::UVector::removeElement(void*)
icu_52::UVector::removeElementAt(int)
icu_52::UVector::retainAll(icu_52::UVector const&)
icu_52::UVector::setComparer(signed char (*)(UElement, UElement))
icu_52::UVector::setDeleter(void (*)(void*))
icu_52::UVector::setElementAt(int, int)
icu_52::UVector::setElementAt(void*, int)
icu_52::UVector::setSize(int, UErrorCode&)
icu_52::UVector::sort(signed char (*)(UElement, UElement), UErrorCode&)
icu_52::UVector::sortWithUComparator(int (*)(void const*, void const*, void const*), void const*, UErrorCode&)
icu_52::UVector::sortedInsert(UElement, signed char (*)(UElement, UElement), UErrorCode&)
icu_52::UVector::sortedInsert(int, signed char (*)(UElement, UElement), UErrorCode&)
icu_52::UVector::sortedInsert(void*, signed char (*)(UElement, UElement), UErrorCode&)
icu_52::UVector::sorti(UErrorCode&)
icu_52::UVector::toArray(void**) const
icu_52::UVector::~UVector()
icu_52::UnhandledEngine::UnhandledEngine(UErrorCode&)
icu_52::UnhandledEngine::findBreaks(UText*, int, int, signed char, int, icu_52::UStack&) const
icu_52::UnhandledEngine::handleCharacter(int, int)
icu_52::UnhandledEngine::handles(int, int) const
icu_52::UnhandledEngine::~UnhandledEngine()
icu_52::UnicodeFilter::getStaticClassID()
icu_52::UnicodeFilter::getStaticClassID()::classID
icu_52::UnicodeFilter::matches(icu_52::Replaceable const&, int&, int, signed char)
icu_52::UnicodeFilter::setData(icu_52::TransliterationRuleData const*)
icu_52::UnicodeFilter::toMatcher() const
icu_52::UnicodeFilter::~UnicodeFilter()
icu_52::UnicodeFunctor::getStaticClassID()
icu_52::UnicodeFunctor::getStaticClassID()::classID
icu_52::UnicodeFunctor::toMatcher() const
icu_52::UnicodeFunctor::toReplacer() const
icu_52::UnicodeFunctor::~UnicodeFunctor()
icu_52::UnicodeMatcher::~UnicodeMatcher()
icu_52::UnicodeSet::UnicodeSet()
icu_52::UnicodeSet::UnicodeSet(icu_52::UnicodeSet const&)
icu_52::UnicodeSet::UnicodeSet(icu_52::UnicodeSet const&, signed char)
icu_52::UnicodeSet::UnicodeSet(icu_52::UnicodeString const&, UErrorCode&)
icu_52::UnicodeSet::UnicodeSet(icu_52::UnicodeString const&, icu_52::ParsePosition&, unsigned int, icu_52::SymbolTable const*, UErrorCode&)
icu_52::UnicodeSet::UnicodeSet(icu_52::UnicodeString const&, unsigned int, icu_52::SymbolTable const*, UErrorCode&)
icu_52::UnicodeSet::UnicodeSet(int, int)
icu_52::UnicodeSet::_add(icu_52::UnicodeString const&)
icu_52::UnicodeSet::_appendToPat(icu_52::UnicodeString&, icu_52::UnicodeString const&, signed char)
icu_52::UnicodeSet::_appendToPat(icu_52::UnicodeString&, int, signed char)
icu_52::UnicodeSet::_generatePattern(icu_52::UnicodeString&, signed char) const
icu_52::UnicodeSet::_toPattern(icu_52::UnicodeString&, signed char) const
icu_52::UnicodeSet::add(icu_52::UnicodeString const&)
icu_52::UnicodeSet::add(int const*, int, signed char)
icu_52::UnicodeSet::add(int)
icu_52::UnicodeSet::add(int, int)
icu_52::UnicodeSet::addAll(icu_52::UnicodeSet const&)
icu_52::UnicodeSet::addAll(icu_52::UnicodeString const&)
icu_52::UnicodeSet::addMatchSetTo(icu_52::UnicodeSet&) const
icu_52::UnicodeSet::allocateStrings(UErrorCode&)
icu_52::UnicodeSet::applyFilter(signed char (*)(int, void*), void*, int, UErrorCode&)
icu_52::UnicodeSet::applyIntPropertyValue(UProperty, int, UErrorCode&)
icu_52::UnicodeSet::applyPattern(icu_52::RuleCharacterIterator&, icu_52::SymbolTable const*, icu_52::UnicodeString&, unsigned int, icu_52::UnicodeSet& (icu_52::UnicodeSet::*)(int), UErrorCode&)
icu_52::UnicodeSet::applyPattern(icu_52::UnicodeString const&, UErrorCode&)
icu_52::UnicodeSet::applyPattern(icu_52::UnicodeString const&, icu_52::ParsePosition&, unsigned int, icu_52::SymbolTable const*, UErrorCode&)
icu_52::UnicodeSet::applyPattern(icu_52::UnicodeString const&, unsigned int, icu_52::SymbolTable const*, UErrorCode&)
icu_52::UnicodeSet::applyPatternIgnoreSpace(icu_52::UnicodeString const&, icu_52::ParsePosition&, icu_52::SymbolTable const*, UErrorCode&)
icu_52::UnicodeSet::applyPropertyAlias(icu_52::UnicodeString const&, icu_52::UnicodeString const&, UErrorCode&)
icu_52::UnicodeSet::applyPropertyPattern(icu_52::RuleCharacterIterator&, icu_52::UnicodeString&, UErrorCode&)
icu_52::UnicodeSet::applyPropertyPattern(icu_52::UnicodeString const&, icu_52::ParsePosition&, UErrorCode&)
icu_52::UnicodeSet::charAt(int) const
icu_52::UnicodeSet::clear()
icu_52::UnicodeSet::clone() const
icu_52::UnicodeSet::cloneAsThawed() const
icu_52::UnicodeSet::closeOver(int)
icu_52::UnicodeSet::closeOver(int) [clone .part.8]
icu_52::UnicodeSet::compact()
icu_52::UnicodeSet::complement()
icu_52::UnicodeSet::complement(icu_52::UnicodeString const&)
icu_52::UnicodeSet::complement(int)
icu_52::UnicodeSet::complement(int, int)
icu_52::UnicodeSet::complementAll(icu_52::UnicodeSet const&)
icu_52::UnicodeSet::complementAll(icu_52::UnicodeString const&)
icu_52::UnicodeSet::contains(icu_52::UnicodeString const&) const
icu_52::UnicodeSet::contains(int) const
icu_52::UnicodeSet::contains(int, int) const
icu_52::UnicodeSet::containsAll(icu_52::UnicodeSet const&) const
icu_52::UnicodeSet::containsAll(icu_52::UnicodeString const&) const
icu_52::UnicodeSet::containsNone(icu_52::UnicodeSet const&) const
icu_52::UnicodeSet::containsNone(icu_52::UnicodeString const&) const
icu_52::UnicodeSet::containsNone(int, int) const
icu_52::UnicodeSet::createFrom(icu_52::UnicodeString const&)
icu_52::UnicodeSet::createFromAll(icu_52::UnicodeString const&)
icu_52::UnicodeSet::ensureBufferCapacity(int, UErrorCode&)
icu_52::UnicodeSet::ensureCapacity(int, UErrorCode&)
icu_52::UnicodeSet::exclusiveOr(int const*, int, signed char)
icu_52::UnicodeSet::findCodePoint(int) const
icu_52::UnicodeSet::freeze()
icu_52::UnicodeSet::getDynamicClassID() const
icu_52::UnicodeSet::getInclusions(int, UErrorCode&)
icu_52::UnicodeSet::getRangeCount() const
icu_52::UnicodeSet::getRangeEnd(int) const
icu_52::UnicodeSet::getRangeStart(int) const
icu_52::UnicodeSet::getSingleCP(icu_52::UnicodeString const&)
icu_52::UnicodeSet::getStaticClassID()
icu_52::UnicodeSet::getStaticClassID()::classID
icu_52::UnicodeSet::getString(int) const
icu_52::UnicodeSet::getStringCount() const
icu_52::UnicodeSet::hashCode() const
icu_52::UnicodeSet::indexOf(int) const
icu_52::UnicodeSet::isEmpty() const
icu_52::UnicodeSet::matchRest(icu_52::Replaceable const&, int, int, icu_52::UnicodeString const&)
icu_52::UnicodeSet::matches(icu_52::Replaceable const&, int&, int, signed char)
icu_52::UnicodeSet::matchesIndexValue(unsigned char) const
icu_52::UnicodeSet::operator=(icu_52::UnicodeSet const&)
icu_52::UnicodeSet::operator==(icu_52::UnicodeSet const&) const
icu_52::UnicodeSet::releasePattern()
icu_52::UnicodeSet::remove(icu_52::UnicodeString const&)
icu_52::UnicodeSet::remove(int)
icu_52::UnicodeSet::remove(int, int)
icu_52::UnicodeSet::removeAll(icu_52::UnicodeSet const&)
icu_52::UnicodeSet::removeAll(icu_52::UnicodeString const&)
icu_52::UnicodeSet::removeAllStrings()
icu_52::UnicodeSet::resemblesPattern(icu_52::UnicodeString const&, int)
icu_52::UnicodeSet::resemblesPropertyPattern(icu_52::RuleCharacterIterator&, int)
icu_52::UnicodeSet::resemblesPropertyPattern(icu_52::UnicodeString const&, int)
icu_52::UnicodeSet::retain(int const*, int, signed char)
icu_52::UnicodeSet::retain(int)
icu_52::UnicodeSet::retain(int, int)
icu_52::UnicodeSet::retainAll(icu_52::UnicodeSet const&)
icu_52::UnicodeSet::retainAll(icu_52::UnicodeString const&)
icu_52::UnicodeSet::serialize(unsigned short*, int, UErrorCode&) const
icu_52::UnicodeSet::set(int, int)
icu_52::UnicodeSet::setPattern(icu_52::UnicodeString const&)
icu_52::UnicodeSet::setToBogus()
icu_52::UnicodeSet::size() const
icu_52::UnicodeSet::span(unsigned short const*, int, USetSpanCondition) const
icu_52::UnicodeSet::spanBack(unsigned short const*, int, USetSpanCondition) const
icu_52::UnicodeSet::spanBackUTF8(char const*, int, USetSpanCondition) const
icu_52::UnicodeSet::spanUTF8(char const*, int, USetSpanCondition) const
icu_52::UnicodeSet::swapBuffers()
icu_52::UnicodeSet::toPattern(icu_52::UnicodeString&, signed char) const
icu_52::UnicodeSet::~UnicodeSet()
icu_52::UnicodeSetIterator::UnicodeSetIterator()
icu_52::UnicodeSetIterator::UnicodeSetIterator(icu_52::UnicodeSet const&)
icu_52::UnicodeSetIterator::getDynamicClassID() const
icu_52::UnicodeSetIterator::getStaticClassID()
icu_52::UnicodeSetIterator::getStaticClassID()::classID
icu_52::UnicodeSetIterator::getString()
icu_52::UnicodeSetIterator::loadRange(int)
icu_52::UnicodeSetIterator::next()
icu_52::UnicodeSetIterator::nextRange()
icu_52::UnicodeSetIterator::reset()
icu_52::UnicodeSetIterator::reset(icu_52::UnicodeSet const&)
icu_52::UnicodeSetIterator::~UnicodeSetIterator()
icu_52::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_52::UnicodeSet const&, icu_52::UVector const&, unsigned int)
icu_52::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_52::UnicodeSetStringSpan const&, icu_52::UVector const&)
icu_52::UnicodeSetStringSpan::addToSpanNotSet(int)
icu_52::UnicodeSetStringSpan::span(unsigned short const*, int, USetSpanCondition) const
icu_52::UnicodeSetStringSpan::spanBack(unsigned short const*, int, USetSpanCondition) const
icu_52::UnicodeSetStringSpan::spanBackUTF8(unsigned char const*, int, USetSpanCondition) const
icu_52::UnicodeSetStringSpan::spanNot(unsigned short const*, int) const
icu_52::UnicodeSetStringSpan::spanNotBack(unsigned short const*, int) const
icu_52::UnicodeSetStringSpan::spanNotBackUTF8(unsigned char const*, int) const
icu_52::UnicodeSetStringSpan::spanNotUTF8(unsigned char const*, int) const
icu_52::UnicodeSetStringSpan::spanUTF8(unsigned char const*, int, USetSpanCondition) const
icu_52::UnicodeSetStringSpan::~UnicodeSetStringSpan()
icu_52::UnicodeSet_initInclusion(int, UErrorCode&)
icu_52::UnicodeString::UnicodeString(char const*)
icu_52::UnicodeString::UnicodeString(char const*, char const*)
icu_52::UnicodeString::UnicodeString(char const*, int)
icu_52::UnicodeString::UnicodeString(char const*, int, UConverter*, UErrorCode&)
icu_52::UnicodeString::UnicodeString(char const*, int, char const*)
icu_52::UnicodeString::UnicodeString(char const*, int, icu_52::UnicodeString::EInvariant)
icu_52::UnicodeString::UnicodeString(icu_52::UnicodeString const&)
icu_52::UnicodeString::UnicodeString(icu_52::UnicodeString const&, int)
icu_52::UnicodeString::UnicodeString(icu_52::UnicodeString const&, int, int)
icu_52::UnicodeString::UnicodeString(int)
icu_52::UnicodeString::UnicodeString(int, int, int)
icu_52::UnicodeString::UnicodeString(signed char, unsigned short const*, int)
icu_52::UnicodeString::UnicodeString(unsigned short const*)
icu_52::UnicodeString::UnicodeString(unsigned short const*, int)
icu_52::UnicodeString::UnicodeString(unsigned short)
icu_52::UnicodeString::UnicodeString(unsigned short*, int, int)
icu_52::UnicodeString::addRef()
icu_52::UnicodeString::allocate(int)
icu_52::UnicodeString::append(int)
icu_52::UnicodeString::caseMap(UCaseMap const*, int (*)(UCaseMap const*, unsigned short*, int, unsigned short const*, int, UErrorCode*))
icu_52::UnicodeString::char32At(int) const
icu_52::UnicodeString::clone() const
icu_52::UnicodeString::cloneArrayIfNeeded(int, int, signed char, int**, signed char)
icu_52::UnicodeString::copy(int, int, int)
icu_52::UnicodeString::copyFrom(icu_52::UnicodeString const&, signed char)
icu_52::UnicodeString::countChar32(int, int) const
icu_52::UnicodeString::doCaseCompare(int, int, unsigned short const*, int, int, unsigned int) const
icu_52::UnicodeString::doCodepageCreate(char const*, int, UConverter*, UErrorCode&)
icu_52::UnicodeString::doCodepageCreate(char const*, int, char const*)
icu_52::UnicodeString::doCompare(int, int, unsigned short const*, int, int) const
icu_52::UnicodeString::doCompareCodePointOrder(int, int, unsigned short const*, int, int) const
icu_52::UnicodeString::doEquals(icu_52::UnicodeString const&, int) const
icu_52::UnicodeString::doExtract(int, int, char*, int, UConverter*, UErrorCode&) const
icu_52::UnicodeString::doExtract(int, int, unsigned short*, int) const
icu_52::UnicodeString::doHashCode() const
icu_52::UnicodeString::doIndexOf(int, int, int) const
icu_52::UnicodeString::doIndexOf(unsigned short, int, int) const
icu_52::UnicodeString::doLastIndexOf(int, int, int) const
icu_52::UnicodeString::doLastIndexOf(unsigned short, int, int) const
icu_52::UnicodeString::doReplace(int, int, icu_52::UnicodeString const&, int, int)
icu_52::UnicodeString::doReplace(int, int, unsigned short const*, int, int)
icu_52::UnicodeString::doReverse(int, int)
icu_52::UnicodeString::extract(char*, int, UConverter*, UErrorCode&) const
icu_52::UnicodeString::extract(int, int, char*, int, icu_52::UnicodeString::EInvariant) const
icu_52::UnicodeString::extract(int, int, char*, unsigned int) const
icu_52::UnicodeString::extract(int, int, char*, unsigned int, char const*) const
icu_52::UnicodeString::extract(unsigned short*, int, UErrorCode&) const
icu_52::UnicodeString::extractBetween(int, int, icu_52::UnicodeString&) const
icu_52::UnicodeString::fastCopyFrom(icu_52::UnicodeString const&)
icu_52::UnicodeString::findAndReplace(int, int, icu_52::UnicodeString const&, int, int, icu_52::UnicodeString const&, int, int)
icu_52::UnicodeString::foldCase(unsigned int)
icu_52::UnicodeString::fromUTF32(int const*, int)
icu_52::UnicodeString::fromUTF8(icu_52::StringPiece const&)
icu_52::UnicodeString::getBuffer(int)
icu_52::UnicodeString::getChar32At(int) const
icu_52::UnicodeString::getChar32Limit(int) const
icu_52::UnicodeString::getChar32Start(int) const
icu_52::UnicodeString::getCharAt(int) const
icu_52::UnicodeString::getDynamicClassID() const
icu_52::UnicodeString::getLength() const
icu_52::UnicodeString::getStaticClassID()
icu_52::UnicodeString::getStaticClassID()::classID
icu_52::UnicodeString::getTerminatedBuffer()
icu_52::UnicodeString::handleReplaceBetween(int, int, icu_52::UnicodeString const&)
icu_52::UnicodeString::hasMetaData() const
icu_52::UnicodeString::hasMoreChar32Than(int, int, int) const
icu_52::UnicodeString::indexOf(unsigned short const*, int, int, int, int) const
icu_52::UnicodeString::lastIndexOf(unsigned short const*, int, int, int, int) const
icu_52::UnicodeString::moveIndex32(int, int) const
icu_52::UnicodeString::operator=(icu_52::UnicodeString const&)
icu_52::UnicodeString::operator==(icu_52::UnicodeString const&) const [clone .constprop.10]
icu_52::UnicodeString::padLeading(int, unsigned short)
icu_52::UnicodeString::padTrailing(int, unsigned short)
icu_52::UnicodeString::refCount() const
icu_52::UnicodeString::releaseArray()
icu_52::UnicodeString::releaseBuffer(int)
icu_52::UnicodeString::removeRef()
icu_52::UnicodeString::replace(int, int, int)
icu_52::UnicodeString::setCharAt(int, unsigned short)
icu_52::UnicodeString::setTo(signed char, unsigned short const*, int)
icu_52::UnicodeString::setTo(unsigned short*, int, int)
icu_52::UnicodeString::setToBogus()
icu_52::UnicodeString::setToUTF8(icu_52::StringPiece const&)
icu_52::UnicodeString::tempSubString(int, int) const
icu_52::UnicodeString::toLower()
icu_52::UnicodeString::toLower(icu_52::Locale const&)
icu_52::UnicodeString::toTitle(icu_52::BreakIterator*)
icu_52::UnicodeString::toTitle(icu_52::BreakIterator*, icu_52::Locale const&)
icu_52::UnicodeString::toTitle(icu_52::BreakIterator*, icu_52::Locale const&, unsigned int)
icu_52::UnicodeString::toUTF32(int*, int, UErrorCode&) const
icu_52::UnicodeString::toUTF8(icu_52::ByteSink&) const
icu_52::UnicodeString::toUTF8(int, int, char*, int) const
icu_52::UnicodeString::toUpper()
icu_52::UnicodeString::toUpper(icu_52::Locale const&)
icu_52::UnicodeString::trim()
icu_52::UnicodeString::unBogus()
icu_52::UnicodeString::unescape() const
icu_52::UnicodeString::unescapeAt(int&) const
icu_52::UnicodeString::~UnicodeString()
icu_52::UnicodeStringAppendable::appendCodePoint(int)
icu_52::UnicodeStringAppendable::appendCodeUnit(unsigned short)
icu_52::UnicodeStringAppendable::appendString(unsigned short const*, int)
icu_52::UnicodeStringAppendable::getAppendBuffer(int, int, unsigned short*, int, int*)
icu_52::UnicodeStringAppendable::reserveAppendCapacity(int)
icu_52::UnicodeStringAppendable::~UnicodeStringAppendable()
icu_52::_set_add(USet*, int)
icu_52::_set_addRange(USet*, int, int)
icu_52::_set_addString(USet*, unsigned short const*, int)
icu_52::asciiData
icu_52::availableLocaleList
icu_52::availableLocaleListCount
icu_52::cache
icu_52::calcAlgNameSetsLengths(int) [clone .constprop.8]
icu_52::calcGroupNameSetsLengths(int)
icu_52::calcNameSetLength(unsigned short const*, unsigned short, unsigned char const*, signed char*, unsigned int*, unsigned char const**, unsigned char const*) [clone .constprop.9]
icu_52::charCatNames
icu_52::charSetToUSet(unsigned int*, USetAdder const*) [clone .isra.6] [clone .constprop.7]
icu_52::cloneUnicodeString(UElement*, UElement*)
icu_52::compareUnicodeString(UElement, UElement)
icu_52::createUni32Set(UErrorCode&)
icu_52::enumAlgNames(icu_52::AlgorithmicRange*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice) [clone .part.1]
icu_52::enumGroupNames(icu_52::UCharNames*, unsigned short const*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)
icu_52::enumNames(icu_52::UCharNames*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)
icu_52::expandName(icu_52::UCharNames*, unsigned char const*, unsigned short, UCharNameChoice, char*, unsigned short)
icu_52::gCharNamesInitOnce
icu_52::gDefaultLocale
icu_52::gDefaultLocaleMutex
icu_52::gDefaultLocalesHashT
icu_52::gICUInitOnce
icu_52::gInitOnce
icu_52::gLocaleCache
icu_52::gLocaleLock
icu_52::gMaxNameLength
icu_52::gNameSet
icu_52::gRuleParseStateTable
icu_52::generalCategoryMaskFilter(int, void*)
icu_52::getAlgName(icu_52::AlgorithmicRange*, unsigned int, UCharNameChoice, char*, unsigned short) [clone .part.0]
icu_52::getExtName(unsigned int, char*, unsigned short)
icu_52::getKatakanaCost(int)::katakanaCost
icu_52::getName(icu_52::UCharNames*, unsigned int, UCharNameChoice, char*, unsigned short)
icu_52::index2000
icu_52::initCondition
icu_52::initMutex
icu_52::initSingletons(char const*, UErrorCode&)
icu_52::intPropertyFilter(int, void*)
icu_52::isAcceptable(void*, char const*, char const*, UDataInfo const*)
icu_52::kOffsetColon
icu_52::kOther
icu_52::latin1
icu_52::listFormatterMutex
icu_52::listPatternHash
icu_52::llock
icu_52::locale_available_init()
icu_52::locale_set_default_internal(char const*, UErrorCode&)
icu_52::lock
icu_52::makeTokenMap(UDataSwapper const*, short*, unsigned short, unsigned char*, UErrorCode*) [clone .part.2]
icu_52::nfcInitOnce
icu_52::nfcSingleton
icu_52::nfkcInitOnce
icu_52::nfkcSingleton
icu_52::nfkc_cfInitOnce
icu_52::nfkc_cfSingleton
icu_52::noopInitOnce
icu_52::noopSingleton
icu_52::notifyLock
icu_52::numericValueFilter(int, void*)
icu_52::operator+(icu_52::UnicodeString const&, icu_52::UnicodeString const&)
icu_52::operator==(icu_52::StringPiece const&, icu_52::StringPiece const&)
icu_52::scriptExtensionsFilter(int, void*)
icu_52::set32x64Bits(unsigned int*, int, int)
icu_52::sortComparator(void const*, void const*, void const*)
icu_52::sortiComparator(void const*, void const*, void const*)
icu_52::syntax2000
icu_52::syntaxOrWhiteSpace2000
icu_52::uCharNames
icu_52::uCharNamesData
icu_52::uinit_cleanup()
icu_52::umtx_initImplPostInit(icu_52::UInitOnce&)
icu_52::umtx_initImplPreInit(icu_52::UInitOnce&)
icu_52::unames_cleanup()
icu_52::versionFilter(int, void*)
icu_52::versionFilter(int, void*)::none
icu_52::writeFactorSuffix(unsigned short const*, unsigned short, char const*, unsigned int, unsigned short*, char const**, char const**, char*, unsigned short)
icudataver.c
icudt52_dat
icudt52l
icudt52l-
icudt52l-curr
icudt52l-lang
icudt52l-region
icudt52l/af.res
icudt52l/ak.res
icudt52l/am.res
icudt52l/ar.res
icudt52l/az.res
icudt52l/be.res
icudt52l/bem.res
icudt52l/bg.res
icudt52l/bn.res
icudt52l/br.res
icudt52l/brkitr/char.brk
icudt52l/brkitr/cjdict.dict
icudt52l/brkitr/el.res
icudt52l/brkitr/en.res
icudt52l/brkitr/en_US.res
icudt52l/brkitr/fi.res
icudt52l/brkitr/khmerdict.dict
icudt52l/brkitr/laodict.dict
icudt52l/brkitr/line.brk
icudt52l/brkitr/line_fi.brk
icudt52l/brkitr/res_index.res
icudt52l/brkitr/root.res
icudt52l/brkitr/sent.brk
icudt52l/brkitr/sent_el.brk
icudt52l/brkitr/thaidict.dict
icudt52l/brkitr/title.brk
icudt52l/brkitr/word.brk
icudt52l/bs.res
icudt52l/ca.res
icudt52l/cnvalias.icu
icudt52l/coll/ar.res
icudt52l/coll/ar_AE.res
icudt52l/coll/ar_BH.res
icudt52l/coll/ar_DZ.res
icudt52l/coll/ar_EG.res
icudt52l/coll/ar_IQ.res
icudt52l/coll/ar_JO.res
icudt52l/coll/ar_KW.res
icudt52l/coll/ar_LB.res
icudt52l/coll/ar_LY.res
icudt52l/coll/ar_MA.res
icudt52l/coll/ar_OM.res
icudt52l/coll/ar_QA.res
icudt52l/coll/ar_SA.res
icudt52l/coll/ar_SD.res
icudt52l/coll/ar_SY.res
icudt52l/coll/ar_TN.res
icudt52l/coll/ar_YE.res
icudt52l/coll/bg.res
icudt52l/coll/bg_BG.res
icudt52l/coll/bn.res
icudt52l/coll/ca.res
icudt52l/coll/ca_ES.res
icudt52l/coll/cs.res
icudt52l/coll/cs_CZ.res
icudt52l/coll/da.res
icudt52l/coll/da_DK.res
icudt52l/coll/de.res
icudt52l/coll/de_.res
icudt52l/coll/de_AT.res
icudt52l/coll/de_BE.res
icudt52l/coll/de_CH.res
icudt52l/coll/de_DE.res
icudt52l/coll/de_LU.res
icudt52l/coll/de__PHONEBOOK.res
icudt52l/coll/el.res
icudt52l/coll/el_GR.res
icudt52l/coll/en.res
icudt52l/coll/en_AU.res
icudt52l/coll/en_BW.res
icudt52l/coll/en_CA.res
icudt52l/coll/en_GB.res
icudt52l/coll/en_HK.res
icudt52l/coll/en_IE.res
icudt52l/coll/en_IN.res
icudt52l/coll/en_MT.res
icudt52l/coll/en_NZ.res
icudt52l/coll/en_PH.res
icudt52l/coll/en_SG.res
icudt52l/coll/en_US.res
icudt52l/coll/en_US_POSIX.res
icudt52l/coll/en_VI.res
icudt52l/coll/en_ZA.res
icudt52l/coll/en_ZW.res
icudt52l/coll/es.res
icudt52l/coll/es_.res
icudt52l/coll/es_AR.res
icudt52l/coll/es_BO.res
icudt52l/coll/es_CL.res
icudt52l/coll/es_CO.res
icudt52l/coll/es_CR.res
icudt52l/coll/es_DO.res
icudt52l/coll/es_EC.res
icudt52l/coll/es_ES.res
icudt52l/coll/es_GT.res
icudt52l/coll/es_HN.res
icudt52l/coll/es_MX.res
icudt52l/coll/es_NI.res
icudt52l/coll/es_PA.res
icudt52l/coll/es_PE.res
icudt52l/coll/es_PR.res
icudt52l/coll/es_PY.res
icudt52l/coll/es_SV.res
icudt52l/coll/es_US.res
icudt52l/coll/es_UY.res
icudt52l/coll/es_VE.res
icudt52l/coll/es__TRADITIONAL.res
icudt52l/coll/et.res
icudt52l/coll/fa.res
icudt52l/coll/fi.res
icudt52l/coll/fi_FI.res
icudt52l/coll/fil.res
icudt52l/coll/fr.res
icudt52l/coll/fr_BE.res
icudt52l/coll/fr_CA.res
icudt52l/coll/fr_CH.res
icudt52l/coll/fr_FR.res
icudt52l/coll/fr_LU.res
icudt52l/coll/ga.res
icudt52l/coll/ga_IE.res
icudt52l/coll/gu.res
icudt52l/coll/he.res
icudt52l/coll/he_IL.res
icudt52l/coll/hi.res
icudt52l/coll/hi_IN.res
icudt52l/coll/hr.res
icudt52l/coll/hr_HR.res
icudt52l/coll/hu.res
icudt52l/coll/hu_HU.res
icudt52l/coll/id.res
icudt52l/coll/id_ID.res
icudt52l/coll/in.res
icudt52l/coll/in_ID.res
icudt52l/coll/it.res
icudt52l/coll/it_CH.res
icudt52l/coll/it_IT.res
icudt52l/coll/iw.res
icudt52l/coll/iw_IL.res
icudt52l/coll/ja.res
icudt52l/coll/ja_JP.res
icudt52l/coll/kn.res
icudt52l/coll/ko.res
icudt52l/coll/ko_KR.res
icudt52l/coll/lt.res
icudt52l/coll/lt_LT.res
icudt52l/coll/lv.res
icudt52l/coll/lv_LV.res
icudt52l/coll/ml.res
icudt52l/coll/mo.res
icudt52l/coll/mr.res
icudt52l/coll/ms.res
icudt52l/coll/nb.res
icudt52l/coll/nb_NO.res
icudt52l/coll/nl.res
icudt52l/coll/nl_BE.res
icudt52l/coll/nl_NL.res
icudt52l/coll/nn.res
icudt52l/coll/nn_NO.res
icudt52l/coll/no.res
icudt52l/coll/no_NO.res
icudt52l/coll/pl.res
icudt52l/coll/pl_PL.res
icudt52l/coll/pt.res
icudt52l/coll/pt_BR.res
icudt52l/coll/pt_PT.res
icudt52l/coll/res_index.res
icudt52l/coll/ro.res
icudt52l/coll/ro_MD.res
icudt52l/coll/ro_RO.res
icudt52l/coll/root.res
icudt52l/coll/ru.res
icudt52l/coll/ru_RU.res
icudt52l/coll/ru_UA.res
icudt52l/coll/sk.res
icudt52l/coll/sk_SK.res
icudt52l/coll/sl.res
icudt52l/coll/sl_SI.res
icudt52l/coll/sr.res
icudt52l/coll/sr_BA.res
icudt52l/coll/sr_Cyrl.res
icudt52l/coll/sr_Cyrl_BA.res
icudt52l/coll/sr_Cyrl_ME.res
icudt52l/coll/sr_Cyrl_RS.res
icudt52l/coll/sr_Latn.res
icudt52l/coll/sr_Latn_BA.res
icudt52l/coll/sr_Latn_ME.res
icudt52l/coll/sr_Latn_RS.res
icudt52l/coll/sr_ME.res
icudt52l/coll/sr_RS.res
icudt52l/coll/sv.res
icudt52l/coll/sv_FI.res
icudt52l/coll/sv_SE.res
icudt52l/coll/ta.res
icudt52l/coll/te.res
icudt52l/coll/th.res
icudt52l/coll/th_TH.res
icudt52l/coll/tr.res
icudt52l/coll/tr_TR.res
icudt52l/coll/ucadata.icu
icudt52l/coll/uk.res
icudt52l/coll/uk_UA.res
icudt52l/coll/vi.res
icudt52l/coll/vi_VN.res
icudt52l/coll/zh.res
icudt52l/coll/zh_CN.res
icudt52l/coll/zh_HK.res
icudt52l/coll/zh_Hans.res
icudt52l/coll/zh_Hans_CN.res
icudt52l/coll/zh_Hans_SG.res
icudt52l/coll/zh_Hant.res
icudt52l/coll/zh_Hant_HK.res
icudt52l/coll/zh_Hant_MO.res
icudt52l/coll/zh_Hant_TW.res
icudt52l/coll/zh_MO.res
icudt52l/coll/zh_SG.res
icudt52l/coll/zh_TW.res
icudt52l/confusables.cfu
icudt52l/cs.res
icudt52l/curr/am.res
icudt52l/curr/ar.res
icudt52l/curr/bg.res
icudt52l/curr/bn.res
icudt52l/curr/ca.res
icudt52l/curr/cs.res
icudt52l/curr/da.res
icudt52l/curr/de.res
icudt52l/curr/el.res
icudt52l/curr/en.res
icudt52l/curr/es.res
icudt52l/curr/es_AR.res
icudt52l/curr/es_CL.res
icudt52l/curr/es_CO.res
icudt52l/curr/es_EC.res
icudt52l/curr/es_GT.res
icudt52l/curr/es_HN.res
icudt52l/curr/es_MX.res
icudt52l/curr/es_PR.res
icudt52l/curr/es_US.res
icudt52l/curr/es_UY.res
icudt52l/curr/et.res
icudt52l/curr/fa.res
icudt52l/curr/fi.res
icudt52l/curr/fil.res
icudt52l/curr/fr.res
icudt52l/curr/gu.res
icudt52l/curr/he.res
icudt52l/curr/hi.res
icudt52l/curr/hr.res
icudt52l/curr/hu.res
icudt52l/curr/id.res
icudt52l/curr/in.res
icudt52l/curr/it.res
icudt52l/curr/iw.res
icudt52l/curr/ja.res
icudt52l/curr/kn.res
icudt52l/curr/ko.res
icudt52l/curr/lt.res
icudt52l/curr/lv.res
icudt52l/curr/ml.res
icudt52l/curr/mr.res
icudt52l/curr/ms.res
icudt52l/curr/nb.res
icudt52l/curr/nl.res
icudt52l/curr/no.res
icudt52l/curr/pl.res
icudt52l/curr/pool.res
icudt52l/curr/pt.res
icudt52l/curr/pt_PT.res
icudt52l/curr/res_index.res
icudt52l/curr/ro.res
icudt52l/curr/root.res
icudt52l/curr/ru.res
icudt52l/curr/sk.res
icudt52l/curr/sl.res
icudt52l/curr/sr.res
icudt52l/curr/supplementalData.res
icudt52l/curr/sv.res
icudt52l/curr/sw.res
icudt52l/curr/ta.res
icudt52l/curr/te.res
icudt52l/curr/th.res
icudt52l/curr/tl.res
icudt52l/curr/tr.res
icudt52l/curr/uk.res
icudt52l/curr/vi.res
icudt52l/curr/zh.res
icudt52l/curr/zh_CN.res
icudt52l/curr/zh_HK.res
icudt52l/curr/zh_Hans.res
icudt52l/curr/zh_Hans_CN.res
icudt52l/curr/zh_Hans_SG.res
icudt52l/curr/zh_Hant.res
icudt52l/curr/zh_Hant_HK.res
icudt52l/curr/zh_Hant_TW.res
icudt52l/curr/zh_SG.res
icudt52l/curr/zh_TW.res
icudt52l/currencyNumericCodes.res
icudt52l/cy.res
icudt52l/da.res
icudt52l/dayPeriods.res
icudt52l/de.res
icudt52l/ee.res
icudt52l/el.res
icudt52l/en.res
icudt52l/en_001.res
icudt52l/en_AU.res
icudt52l/en_GB.res
icudt52l/en_US.res
icudt52l/eo.res
icudt52l/es.res
icudt52l/es_419.res
icudt52l/es_AR.res
icudt52l/es_BO.res
icudt52l/es_CL.res
icudt52l/es_CO.res
icudt52l/es_CR.res
icudt52l/es_DO.res
icudt52l/es_EC.res
icudt52l/es_ES.res
icudt52l/es_GT.res
icudt52l/es_HN.res
icudt52l/es_MX.res
icudt52l/es_NI.res
icudt52l/es_PA.res
icudt52l/es_PE.res
icudt52l/es_PR.res
icudt52l/es_PY.res
icudt52l/es_SV.res
icudt52l/es_US.res
icudt52l/es_UY.res
icudt52l/es_VE.res
icudt52l/et.res
icudt52l/eu.res
icudt52l/euc-jp-html5.cnv
icudt52l/fa.res
icudt52l/fi.res
icudt52l/fil.res
icudt52l/fo.res
icudt52l/fr.res
icudt52l/ga.res
icudt52l/gb18030.cnv
icudt52l/genderList.res
icudt52l/gl.res
icudt52l/gu.res
icudt52l/ha.res
icudt52l/haw.res
icudt52l/he.res
icudt52l/hi.res
icudt52l/hr.res
icudt52l/hu.res
icudt52l/hy.res
icudt52l/ibm-1089_P100-1995.cnv
icudt52l/ibm-1168_P100-2002.cnv
icudt52l/ibm-1375_P100-2007.cnv
icudt52l/ibm-5012_P100-1999.cnv
icudt52l/ibm-5346_P100-1998.cnv
icudt52l/ibm-5347_P100-1998.cnv
icudt52l/ibm-5348_P100-1997.cnv
icudt52l/ibm-5349_P100-1998.cnv
icudt52l/ibm-5350_P100-1998.cnv
icudt52l/ibm-5354_P100-1998.cnv
icudt52l/ibm-866_html5-2012.cnv
icudt52l/ibm-874_P100-1995.cnv
icudt52l/ibm-878_P100-1996.cnv
icudt52l/ibm-9005_X110-2007.cnv
icudt52l/ibm-912_P100-1995.cnv
icudt52l/ibm-913_P100-2000.cnv
icudt52l/ibm-914_P100-1995.cnv
icudt52l/ibm-915_P100-1995.cnv
icudt52l/ibm-920_P100-1995.cnv
icudt52l/ibm-921_P100-1995.cnv
icudt52l/ibm-923_P100-1998.cnv
icudt52l/ibm-943_P15A-2003.cnv
icudt52l/ibm-9447_P100-2002.cnv
icudt52l/ibm-9448_X100-2005.cnv
icudt52l/ibm-9449_P100-2002.cnv
icudt52l/icustd.res
icudt52l/icuver.res
icudt52l/id.res
icudt52l/ig.res
icudt52l/in.res
icudt52l/is.res
icudt52l/iso-8859_10-1998.cnv
icudt52l/iso-8859_14-1998.cnv
icudt52l/iso-8859_16-2001.cnv
icudt52l/it.res
icudt52l/iw.res
icudt52l/ja.res
icudt52l/ka.res
icudt52l/keyTypeData.res
icudt52l/kk.res
icudt52l/km.res
icudt52l/kn.res
icudt52l/ko.res
icudt52l/ky.res
icudt52l/lang/af.res
icudt52l/lang/ak.res
icudt52l/lang/am.res
icudt52l/lang/ar.res
icudt52l/lang/az.res
icudt52l/lang/be.res
icudt52l/lang/bem.res
icudt52l/lang/bg.res
icudt52l/lang/bn.res
icudt52l/lang/br.res
icudt52l/lang/bs.res
icudt52l/lang/ca.res
icudt52l/lang/cs.res
icudt52l/lang/cy.res
icudt52l/lang/da.res
icudt52l/lang/de.res
icudt52l/lang/ee.res
icudt52l/lang/el.res
icudt52l/lang/en.res
icudt52l/lang/eo.res
icudt52l/lang/es.res
icudt52l/lang/es_AR.res
icudt52l/lang/es_CL.res
icudt52l/lang/et.res
icudt52l/lang/eu.res
icudt52l/lang/fa.res
icudt52l/lang/fi.res
icudt52l/lang/fil.res
icudt52l/lang/fo.res
icudt52l/lang/fr.res
icudt52l/lang/ga.res
icudt52l/lang/gl.res
icudt52l/lang/gu.res
icudt52l/lang/ha.res
icudt52l/lang/haw.res
icudt52l/lang/he.res
icudt52l/lang/hi.res
icudt52l/lang/hr.res
icudt52l/lang/hu.res
icudt52l/lang/hy.res
icudt52l/lang/id.res
icudt52l/lang/ig.res
icudt52l/lang/in.res
icudt52l/lang/is.res
icudt52l/lang/it.res
icudt52l/lang/iw.res
icudt52l/lang/ja.res
icudt52l/lang/ka.res
icudt52l/lang/kk.res
icudt52l/lang/km.res
icudt52l/lang/kn.res
icudt52l/lang/ko.res
icudt52l/lang/ky.res
icudt52l/lang/lg.res
icudt52l/lang/ln.res
icudt52l/lang/lo.res
icudt52l/lang/lt.res
icudt52l/lang/lv.res
icudt52l/lang/mfe.res
icudt52l/lang/mg.res
icudt52l/lang/mk.res
icudt52l/lang/ml.res
icudt52l/lang/mn.res
icudt52l/lang/mo.res
icudt52l/lang/mr.res
icudt52l/lang/ms.res
icudt52l/lang/mt.res
icudt52l/lang/my.res
icudt52l/lang/nb.res
icudt52l/lang/ne.res
icudt52l/lang/nl.res
icudt52l/lang/nn.res
icudt52l/lang/no.res
icudt52l/lang/nyn.res
icudt52l/lang/om.res
icudt52l/lang/or.res
icudt52l/lang/pa.res
icudt52l/lang/pl.res
icudt52l/lang/pool.res
icudt52l/lang/ps.res
icudt52l/lang/pt.res
icudt52l/lang/pt_PT.res
icudt52l/lang/res_index.res
icudt52l/lang/rm.res
icudt52l/lang/rn.res
icudt52l/lang/ro.res
icudt52l/lang/root.res
icudt52l/lang/ru.res
icudt52l/lang/rw.res
icudt52l/lang/sh.res
icudt52l/lang/si.res
icudt52l/lang/sk.res
icudt52l/lang/sl.res
icudt52l/lang/sn.res
icudt52l/lang/so.res
icudt52l/lang/sq.res
icudt52l/lang/sr.res
icudt52l/lang/sr_Latn.res
icudt52l/lang/sv.res
icudt52l/lang/sw.res
icudt52l/lang/ta.res
icudt52l/lang/te.res
icudt52l/lang/tg.res
icudt52l/lang/th.res
icudt52l/lang/ti.res
icudt52l/lang/tl.res
icudt52l/lang/to.res
icudt52l/lang/tr.res
icudt52l/lang/uk.res
icudt52l/lang/ur.res
icudt52l/lang/uz.res
icudt52l/lang/vi.res
icudt52l/lang/yo.res
icudt52l/lang/zh.res
icudt52l/lang/zh_CN.res
icudt52l/lang/zh_HK.res
icudt52l/lang/zh_Hans.res
icudt52l/lang/zh_Hans_CN.res
icudt52l/lang/zh_Hans_SG.res
icudt52l/lang/zh_Hant.res
icudt52l/lang/zh_Hant_HK.res
icudt52l/lang/zh_Hant_TW.res
icudt52l/lang/zh_SG.res
icudt52l/lang/zh_TW.res
icudt52l/lang/zu.res
icudt52l/lg.res
icudt52l/likelySubtags.res
icudt52l/ln.res
icudt52l/lo.res
icudt52l/lt.res
icudt52l/lv.res
icudt52l/macos-0_2-10.2.cnv
icudt52l/macos-7_3-10.2.cnv
icudt52l/metaZones.res
icudt52l/metadata.res
icudt52l/mfe.res
icudt52l/mg.res
icudt52l/mk.res
icudt52l/ml.res
icudt52l/mn.res
icudt52l/mo.res
icudt52l/mr.res
icudt52l/ms.res
icudt52l/mt.res
icudt52l/my.res
icudt52l/nb.res
icudt52l/ne.res
icudt52l/nfc.nrm
icudt52l/nfkc.nrm
icudt52l/nfkc_cf.nrm
icudt52l/nl.res
icudt52l/nn.res
icudt52l/no.res
icudt52l/noop-cns-11643.cnv
icudt52l/noop-gb2312_gl.cnv
icudt52l/noop-iso-ir-165.cnv
icudt52l/numberingSystems.res
icudt52l/nyn.res
icudt52l/om.res
icudt52l/or.res
icudt52l/pa.res
icudt52l/pl.res
icudt52l/plurals.res
icudt52l/pool.res
icudt52l/postalCodeData.res
icudt52l/ps.res
icudt52l/pt.res
icudt52l/pt_BR.res
icudt52l/pt_PT.res
icudt52l/rbnf/res_index.res
icudt52l/region/am.res
icudt52l/region/ar.res
icudt52l/region/bg.res
icudt52l/region/bn.res
icudt52l/region/ca.res
icudt52l/region/cs.res
icudt52l/region/da.res
icudt52l/region/de.res
icudt52l/region/el.res
icudt52l/region/en.res
icudt52l/region/es.res
icudt52l/region/es_CL.res
icudt52l/region/et.res
icudt52l/region/fa.res
icudt52l/region/fi.res
icudt52l/region/fil.res
icudt52l/region/fr.res
icudt52l/region/gu.res
icudt52l/region/he.res
icudt52l/region/hi.res
icudt52l/region/hr.res
icudt52l/region/hu.res
icudt52l/region/id.res
icudt52l/region/in.res
icudt52l/region/it.res
icudt52l/region/iw.res
icudt52l/region/ja.res
icudt52l/region/kn.res
icudt52l/region/ko.res
icudt52l/region/lt.res
icudt52l/region/lv.res
icudt52l/region/ml.res
icudt52l/region/mr.res
icudt52l/region/ms.res
icudt52l/region/nb.res
icudt52l/region/nl.res
icudt52l/region/no.res
icudt52l/region/pl.res
icudt52l/region/pool.res
icudt52l/region/pt.res
icudt52l/region/pt_PT.res
icudt52l/region/res_index.res
icudt52l/region/ro.res
icudt52l/region/root.res
icudt52l/region/ru.res
icudt52l/region/sk.res
icudt52l/region/sl.res
icudt52l/region/sr.res
icudt52l/region/sv.res
icudt52l/region/sw.res
icudt52l/region/ta.res
icudt52l/region/te.res
icudt52l/region/th.res
icudt52l/region/tl.res
icudt52l/region/tr.res
icudt52l/region/uk.res
icudt52l/region/vi.res
icudt52l/region/zh.res
icudt52l/region/zh_CN.res
icudt52l/region/zh_HK.res
icudt52l/region/zh_Hans.res
icudt52l/region/zh_Hans_CN.res
icudt52l/region/zh_Hans_SG.res
icudt52l/region/zh_Hant.res
icudt52l/region/zh_Hant_HK.res
icudt52l/region/zh_Hant_TW.res
icudt52l/region/zh_SG.res
icudt52l/region/zh_TW.res
icudt52l/res_index.res
icudt52l/rm.res
icudt52l/rn.res
icudt52l/ro.res
icudt52l/ro_MD.res
icudt52l/root.res
icudt52l/ru.res
icudt52l/rw.res
icudt52l/sh.res
icudt52l/si.res
icudt52l/sk.res
icudt52l/sl.res
icudt52l/sn.res
icudt52l/so.res
icudt52l/sq.res
icudt52l/sr.res
icudt52l/sr_Latn.res
icudt52l/supplementalData.res
icudt52l/sv.res
icudt52l/sw.res
icudt52l/ta.res
icudt52l/te.res
icudt52l/tg.res
icudt52l/th.res
icudt52l/ti.res
icudt52l/timezoneTypes.res
icudt52l/tl.res
icudt52l/to.res
icudt52l/tr.res
icudt52l/translit/root.res
icudt52l/uk.res
icudt52l/ur.res
icudt52l/uts46.nrm
icudt52l/uz.res
icudt52l/vi.res
icudt52l/windows-874-2000.cnv
icudt52l/windows-936-2000.cnv
icudt52l/windows-949-2000.cnv
icudt52l/windows-950-2000.cnv
icudt52l/windowsZones.res
icudt52l/yo.res
icudt52l/zh.res
icudt52l/zh_CN.res
icudt52l/zh_HK.res
icudt52l/zh_Hans.res
icudt52l/zh_Hans_CN.res
icudt52l/zh_Hans_SG.res
icudt52l/zh_Hant.res
icudt52l/zh_Hant_HK.res
icudt52l/zh_Hant_TW.res
icudt52l/zh_SG.res
icudt52l/zh_TW.res
icudt52l/zone/am.res
icudt52l/zone/ar.res
icudt52l/zone/bg.res
icudt52l/zone/bn.res
icudt52l/zone/ca.res
icudt52l/zone/cs.res
icudt52l/zone/da.res
icudt52l/zone/de.res
icudt52l/zone/el.res
icudt52l/zone/en.res
icudt52l/zone/en_GB.res
icudt52l/zone/es.res
icudt52l/zone/et.res
icudt52l/zone/fa.res
icudt52l/zone/fi.res
icudt52l/zone/fil.res
icudt52l/zone/fr.res
icudt52l/zone/gu.res
icudt52l/zone/he.res
icudt52l/zone/hi.res
icudt52l/zone/hr.res
icudt52l/zone/hu.res
icudt52l/zone/id.res
icudt52l/zone/in.res
icudt52l/zone/it.res
icudt52l/zone/iw.res
icudt52l/zone/ja.res
icudt52l/zone/kn.res
icudt52l/zone/ko.res
icudt52l/zone/lt.res
icudt52l/zone/lv.res
icudt52l/zone/ml.res
icudt52l/zone/mr.res
icudt52l/zone/ms.res
icudt52l/zone/nb.res
icudt52l/zone/nl.res
icudt52l/zone/no.res
icudt52l/zone/pl.res
icudt52l/zone/pool.res
icudt52l/zone/pt.res
icudt52l/zone/pt_PT.res
icudt52l/zone/res_index.res
icudt52l/zone/ro.res
icudt52l/zone/root.res
icudt52l/zone/ru.res
icudt52l/zone/sk.res
icudt52l/zone/sl.res
icudt52l/zone/sr.res
icudt52l/zone/sv.res
icudt52l/zone/sw.res
icudt52l/zone/ta.res
icudt52l/zone/te.res
icudt52l/zone/th.res
icudt52l/zone/tr.res
icudt52l/zone/uk.res
icudt52l/zone/vi.res
icudt52l/zone/zh.res
icudt52l/zone/zh_CN.res
icudt52l/zone/zh_HK.res
icudt52l/zone/zh_Hans.res
icudt52l/zone/zh_Hans_CN.res
icudt52l/zone/zh_Hans_SG.res
icudt52l/zone/zh_Hant.res
icudt52l/zone/zh_Hant_HK.res
icudt52l/zone/zh_Hant_TW.res
icudt52l/zone/zh_SG.res
icudt52l/zone/zh_TW.res
icudt52l/zoneinfo64.res
icudt52l/zu.res
icuplug.c
icuver
id
id2
id5
id_ID
identical
ido
ie
if
if0
if[
ig
ig_NG
ii
ii_CN
iii
ijo
ik
ik#
ik-
ik0
ike
ikl
iko
ikt
iku
ik{
ile
ilo
im
im)
im-
im;
imapmailboxname
impAct0
impAct1
impAct2
impTabL_DEFAULT
impTabL_GROUP_NUMBERS_WITH_R
impTabL_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
impTabL_INVERSE_LIKE_DIRECT_WITH_MARKS
impTabL_INVERSE_NUMBERS_AS_L
impTabL_NUMBERS_SPECIAL
impTabProps
impTabR_DEFAULT
impTabR_GROUP_NUMBERS_WITH_R
impTabR_INVERSE_LIKE_DIRECT
impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS
impTabR_INVERSE_NUMBERS_AS_L
impTab_DEFAULT
impTab_GROUP_NUMBERS_WITH_R
impTab_INVERSE_FOR_NUMBERS_SPECIAL
impTab_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS
impTab_INVERSE_LIKE_DIRECT
impTab_INVERSE_LIKE_DIRECT_WITH_MARKS
impTab_INVERSE_NUMBERS_AS_L
impTab_NUMBERS_SPECIAL
in
ina
inc
inch
inch-hg
ind
indian
ine
infinity
inh
init
initAliasData(UErrorCode&)
initAvailableConvertersList(UErrorCode&)
initIndexes
init_entry(char const*, char const*, UErrorCode*)
init_resb_result(ResourceData const*, unsigned int, char const*, int, UResourceDataEntry*, UResourceBundle const*, int, UResourceBundle*, UErrorCode*) [clone .part.8]
initial punctuation
initialDynamicOffsets
initialWindowUse
initialWindowUse_ja
insertBetween
intProps
int_getDefaultCodepage()::codesetName
internalSetName(char const*, UErrorCode*)
intervalFormats
invariantChars
io
io-
io_compareRows(void const*, void const*, void const*)
ipk
iq
iq0
ir
ir#
ir+
ir-
ir.
ir0
ir1
ir2
ir6
ir:
ir@
irR
ira
irf
iro
is
isAcceptable
isAcceptable(void*, char const*, char const*, UDataInfo const*)
isBidiControl(BinaryProperty const&, int, UProperty)
isCanonSegmentStarter(BinaryProperty const&, int, UProperty)
isCnvAcceptable(void*, char const*, char const*, UDataInfo const*)
isFollowedByCasedLetter(UCaseProps const*, int (*)(void*, signed char), void*, signed char)
isJoinControl(BinaryProperty const&, int, UProperty)
isMirrored(BinaryProperty const&, int, UProperty)
isNormInert(BinaryProperty const&, int, UProperty)
isPOSIX_alnum(BinaryProperty const&, int, UProperty)
isPOSIX_blank(BinaryProperty const&, int, UProperty)
isPOSIX_graph(BinaryProperty const&, int, UProperty)
isPOSIX_print(BinaryProperty const&, int, UProperty)
isPOSIX_xdigit(BinaryProperty const&, int, UProperty)
isSPrepAcceptable
isValidOlsonID(char const*)
is_IS
iscii
isl
islamic
islamic-civil
islamic-rgsa
islamic-tbla
islamic-umalqura
iso
iso-8859-11
iso-8859_10-1998
iso-8859_11-2001
iso-8859_14-1998
iso-8859_16-2001
iso-celtic
iso-ir-100
iso-ir-101
iso-ir-109
iso-ir-110
iso-ir-126
iso-ir-127
iso-ir-138
iso-ir-144
iso-ir-148
iso-ir-149
iso-ir-157
iso-ir-199
iso-ir-226
iso-ir-58
iso-ir-6
iso10646ucs2
iso10646ucs4
iso2022
iso2022cn
iso2022cnext
iso2022jp
iso2022kr
iso2022localejaversion0
iso2022localekoversion0
iso2022localezhversion0
iso2022localezhversion1
iso646irv1983
iso646irv1991
iso646us
iso8601
iso88591
iso885910
iso8859101992
iso8859101998
iso885911
iso8859112001
iso885911987
iso885913
iso885914
iso8859141998
iso885915
iso885915fdis
iso885916
iso8859162001
iso88592
iso885921987
iso88593
iso885931988
iso88594
iso885941988
iso88595
iso885951988
iso88596
iso885961987
iso88596e
iso88596i
iso88597
iso885971987
iso88598
iso885981988
iso88598e
iso88598i
iso88599
iso885991989
iso8859_15_fdis
iso_646.irv:1983
isoceltic
isoir100
isoir101
isoir109
isoir110
isoir126
isoir127
isoir138
isoir144
isoir148
isoir149
isoir157
isoir199
isoir226
isoir58
isoir6
isspace
isspace@@GLIBC_2.2.5
it
it-
it_CH
it_IT
it_IT_PREEURO
ita
iu
iu-
iu_Cans
iu_Cans_CA
iu_Latn
iu_Latn_CA
iv
iv-
iw
iw_IL
iy
iz
iz0
i{
i|
i|-
i~+
i~-
i
j
j!
j"
j"r"
j#
j%
j'
j(
j)
j*
j-
j.
j0
j0"
j0#
j0&
j0)
j0,
j0-
j0/
j00
j01
j02
j03
j0;
j0=
j0G
j0H
j0R
j0i
j0w
j0z
j2
j26
j5
j9
j;
j<
j>
j?
jDot
jG
jO
jP
jQ
jR
jRf
jT
jU
jV-
jV2
jW
jW$
jW0
jW4
jW6
jWA
jX4
jY
jZ
j\
j]
j^
j`
ja
ja-
ja_JP
ja_JP_TRADITIONAL
japanese
jav
java
jaw
jbo
je
jef
jf
jg
jgo
jh
jh!
ji
ji-
jips
jisx-212
jj
jk
jklmnopqr
jl
jm
jm"
jm.
jm0
jm]
jmc
jml
jmx
jpCharsetMasks
jpan
jpanfin
jpn
jpr
jq
jr
jrb
js
jt
ju
ju!
ju-
ju0
ju=
ju?
juB
juf
jv
jv&
jw
jx
jz
j{
j}
j~
j
j%
j6
jM
jo
k
k#
k%
k&
k(
k*
k+
k-
k0
k0!
k0#
k0$
k0'
k0-
k00
k01
k02
k0C
k0M
k0Y
k1
k3
k7
k=
k@
kAny
kB
kD
kF
kI
kLocaleScript
kM
kN
kP
kQ
kQ"
kQ)
kQ*
kQ-
kQ0
kQ1
kQ?
kQV
kS
kS0
kSubstituteChar.4299
kSubstituteChar1.4298
kT
kT-
kV
kW
kX
kX0
kY
k[
k[*
k[-
k[0
k[Z
k]-
k^
ka
ka_GE
kaa
kab
kac
kaj
kal
kali
kam
kan
kao
kar
kas
kat
kau
kaw
kaz
kb,
kbd
kbl
kc
kca
kcg
kck
kd-
kde
kdt
ke
kea
keis
ken
keyMap
keyTypePattern
kf
kfo
kfr
kfy
kg
kge
kgp
kh
kha
khb
khi
khk
khm
khmr
khn
kho
khq
kht
khw
ki
kik
kilogram
kilometer-per-hour
kilowatt
kin
kir
kj
kj0
kj3
kjg
kjh
kk
kk_AF
kk_Arab
kk_CN
kk_Cyrl
kk_IR
kk_KZ
kk_MN
kkj
kl
kl_GL
kln
km
km_KH
kmb
kmr
kn
kn_IN
knc
knda
kng
knn
ko
ko_KP
ko_KR
koi
koi8
koi8r
koi8u
kok
kok_IN
kom
kon
kor
korean
kos
kp
kp)
kp0
kp8
kpF
kpT
kpe
kpv
kpy
kr
kr_NG
krc
kri
krl
kro
kru
ks
ks_Arab
ks_Arab_IN
ks_Deva_IN
ks_IN
ksb
ksc5601
ksc56011987
ksc56011989
ksc_5601
ksf
ksh
kt
ku
ku"
ku0
ku_Arab
ku_Arab_IQ
ku_LB
ku_Latn
kua
kum
kur
kut
kv
kvr
kvx
kw
kw0
kx
kx-
kxm
kxp
ky
ky_Arab
ky_CN
ky_Cyrl
ky_KG
ky_Latn
ky_TR
kyu
kz
kz-
k}
k~
k~'
k
l
l#
l$
l'
l'm'(
l'm'x
l(
l*
l-
l/
l0
l0!
l0#
l0$
l0*
l0/
l00
l01
l1
l10
l2
l3
l4
l5
l6
l7
l8
l9
l;
l<
l?
lO
lP
lQ
lQ0
lQ1
lQ6R
lQCQ
lQCQMR
lQz
lS
lT
lV
lY
lZ
lZ-
l[
l\
l\-
l]
l^
l`
la
la_IT
lad
lag
lah
laj
lam
lana
lanatham
language
languageAlias
languageData
languageMatching
languages
lao
laoo
lat
lateEvening
lateMorning
latin0
latin1
latin10
latin2
latin3
latin4
latin5
latin6
latin8
latin9
latn
lav
layout
lb
lb1
lb_LU
lbe
lbk
lbs
lbw
lc
lcp
ld
le
lead surrogate
leap
length
lep
lepc
letter number
lez
lf
lg
lg-
li
libc.so.6
libgcc_s.so.1
libicuuc.so
libm.so.6
libpthread.so.0
libstdc++.so.6
lif
lif_Deva
light-year
likelySubtags
lim
limb
lin
line
line separator
lines
links
lis
list
listPattern
listformatter.cpp
lit
liter
ljp
lki
lkt
ll
lm
lm-
lmb-excp
lmbcs1
lmbcs11
lmbcs16
lmbcs17
lmbcs18
lmbcs19
lmbcs2
lmbcs3
lmbcs4
lmbcs5
lmbcs6
lmbcs8
lmn
lmo
ln
lo
lo_LA
loadInstalledLocales()
locale=
localeDisplayPattern
locale_available_cleanup
locale_cleanup
locale_getKeywordsStart_52
locale_getKeywords_52
locale_get_default_52
locale_set_default_52
locales
locales_ordinals
localtime_r
localtime_r@@GLIBC_2.2.5
locavailable.cpp
locbased.cpp
locdispnames.cpp
locid.cpp
loclikely.cpp
locmap.c
locmap_af
locmap_am
locmap_ar
locmap_arn
locmap_as
locmap_az
locmap_ba
locmap_be
locmap_bg
locmap_bin
locmap_bn
locmap_bo
locmap_br
locmap_ca
locmap_chr
locmap_ckb
locmap_co
locmap_cs
locmap_cy
locmap_da
locmap_de
locmap_dv
locmap_el
locmap_en
locmap_en_US_POSIX
locmap_es
locmap_et
locmap_eu
locmap_fa
locmap_fa_AF
locmap_ff
locmap_fi
locmap_fil
locmap_fo
locmap_fr
locmap_fuv
locmap_fy
locmap_ga
locmap_gd
locmap_gl
locmap_gn
locmap_gsw
locmap_gu
locmap_ha
locmap_haw
locmap_he
locmap_hi
locmap_hr
locmap_hu
locmap_hy
locmap_ibb
locmap_id
locmap_ig
locmap_ii
locmap_is
locmap_it
locmap_iu
locmap_iw
locmap_ja
locmap_ka
locmap_kk
locmap_kl
locmap_km
locmap_kn
locmap_ko
locmap_kok
locmap_kr
locmap_ks
locmap_ky
locmap_la
locmap_lb
locmap_lo
locmap_lt
locmap_lv
locmap_mi
locmap_mk
locmap_ml
locmap_mn
locmap_mni
locmap_moh
locmap_mr
locmap_ms
locmap_mt
locmap_my
locmap_ne
locmap_nl
locmap_no
locmap_nso
locmap_oc
locmap_om
locmap_or_IN
locmap_pa
locmap_pap
locmap_pl
locmap_ps
locmap_pt
locmap_qu
locmap_qut
locmap_rm
locmap_ro
locmap_root
locmap_ru
locmap_rw
locmap_sa
locmap_sah
locmap_sd
locmap_se
locmap_si
locmap_sk
locmap_sl
locmap_so
locmap_sq
locmap_st
locmap_sv
locmap_sw
locmap_syr
locmap_ta
locmap_te
locmap_tg
locmap_th
locmap_ti
locmap_tk
locmap_tn
locmap_tr
locmap_ts
locmap_tt
locmap_tzm
locmap_ug
locmap_uk
locmap_ur
locmap_uz
locmap_ve
locmap_vi
locmap_wen
locmap_wo
locmap_xh
locmap_yi
locmap_yo
locmap_zh
locmap_zu
locresdata.cpp
locutil.cpp
log
log@@GLIBC_2.2.5
lol
lookAheadHardBreak
lookupInitialData
lookupTable
lower
lowercase letter
lowercaseAsciiFromEbcdic
loz
lp
lq
lr
lrc
ls
lt
lt_LT
ltz
lu
lua
lub
lug
lui
lun
luo
lus
lut
luy
luz
lv
lv-
lv^
lv_LV
lvariant
lvs
lw
lwl
lx
lx)
lxz
lzh
l{
l|
m
m!
m"
m#
m$
m%
m&
m'
m(
m)
m+
m-
m0
m0/
m00
m02
m04
m0]
m6
m:
m<
m>
m@
mB
mE
mH
mJ
mP
mP-
mQ
mQ)
mQ-
mQ0
mQ1
mQX
mS
mT
mV
mW
mX
mY
mY-
mZ
m\
m]
m^
m_
m_O
m`
m`1
m`N
mac
mac-cyrillic
maccy
maccyrillic
macintosh
macos-0_2-10.2
macos-7_3-10.2
macos02102
macos73102
macroman
mad
maf
mag
mah
mai
mak
mal
malloc
malloc@@GLIBC_2.2.5
man
man_GN
man_Latn
man_Nkoo
many
map
mapTimezones
mar
mas
mass
math symbol
maz
mb
mb-
mc
mc-
mc0
md
mde
mdf
mdh
mdr
mdt
measurementData
measurementSystemNames
med
memcmp
memcmp@@GLIBC_2.2.5
memcpy
memcpy@@GLIBC_2.14
memmove
memmove@@GLIBC_2.2.5
memset
memset@@GLIBC_2.2.5
men
mer
messagepattern.cpp
meta:Acre
meta:Afghanistan
meta:Africa_Central
meta:Africa_Eastern
meta:Africa_Southern
meta:Africa_Western
meta:Alaska
meta:Almaty
meta:Amazon
meta:America_Central
meta:America_Eastern
meta:America_Mountain
meta:America_Pacific
meta:Anadyr
meta:Aqtau
meta:Aqtobe
meta:Arabian
meta:Argentina
meta:Argentina_Western
meta:Armenia
meta:Atlantic
meta:Australia_Central
meta:Australia_CentralWestern
meta:Australia_Eastern
meta:Australia_Western
meta:Azerbaijan
meta:Azores
meta:Bangladesh
meta:Bhutan
meta:Bolivia
meta:Brasilia
meta:Brunei
meta:Cape_Verde
meta:Casey
meta:Chamorro
meta:Chatham
meta:Chile
meta:China
meta:Choibalsan
meta:Christmas
meta:Cocos
meta:Colombia
meta:Cook
meta:Cuba
meta:Davis
meta:DumontDUrville
meta:East_Timor
meta:Easter
meta:Ecuador
meta:Europe_Central
meta:Europe_Eastern
meta:Europe_Western
meta:Falkland
meta:Fiji
meta:French_Guiana
meta:French_Southern
meta:GMT
meta:Galapagos
meta:Gambier
meta:Georgia
meta:Gilbert_Islands
meta:Greenland_Eastern
meta:Greenland_Western
meta:Guam
meta:Gulf
meta:Guyana
meta:Hawaii_Aleutian
meta:Hong_Kong
meta:Hovd
meta:India
meta:Indian_Ocean
meta:Indochina
meta:Indonesia_Central
meta:Indonesia_Eastern
meta:Indonesia_Western
meta:Iran
meta:Irkutsk
meta:Israel
meta:Japan
meta:Kamchatka
meta:Kazakhstan_Eastern
meta:Kazakhstan_Western
meta:Korea
meta:Kosrae
meta:Krasnoyarsk
meta:Kyrgystan
meta:Lanka
meta:Line_Islands
meta:Lord_Howe
meta:Macau
meta:Macquarie
meta:Magadan
meta:Malaysia
meta:Maldives
meta:Marquesas
meta:Marshall_Islands
meta:Mauritius
meta:Mawson
meta:Mongolia
meta:Moscow
meta:Myanmar
meta:Nauru
meta:Nepal
meta:New_Caledonia
meta:New_Zealand
meta:Newfoundland
meta:Niue
meta:Norfolk
meta:Noronha
meta:North_Mariana
meta:Novosibirsk
meta:Omsk
meta:Pakistan
meta:Palau
meta:Papua_New_Guinea
meta:Paraguay
meta:Peru
meta:Philippines
meta:Phoenix_Islands
meta:Pierre_Miquelon
meta:Pitcairn
meta:Ponape
meta:Qyzylorda
meta:Reunion
meta:Rothera
meta:Sakhalin
meta:Samara
meta:Samoa
meta:Seychelles
meta:Singapore
meta:Solomon
meta:South_Georgia
meta:Suriname
meta:Syowa
meta:Tahiti
meta:Taipei
meta:Tajikistan
meta:Tokelau
meta:Tonga
meta:Truk
meta:Turkmenistan
meta:Tuvalu
meta:Uruguay
meta:Uzbekistan
meta:Vanuatu
meta:Venezuela
meta:Vladivostok
meta:Volgograd
meta:Vostok
meta:Wake
meta:Wallis
meta:Yakutsk
meta:Yekaterinburg
metazoneInfo
meter-per-second
metric
mfa
mfe
mg
mga
mgh
mgo
mgp
mgy
mh-
mhr
mi
mi#
mi-
mi0
mi_NZ
midDay
middle
mile-per-hour
millibar
millimeter
millisecond
mime
min
minusSign
mis
miscPatterns
mj
mk
mk_MK
mkd
mkh
ml
ml_IN
mlg
mlt
mlym
mmap
mmap@@GLIBC_2.2.5
mn
mn_CN
mn_Cyrl
mn_MN
mn_Mong
mn_Mong_CN
mnc
mni
mni_IN
mnk
mno
mns
mnw
mo
mo-
mo1
modf
modf@@GLIBC_2.2.5
modifier letter
modifier symbol
moe
moh
moh_CA
mol
mon
mong
month
month-format-except-narrow
month-standalone-except-narrow
monthNames
monthPatterns
months
morning
mos
mp0
mr
mr_IN
mrd
mri
mrj
ms
ms874
ms932
ms936
ms950
ms950hkscs
ms_Arab
ms_BN
ms_CC
ms_ID
ms_Latn
ms_MY
msa
mskanji
mt
mt-
mt_MT
mtei
mtr
mu
mua
mul
mun
munmap
munmap@@GLIBC_2.2.5
mup
mus
mv
mvy
mwk
mwl
mwr
mxc
my
my'
my)
my0
myN
my_MM
mya
mye
mymr
mymrshan
myn
myv
myx
myz
mz
m{
m{-
m|
m}-
m~
m~2
m
n
n!
n"
n#
n$
n%
n&
n,
n-
n0
n0!
n0"
n0#
n0%
n0'
n0+
n00
n01
n02
n03
n04
n06
n07
n08
n0@
n0Q
n0R
n0e
n0l
n8
n9
n>
nC
nF
nO
nO-
nQ
nR
nS-
nT
nW
nY
nY0
n[
n\-
n^
na
na-
na8
nah
nai
nan
nan-x-zh-min
nap
naq
nar
native
nau
nav
nb
nb_NO
nb_NO_NY
nbf
nbl
nc
nc1
nch
nd
ndc
nde
ndo
nds
ne
ne_IN
ne_NP
nep
new
nextStateToUnicodeCN
nextStateToUnicodeJP
nf
nf-
nf0
nf3
nfc
nfkc
nfkc_cf
ng
ngl
nh
nhe
nhw
nia
nic
night
nij
niu
nk
nkoo
nl
nl_BE
nl_BE_PREEURO
nl_NL
nl_NL_PREEURO
nl_langinfo
nl_langinfo@@GLIBC_2.2.5
nld
nm
nm0
nmg
nn
nn-
nn_NO
nnh
nno
no
no-bok
no-nyn
no0
no]
no_BOKMAL
no_NO
no_NO_NY
no_NYNORSK
no_bok
no_nyn
nob
nod
noe
nog
non
non spacing mark
non-ignorable
non-virtual thunk to icu_52::UnicodeFilter::matches(icu_52::Replaceable const&, int&, int, signed char)
non-virtual thunk to icu_52::UnicodeFilter::~UnicodeFilter()
non-virtual thunk to icu_52::UnicodeSet::addMatchSetTo(icu_52::UnicodeSet&) const
non-virtual thunk to icu_52::UnicodeSet::matches(icu_52::Replaceable const&, int&, int, signed char)
non-virtual thunk to icu_52::UnicodeSet::matchesIndexValue(unsigned char) const
non-virtual thunk to icu_52::UnicodeSet::toPattern(icu_52::UnicodeString&, signed char) const
non-virtual thunk to icu_52::UnicodeSet::~UnicodeSet()
noncharacter
none
noop
noop-cns-11643
noop-gb2312_gl
noop-iso-ir-165
noopCurrent
noopGetIndex
noopGetState
noopHasNext
noopMove
noopSetState
nor
normalizeSecondAndAppend(UNormalizer2 const*, unsigned short*, int, int, unsigned short const*, int, signed char, UErrorCode*) [clone .part.11]
normalize_esq_chars_2022
normalizer2.cpp
normalizer2impl.cpp
normlzr.cpp
np
npi
nq
nq%
nq0
nqo
nr
nr-
nrm
ns
ns-
ns9
nsk
nso
nso_ZA
nt
nub
nuktaSpecialCases
nul.5723
nul.5773
numberingSystems
numbers
numeric
nus
nv
nvH
nw/
nwc
nx
nxK
ny
nya
nym
nyn
nynorsk
nyo
nz
nzi
n{
n|
n|-
n}
n~
n
n,
n0
n1
n2
n3
n=
o
o 2
o!
o"
o$
o%
o%v%~%<(D(
o'
o+
o-
o.
o0
o0!
o0$
o0*
o00
o01
o02
o03
o0i
o0{
o1
o2
o3
o4
o5
o8
oB
oD
oH
oO-
oR
oR-
oR0
oS
oT-
oV
oW
oW-
oX
oY
oZ
o[
o\
o\!
o]
o_
o_-
o`
o`-
o`J
o`M
ob
oc
oc_FR
oci
od
oe
of
of"
of'
officialStatus
offsetTOCEntryCount
offsetTOCLookupFn
offsetsFromUTF8
og
og-
og/
ogL
oh
oi
oi%
oi?
oj
ojg
oji
ok
ol
ol-
olck
om
om_ET
on
on%
on&
on)
on0
on1
one
op-
op0
open@@GLIBC_2.2.5
openCommonData(char const*, int, UErrorCode*)
opendir
opendir@@GLIBC_2.2.5
operator delete(void*)
or
or_IN
ori
orm
ory
orya
os
osa
osc
osma
oss
ot-
ota
other
other letter
other number
other punctuation
other symbol
otk
oto
ou
ou-
ounce
out of memory swapping %u unames.icu tokens
outputChar
outputUString
ov
ow
ox
ox!
ox5
o{
o|
o~
o~-
o$
p
p w }
p!
p"3
p"K
p"q
p#
p#n
p$
p$r
p%
p&
p&~
p(
p(.
p(q
p)B
p+
p+(
p,
p,L
p-"
p-n
p/
p0
p0!
p0#
p0$
p0'
p0,
p0.
p0/
p00
p01
p02
p05
p0=
p0@
p0E
p0H
p0O
p0\
p2
p2G
p2p
p2
p3
p3*
p4
p5(
p6Q
p7
p7.
p8
p8,
p9-
p9
p:
p:!
p;
p<
p<p
p=
p='
p=5
p=@
p=v
p>e
p@
pAV
pAlloc
pAu
pB:
pB~
pC
pC&
pContext
pD
pE
pF
pFN
pFo
pFree
pH
pH)
pHm
pI
pKT
pK]
pL
pM/
pM>
pN1
pO
pOD
pP
pQ#
pQm
pQ}
pRealloc
pS
pS(
pS2
pS7RSO
pS<\
pSN
pT
pT-
pT/
pTraceDataFunc
pTraceEntryFunc
pTraceExitFunc
pU%
pUm
pVs
pW
pWi
pX
pY
pY-
pZ
pZQ
p[
p[-
p\
p\8
p]
p]`
p^
p^*
p^|
p_
p_-
p_Q
p`
pa
pa-
pa/
pa=
paL
pa_Arab
pa_Arab_PK
pa_Guru
pa_IN
pa_PK
paa
packDiff(int)
pag
pairedChars
pal
pam
pan
pap
pap_AN
paragraph separator
parseConverterOptions(char const*, UConverterNamePieces*, UConverterLoadArgs*, UErrorCode*)
parseTagString(char const*, char*, int*, char*, int*, char*, int*, UErrorCode*)
parsepos.cpp
past
pattern
patternprops.cpp
patterns
patternsLong
patternsShort
pau
pb
pb[
pbl
pbu
pb}
pc)
pck
pcs
pcy
pd
pdJ\
pdy
pe
pe!
pe&
pe0
pe1
pe>
peW[
peo
per
perMille
percentFormat
percentSign
persian
pes
pf
pg
pg-
pgU
pgn
ph
phi
phn
phonebook
phonetic
pi
pi4
pi;
picometer
pinyin
pk
pkY
pko
pk|
pl
pl0
pl_PL
pli
plt
pluginCount
pluginList
plusSign
pm
pn
pnb
pnjMap
po
po0
po4
pointerTOCEntryCount
pointerTOCLookupFn
pol
pon
pool
populationShareF
por
posix
posix/
posixrules
pow
pow@@GLIBC_2.2.5
po}
pp
pp$
pp-
pp0
ppD
pq
pr
pra
prd
preferred
presALink
presBLink
pressure
prg
primary
primaryZones
print
private use area
pro
processPropertySeq
propname.cpp
propsTrie
propsTrie_index
propsVectors
propsVectorsTrie
propsVectorsTrie_index
propsvec.c
prs
ps
ps*
ps_AF
pt
pt_BR
pt_PT
pt_PT_PREEURO
pthread_cond_broadcast
pthread_cond_broadcast@@GLIBC_2.3.2
pthread_cond_wait
pthread_cond_wait@@GLIBC_2.3.2
pthread_mutex_lock
pthread_mutex_lock@@GLIBC_2.2.5
pthread_mutex_unlock
pthread_mutex_unlock@@GLIBC_2.2.5
pu
pu0
punct
punycode.cpp
pus
putil.cpp
putil_cleanup()
puu
pv
pv-
pvn
pw
pwp
py
pz
pz-
p{-
p{f
p|
p|:
p|u
p}
p~
p~0
p~2
p~U
p
p,
p8
pr
q
q"
q#
q$
q%
q'
q(
q.
q0
q0#
q0.
q0/
q00
q01
q1
q2
q3
q9
q:
q;
q@
qC
qD
qH
qI
qJ
qN
qN0
qN1
qO
qP
qQ
qQ0
qS
qT
qV
qW
qX
q[
q\
q\"
q\$
q\&
q\'
q\+
q\.
q\0
q\1
q\2
q\4
q\8
q\9
q\:
q\=
q\?
q\@
q\A
q\B
q\E
q\F
q\i
q\z
q]-
q_
q_)
q_-
q_0
q_8
q_R
q_S
q_\
q_z
q`
qa
qb
qbw
qc
qf
qg
qg"
qg&
qg*
qg0
qg1
qg\
qgb
qh
qh-
qi
qj
qn
qn-
qp
qr
qs
qt
qu
qu_BO
qu_EC
qu_PE
quarternary
quarters
quaternary
que
quotationEnd
quotationStart
qut
qut_GT
quz_BO
quz_EC
quz_PE
qv
qx
qxp
qz
q{
q{%
q}-
q
r
r$
r&
r'
r0
r0#
r0$
r0/
r00
r01
r0=
r0?
r3
r;
r?
rG
rP
rP-
rR
rR&
rR0
rR3
rS
rV
rX
rY
r]
r^
r^'
r^-
r^;
r^A
r^CQ
r_
r`
ra
radix
raj
range
rap
rar
rbbi.cpp
rbbidata.cpp
rbbinode.cpp
rbbirb.cpp
rbbiscan.cpp
rbbisetb.cpp
rbbistbl.cpp
rbbitblb.cpp
rc
rc0
rcf
rd
rd-
re
re-
readNext
readPrevious
readdir
readdir@@GLIBC_2.2.5
readlink
readlink@@GLIBC_2.2.5
realloc
realloc@@GLIBC_2.2.5
reallocArrays
reformed
regionCodes
regionFormat
regionFormatDaylight
regionFormatStandard
rej
relative
relativeTime
remapPlatformDependentCodepage(char const*, char const*)
repFuncs
repTextAccess
repTextClone
repTextClose
repTextCopy
repTextExtract
repTextLength
repTextReplace
replaceableIteratorCurrent
replaceableIteratorNext
replaceableIteratorPrevious
res_countArrayItems_52
res_findResource_52
res_getAlias_52
res_getArrayItem_52
res_getBinary_52
res_getIntVector_52
res_getPublicType_52
res_getResource_52
res_getString_52
res_getTableItemByIndex_52
res_getTableItemByKey_52
res_index
res_init.part.0
res_load_52
res_read_52
res_unload_52
resbMutex
resbund.cpp
resbund_cnv.cpp
resolveExplicitLevels
resolveImplicitLevels
resource
rewind
rewind@@GLIBC_2.2.5
rf
rfc3491
rfc3530cs
rfc3530csci
rfc3530mixp
rfc3722
rfc3920node
rfc3920res
rfc4011
rfc4013
rfc4505
rfc4518
rfc4518ci
rh
ri
ria
rif
right/
rj
rjs
rk
rk0
rkS
rkt
rl
rl-
rll
rm
rm_CH
rmf
rmo
rmt
rmu
rmy
rn
rng
ro
ro-
ro_MD
ro_RO
roa
rob
roc
rof
roh
rom
roman
romanlow
ron
root
rq
rr
rr-
rrg
rr
rs
rs-
rt
ru
ru_MD
ru_RU
ru_UA
rue
ruleiter.cpp
rules
run
rup
rus
rv
rv0
rw
rw_RW
rwk
rx
ry
ry-
ryu
r{
r|
r|-
r},
r}5
r~-
r
r(
r-
s
s!
s"
s#
s$
s%
s&
s'
s(
s*
s,
s-
s.
s0
s0"
s0#
s0$
s0&
s00
s01
s03
s0@
s0@KA
s0B
s0R
s1{1
s3
s5
s:
s=
sB
sE
sH
sL
sM
sN
sO
sO-
sO0
sO1
sQ0
sQ1
sS
sS-
sT
sT0
sT1
sV
sW
sW7
sY
sY(
sY-
sY0
sY1
sYfN
s[
s\-
s]
s^
s^!
s^&
s^-
s^.
s^0
s^1
s^2
s^4
s^6
s^@
s^F
s^N
s^O
s^S
s^w
s^~
s_
s_-
sa-
sa_IN
sad
saf
safe_forward
safe_reverse
sag
sah
sah_RU
sai
sal
sam
san
saq
sas
sat
saur
saz
sb
sba
sbp
sc
schriter.cpp
scientificFormat
sck
scn
sco
script
scriptAlias
scriptExtensions
scripts
scs
scsu
sd
sd_Arab
sd_Deva
sd_IN
sd_PK
sdh
se
se_FI
se_NO
se_SE
search
searchForTZFile(char const*, DefaultTZInfo*)
searchjl
secondary
see
see-x-i-mingo
sef
segmentStarterMapper
seh
sel
selectForMask(UConverterSelector const*, unsigned int*, UErrorCode*)
sem
sentence
separator
serv.cpp
service_cleanup
servlk.cpp
servlkf.cpp
servls.cpp
servnotf.cpp
servrbf.cpp
servslkf.cpp
ses
set0
set1
set10
set11
set12
set13
set14
set15
set16
set17
set18
set19
set2
set20
set21
set22
set23
set24
set25
set26
set27
set28
set29
set3
set30
set31
set32
set33
set34
set35
set36
set37
set38
set39
set4
set40
set41
set42
set43
set44
set45
set46
set5
set6
set7
set8
set9
setCommonICUData(UDataMemory*, signed char, UErrorCode*) [clone .constprop.9]
setlocale
setlocale@@GLIBC_2.2.5
sf
sfb
sfc
sg
sga
sgg
sgn
sgn-be-fr
sgn-be-nl
sgn-ch-de
sgn_BE_FR
sgn_BE_NL
sgn_CH_DE
sh
shallowTextClone.part.16
shapeTable
shapeUnicode(unsigned short*, int, int, unsigned int, UErrorCode*, int, uShapeVariables) [clone .isra.10]
shi
shi_Latn
shi_Tfng
shifted
shiftjis
shn
shrd
shu
si
si-
si.
si_LK
sid
sin
sio
sit
sj
sjis
sk
sk,
sk-
sk0
sk_SK
skn
skr
sl
sl_SI
sla
slk
slv
sm
sma
sma_NO
sma_SE
sme
smi
smj
smj_NO
smj_SE
sml
smn
smn_FI
smo
smp
sms
sms_FI
sn
sna
snd
snk
so
so_ET
so_SO
sog
som
son
sora
sot
sou
spa
space
space separator
speed
sprintf
sprintf@@GLIBC_2.2.5
spy
sq
sq_AL
sqi
sqr
square-foot
square-kilometer
square-meter
square-mile
sr
sr_Cyrl
sr_Cyrl_BA
sr_Cyrl_CS
sr_Cyrl_ME
sr_Cyrl_RS
sr_Latn
sr_Latn_BA
sr_Latn_CS
sr_Latn_ME
sr_Latn_RS
sr_ME
sr_RO
sr_RU
sr_SP_CYRL
sr_SP_LATN
sr_TR
sr_YU_CYRILLIC
srb
src
srd
srn
srp
srr
srx
ss
ssa
ssw
ssy
st
st_ZA
stand-alone
standard
start
start punctuation
staticOffsets
strcat
strcat@@GLIBC_2.2.5
strchr
strchr@@GLIBC_2.2.5
strcmp
strcmp@@GLIBC_2.2.5
strcpy
strcpy@@GLIBC_2.2.5
stringIteratorCurrent
stringIteratorGetIndex
stringIteratorGetState
stringIteratorHasNext
stringIteratorHasPrevious
stringIteratorMove
stringIteratorNext
stringIteratorPrevious
stringIteratorSetState
stringpiece.cpp
stringtriebuilder.cpp
strlen
strlen@@GLIBC_2.2.5
strncat
strncat@@GLIBC_2.2.5
strncmp
strncmp@@GLIBC_2.2.5
strncpy
strncpy@@GLIBC_2.2.5
stroke
strrchr
strrchr@@GLIBC_2.2.5
strstr
strstr@@GLIBC_2.2.5
strtod
strtod@@GLIBC_2.2.5
strtol
strtol@@GLIBC_2.2.5
strtoul
strtoul@@GLIBC_2.2.5
stuvwxyz
su
su-
su0
sub
subQuickSort
suk
sun
sun_eu_greek
sund
suneugreek
sup
superscriptingExponent
surroundingMatch
sus
sux
sv
sv_FI
sv_SE
sw
sw_KE
swa
swaplfnl
swb
swc
swe
swh
swv
sxn
syc
syi
syl
symbols
syr
syr_SY
system
s{
s|
s|)
s|0
s|1
s|3
s|M
s|n
s|r
s}
s~
s
t
t"
t$
t&
t'
t(
t)
t*
t+
t,
t-
t0
t0(
t0/
t00
t01
t0A
t0p
t3
t4
t6
t7
t8
t;
t<
t>
tC
tL
tM
tN
tP
tP-
tP:
tQ
tQ0
tR-
tS
tT
tV
tV0
tVV
tW
tX-
tY
tZ#
t\
t^
t^"
t^*
t^,{Q
t^0
t^B
t^M
t^MR
t^Q
t^\
t_
ta
ta_IN
ta_LK
tab
tah
tai
tailFamilyIsolatedFinal
taj
takr
talu
tam
taml
tamldec
tashkeelMedial
tat
tb
tbw
tc
tcy
td
tdd
tdg
tdh
te
te-
te0
te_IN
tel
telephoneCodeData
telu
tem
temperature
tender
tense
teo
ter
territories
territory
territoryAlias
territoryContainment
territoryF
territoryInfo
tertiary
tet
tf
tf1
tf7
tg
tg_Arab
tg_Cyrl
tg_Cyrl_TJ
tg_PK
tgk
tgl
th
th-
thE
th_TH
th_TH_TRADITIONAL
tha
thai
thai8
thl
thq
thr
thu
ti
ti-
ti_ER
ti_ET
tibt
tig
timeData
timezone
tir
tis620
title
titlecase letter
tiv
tk
tk_Latn
tk_TM
tkl
tkt
tl
tlh
tli
tm
tm'
tm-
tmh
tmz
tn
tn_BW
tn_ZA
to
toBase64
toUnicodeTable
toUpperOrTitle(UCaseProps const*, int, int (*)(void*, signed char), void*, unsigned short const**, char const*, int*, signed char)
tog
ton
tp
tpi
tr
trCollNames
trConvNames
trFnName
tr_TR
traditional
trail surrogate
trans
transPost32
transPre32
transformNames
tru
trv
ts
ts_ZA
tsf
tsg
tsi
tsj
tsn
tso
tt
tt_RU
ttj
ttq
tts
tu
tue
tuk
tum
tup
tur
turkish
turkish8
tut
tv
tvl
tw
twi
two
twq
tx
ty
type
typeAlias
typeMap
typeOffsets
typeinfo for icu_52::Appendable
typeinfo for icu_52::BMPSet
typeinfo for icu_52::BreakIterator
typeinfo for icu_52::ByteSink
typeinfo for icu_52::BytesDictionaryMatcher
typeinfo for icu_52::BytesTrieBuilder
typeinfo for icu_52::BytesTrieBuilder::BTLinearMatchNode
typeinfo for icu_52::CanonicalIterator
typeinfo for icu_52::CharacterIterator
typeinfo for icu_52::CheckedArrayByteSink
typeinfo for icu_52::CjkBreakEngine
typeinfo for icu_52::ComposeNormalizer2
typeinfo for icu_52::DateInterval
typeinfo for icu_52::DecomposeNormalizer2
typeinfo for icu_52::DictionaryBreakEngine
typeinfo for icu_52::DictionaryMatcher
typeinfo for icu_52::ErrorCode
typeinfo for icu_52::EventListener
typeinfo for icu_52::FCDNormalizer2
typeinfo for icu_52::FilteredNormalizer2
typeinfo for icu_52::ForwardCharacterIterator
typeinfo for icu_52::ICUBreakIteratorFactory
typeinfo for icu_52::ICUBreakIteratorService
typeinfo for icu_52::ICULanguageBreakFactory
typeinfo for icu_52::ICULocaleService
typeinfo for icu_52::ICUNotifier
typeinfo for icu_52::ICUResourceBundleFactory
typeinfo for icu_52::ICUService
typeinfo for icu_52::ICUServiceFactory
typeinfo for icu_52::ICUServiceKey
typeinfo for icu_52::IDNA
typeinfo for icu_52::KeywordEnumeration
typeinfo for icu_52::KhmerBreakEngine
typeinfo for icu_52::LanguageBreakEngine
typeinfo for icu_52::LanguageBreakFactory
typeinfo for icu_52::LaoBreakEngine
typeinfo for icu_52::ListFormatter
typeinfo for icu_52::Locale
typeinfo for icu_52::LocaleKey
typeinfo for icu_52::LocaleKeyFactory
typeinfo for icu_52::MessagePattern
typeinfo for icu_52::NoopNormalizer2
typeinfo for icu_52::Normalizer
typeinfo for icu_52::Normalizer2
typeinfo for icu_52::Normalizer2WithImpl
typeinfo for icu_52::ParsePosition
typeinfo for icu_52::RBBIRuleBuilder
typeinfo for icu_52::RBBIRuleScanner
typeinfo for icu_52::RBBISymbolTable
typeinfo for icu_52::Replaceable
typeinfo for icu_52::ResourceBundle
typeinfo for icu_52::RuleBasedBreakIterator
typeinfo for icu_52::ServiceEnumeration
typeinfo for icu_52::ServiceListener
typeinfo for icu_52::SimpleFactory
typeinfo for icu_52::SimpleLocaleKeyFactory
typeinfo for icu_52::StringCharacterIterator
typeinfo for icu_52::StringEnumeration
typeinfo for icu_52::StringTrieBuilder
typeinfo for icu_52::StringTrieBuilder::BranchHeadNode
typeinfo for icu_52::StringTrieBuilder::BranchNode
typeinfo for icu_52::StringTrieBuilder::FinalValueNode
typeinfo for icu_52::StringTrieBuilder::IntermediateValueNode
typeinfo for icu_52::StringTrieBuilder::LinearMatchNode
typeinfo for icu_52::StringTrieBuilder::ListBranchNode
typeinfo for icu_52::StringTrieBuilder::Node
typeinfo for icu_52::StringTrieBuilder::SplitBranchNode
typeinfo for icu_52::StringTrieBuilder::ValueNode
typeinfo for icu_52::SymbolTable
typeinfo for icu_52::ThaiBreakEngine
typeinfo for icu_52::UCharCharacterIterator
typeinfo for icu_52::UCharsDictionaryMatcher
typeinfo for icu_52::UCharsTrieBuilder
typeinfo for icu_52::UCharsTrieBuilder::UCTLinearMatchNode
typeinfo for icu_52::UMemory
typeinfo for icu_52::UObject
typeinfo for icu_52::UStack
typeinfo for icu_52::UStringEnumeration
typeinfo for icu_52::UTS46
typeinfo for icu_52::UVector
typeinfo for icu_52::UVector32
typeinfo for icu_52::UVector64
typeinfo for icu_52::UnhandledEngine
typeinfo for icu_52::UnicodeFilter
typeinfo for icu_52::UnicodeFunctor
typeinfo for icu_52::UnicodeMatcher
typeinfo for icu_52::UnicodeSet
typeinfo for icu_52::UnicodeSetIterator
typeinfo for icu_52::UnicodeString
typeinfo for icu_52::UnicodeStringAppendable
typeinfo name for icu_52::Appendable
typeinfo name for icu_52::BMPSet
typeinfo name for icu_52::BreakIterator
typeinfo name for icu_52::ByteSink
typeinfo name for icu_52::BytesDictionaryMatcher
typeinfo name for icu_52::BytesTrieBuilder
typeinfo name for icu_52::BytesTrieBuilder::BTLinearMatchNode
typeinfo name for icu_52::CanonicalIterator
typeinfo name for icu_52::CharacterIterator
typeinfo name for icu_52::CheckedArrayByteSink
typeinfo name for icu_52::CjkBreakEngine
typeinfo name for icu_52::ComposeNormalizer2
typeinfo name for icu_52::DateInterval
typeinfo name for icu_52::DecomposeNormalizer2
typeinfo name for icu_52::DictionaryBreakEngine
typeinfo name for icu_52::DictionaryMatcher
typeinfo name for icu_52::ErrorCode
typeinfo name for icu_52::EventListener
typeinfo name for icu_52::FCDNormalizer2
typeinfo name for icu_52::FilteredNormalizer2
typeinfo name for icu_52::ForwardCharacterIterator
typeinfo name for icu_52::ICUBreakIteratorFactory
typeinfo name for icu_52::ICUBreakIteratorService
typeinfo name for icu_52::ICULanguageBreakFactory
typeinfo name for icu_52::ICULocaleService
typeinfo name for icu_52::ICUNotifier
typeinfo name for icu_52::ICUResourceBundleFactory
typeinfo name for icu_52::ICUService
typeinfo name for icu_52::ICUServiceFactory
typeinfo name for icu_52::ICUServiceKey
typeinfo name for icu_52::IDNA
typeinfo name for icu_52::KeywordEnumeration
typeinfo name for icu_52::KhmerBreakEngine
typeinfo name for icu_52::LanguageBreakEngine
typeinfo name for icu_52::LanguageBreakFactory
typeinfo name for icu_52::LaoBreakEngine
typeinfo name for icu_52::ListFormatter
typeinfo name for icu_52::Locale
typeinfo name for icu_52::LocaleKey
typeinfo name for icu_52::LocaleKeyFactory
typeinfo name for icu_52::MessagePattern
typeinfo name for icu_52::NoopNormalizer2
typeinfo name for icu_52::Normalizer
typeinfo name for icu_52::Normalizer2
typeinfo name for icu_52::Normalizer2WithImpl
typeinfo name for icu_52::ParsePosition
typeinfo name for icu_52::RBBIRuleBuilder
typeinfo name for icu_52::RBBIRuleScanner
typeinfo name for icu_52::RBBISymbolTable
typeinfo name for icu_52::Replaceable
typeinfo name for icu_52::ResourceBundle
typeinfo name for icu_52::RuleBasedBreakIterator
typeinfo name for icu_52::ServiceEnumeration
typeinfo name for icu_52::ServiceListener
typeinfo name for icu_52::SimpleFactory
typeinfo name for icu_52::SimpleLocaleKeyFactory
typeinfo name for icu_52::StringCharacterIterator
typeinfo name for icu_52::StringEnumeration
typeinfo name for icu_52::StringTrieBuilder
typeinfo name for icu_52::StringTrieBuilder::BranchHeadNode
typeinfo name for icu_52::StringTrieBuilder::BranchNode
typeinfo name for icu_52::StringTrieBuilder::FinalValueNode
typeinfo name for icu_52::StringTrieBuilder::IntermediateValueNode
typeinfo name for icu_52::StringTrieBuilder::LinearMatchNode
typeinfo name for icu_52::StringTrieBuilder::ListBranchNode
typeinfo name for icu_52::StringTrieBuilder::Node
typeinfo name for icu_52::StringTrieBuilder::SplitBranchNode
typeinfo name for icu_52::StringTrieBuilder::ValueNode
typeinfo name for icu_52::SymbolTable
typeinfo name for icu_52::ThaiBreakEngine
typeinfo name for icu_52::UCharCharacterIterator
typeinfo name for icu_52::UCharsDictionaryMatcher
typeinfo name for icu_52::UCharsTrieBuilder
typeinfo name for icu_52::UCharsTrieBuilder::UCTLinearMatchNode
typeinfo name for icu_52::UMemory
typeinfo name for icu_52::UObject
typeinfo name for icu_52::UStack
typeinfo name for icu_52::UStringEnumeration
typeinfo name for icu_52::UTS46
typeinfo name for icu_52::UVector
typeinfo name for icu_52::UVector32
typeinfo name for icu_52::UVector64
typeinfo name for icu_52::UnhandledEngine
typeinfo name for icu_52::UnicodeFilter
typeinfo name for icu_52::UnicodeFunctor
typeinfo name for icu_52::UnicodeMatcher
typeinfo name for icu_52::UnicodeSet
typeinfo name for icu_52::UnicodeSetIterator
typeinfo name for icu_52::UnicodeString
typeinfo name for icu_52::UnicodeStringAppendable
tyv
tz
tz$
tz-
tz0
tzA
tzm
tzm_Latn
tzm_Latn_DZ
tzm_Tfng_MA
tzname@@GLIBC_2.2.5
tzset
tzset@@GLIBC_2.2.5
t{-
u
u!
u"
u#
u$
u'
u(
u)
u,Y
u/
u0
u0!
u0)
u00
u01
u04
u09
u0B
u0X
u0k
u1
u2
u3
u3K.
u3u3
uD
uH
uI
uK
uN
uO-
uQ
uQ%
uQ'
uQ+
uQ-
uQ0
uQ1
uQ2
uQ9
uR
uR!
uS
uS;
uT
uT-
uT0
uU-
uV
uW
uX
uY
u[
u\
u_
u_UCharsToChars_52
u_austrcpy_52
u_austrncpy_52
u_catclose_52
u_catgets_52
u_catopen_52
u_charAge_52
u_charDigitValue_52
u_charDirection_52
u_charFromName_52
u_charMirror_52
u_charName_52
u_charType_52
u_charsToUChars_52
u_cleanup
u_cleanup_52
u_countChar32_52
u_digit_52
u_enumCharNames_52
u_enumCharTypes_52
u_errorName_52
u_flushDefaultConverter_52
u_foldCase_52
u_forDigit_52
u_getBidiPairedBracket_52
u_getCombiningClass_52
u_getDataDirectory_52
u_getDataVersion_52
u_getDefaultConverter_52
u_getFC_NFKC_Closure_52
u_getISOComment_52
u_getIntPropertyMaxValue_52
u_getIntPropertyMinValue_52
u_getIntPropertyValue_52
u_getMainProperties_52
u_getNumericValue_52
u_getPropertyEnum_52
u_getPropertyName_52
u_getPropertyValueEnum_52
u_getPropertyValueName_52
u_getUnicodeProperties_52
u_getUnicodeVersion_52
u_getVersion_52
u_hasBinaryProperty_52
u_init
u_init_52
u_isIDIgnorable_52
u_isIDPart_52
u_isIDStart_52
u_isISOControl_52
u_isJavaIDPart_52
u_isJavaIDStart_52
u_isJavaSpaceChar_52
u_isMirrored_52
u_isUAlphabetic_52
u_isULowercase_52
u_isUUppercase_52
u_isUWhiteSpace_52
u_isWhitespace_52
u_isalnumPOSIX_52
u_isalnum_52
u_isalpha_52
u_isbase_52
u_isblank_52
u_iscntrl_52
u_isdefined_52
u_isdigit_52
u_isgraphPOSIX_52
u_isgraph_52
u_islower_52
u_isprintPOSIX_52
u_isprint_52
u_ispunct_52
u_isspace_52
u_istitle_52
u_isupper_52
u_isxdigit_52
u_memcasecmp_52
u_memchr32_52
u_memchr_52
u_memcmpCodePointOrder_52
u_memcmp_52
u_memcpy_52
u_memmove_52
u_memrchr32_52
u_memrchr_52
u_memset_52
u_releaseDefaultConverter_52
u_setAtomicIncDecFunctions_52
u_setDataDirectory_52
u_setMemoryFunctions_52
u_setMutexFunctions_52
u_shapeArabic_52
u_strCaseCompare_52
u_strCompareIter_52
u_strCompare_52
u_strFindFirst_52
u_strFindLast_52
u_strFoldCase_52
u_strFromJavaModifiedUTF8WithSub_52
u_strFromPunycode_52
u_strFromUTF32WithSub_52
u_strFromUTF32_52
u_strFromUTF8Lenient_52
u_strFromUTF8WithSub_52
u_strFromUTF8_52
u_strFromWCS_52
u_strHasMoreChar32Than_52
u_strToJavaModifiedUTF8_52
u_strToLower_52
u_strToPunycode_52
u_strToTitle_52
u_strToUTF32WithSub_52
u_strToUTF32_52
u_strToUTF8WithSub_52
u_strToUTF8_52
u_strToUpper_52
u_strToWCS_52
u_strcasecmp_52
u_strcat_52
u_strchr32_52
u_strchr_52
u_strcmpCodePointOrder_52
u_strcmpFold_52
u_strcmp_52
u_strcpy_52
u_strcspn_52
u_strlen_52
u_strncasecmp_52
u_strncat_52
u_strncmpCodePointOrder_52
u_strncmp_52
u_strncpy_52
u_strpbrk_52
u_strrchr32_52
u_strrchr_52
u_strrstr_52
u_strspn_52
u_strstr_52
u_strtok_r_52
u_terminateChars_52
u_terminateUChar32s_52
u_terminateUChars_52
u_terminateWChars_52
u_tolower_52
u_totitle_52
u_toupper_52
u_uastrcpy_52
u_uastrncpy_52
u_unescapeAt_52
u_unescape_52
u_versionFromString_52
u_versionFromUString_52
u_versionToString_52
u`
u`'
u`0
u`G
ua,
uarrsort.c
ubidi.c
ubidi_addPropertyStarts_52
ubidi_close_52
ubidi_countParagraphs_52
ubidi_countRuns_52
ubidi_getBaseDirection_52
ubidi_getClassCallback_52
ubidi_getClass_52
ubidi_getCustomizedClass_52
ubidi_getDirection_52
ubidi_getJoiningGroup_52
ubidi_getJoiningType_52
ubidi_getLength_52
ubidi_getLevelAt_52
ubidi_getLevels_52
ubidi_getLogicalIndex_52
ubidi_getLogicalMap_52
ubidi_getLogicalRun_52
ubidi_getMaxValue_52
ubidi_getMemory_52
ubidi_getMirror_52
ubidi_getPairedBracketType_52
ubidi_getPairedBracket_52
ubidi_getParaLevelAtIndex_52
ubidi_getParaLevel_52
ubidi_getParagraphByIndex_52
ubidi_getParagraph_52
ubidi_getProcessedLength_52
ubidi_getReorderingMode_52
ubidi_getReorderingOptions_52
ubidi_getResultLength_52
ubidi_getRuns_52
ubidi_getSingleton_52
ubidi_getText_52
ubidi_getVisualIndex_52
ubidi_getVisualMap_52
ubidi_getVisualRun_52
ubidi_invertMap_52
ubidi_isBidiControl_52
ubidi_isInverse_52
ubidi_isJoinControl_52
ubidi_isMirrored_52
ubidi_isOrderParagraphsLTR_52
ubidi_openSized_52
ubidi_open_52
ubidi_orderParagraphsLTR_52
ubidi_props.c
ubidi_props_indexes
ubidi_props_jgArray
ubidi_props_mirrors
ubidi_props_singleton
ubidi_props_trieIndex
ubidi_reorderLogical_52
ubidi_reorderVisual_52
ubidi_setClassCallback_52
ubidi_setContext_52
ubidi_setInverse_52
ubidi_setLine_52
ubidi_setPara_52
ubidi_setReorderingMode_52
ubidi_setReorderingOptions_52
ubidi_writeReordered_52
ubidi_writeReverse_52
ubidiln.c
ubidiwrt.c
ublock_getCode_52
ubrk.cpp
ubrk_close_52
ubrk_countAvailable_52
ubrk_current_52
ubrk_first_52
ubrk_following_52
ubrk_getAvailable_52
ubrk_getLocaleByType_52
ubrk_getRuleStatusVec_52
ubrk_getRuleStatus_52
ubrk_isBoundary_52
ubrk_last_52
ubrk_next_52
ubrk_openRules_52
ubrk_open_52
ubrk_preceding_52
ubrk_previous_52
ubrk_refreshUText_52
ubrk_safeClone_52
ubrk_setText_52
ubrk_setUText_52
ubrk_swap(): RBBI Data header is invalid.
ubrk_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized
ubrk_swap(): too few bytes (%d after ICU Data header) for break data.
ubrk_swap_52
uc
uc-
ucase.cpp
ucase_addCaseClosure_52
ucase_addPropertyStarts_52
ucase_addStringCaseClosure_52
ucase_fold_52
ucase_getCaseLocale_52
ucase_getSingleton_52
ucase_getTypeOrIgnorable_52
ucase_getType_52
ucase_hasBinaryProperty_52
ucase_isCaseSensitive_52
ucase_isSoftDotted_52
ucase_props_exceptions
ucase_props_indexes
ucase_props_singleton
ucase_props_trieIndex
ucase_props_unfold
ucase_toFullFolding_52
ucase_toFullLower_52
ucase_toFullTitle_52
ucase_toFullUpper_52
ucase_tolower_52
ucase_totitle_52
ucase_toupper_52
ucasemap.cpp
ucasemap_close_52
ucasemap_getBreakIterator_52
ucasemap_getLocale_52
ucasemap_getOptions_52
ucasemap_internalUTF8Fold(UCaseMap const*, unsigned char*, int, unsigned char const*, int, UErrorCode*)
ucasemap_internalUTF8ToLower(UCaseMap const*, unsigned char*, int, unsigned char const*, int, UErrorCode*)
ucasemap_internalUTF8ToTitle_52
ucasemap_internalUTF8ToUpper(UCaseMap const*, unsigned char*, int, unsigned char const*, int, UErrorCode*)
ucasemap_mapUTF8_52
ucasemap_open_52
ucasemap_setBreakIterator_52
ucasemap_setLocale_52
ucasemap_setOptions_52
ucasemap_titlecase_brkiter.cpp
ucasemap_toTitle_52
ucasemap_utf8FoldCase_52
ucasemap_utf8ToLower_52
ucasemap_utf8ToTitle_52
ucasemap_utf8ToUpper_52
ucat.c
uchar.c
uchar_addPropertyStarts_52
uchar_swapNames(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as unames.icu
uchar_swapNames(): too few bytes (%d after header) for unames.icu
uchar_swapNames(): too few bytes (%d after header) for unames.icu algorithmic range %u
uchar_swapNames(): unknown type %u of algorithmic range %u
uchar_swapNames(prefix string of algorithmic range %u) failed
uchar_swapNames(token strings) failed
uchar_swapNames_52
ucharstrenum_close
ucharstrenum_count
ucharstrenum_next
ucharstrenum_reset
ucharstrenum_unext
ucharstrie.cpp
ucharstriebuilder.cpp
ucharstrieiterator.cpp
uchriter.cpp
ucln_cleanupOne_52
ucln_cmn.c
ucln_common_registerCleanup_52
ucln_lib_cleanup_52
ucln_registerCleanup_52
ucmndata.c
ucnv.c
ucnv2022.cpp
ucnv_ASCIIFromUTF8
ucnv_DBCSFromUTF8
ucnv_Latin1FromUTF8
ucnv_MBCSFromUChar32_52
ucnv_MBCSFromUnicodeWithOffsets_52
ucnv_MBCSGetFilteredUnicodeSetForUnicode_52
ucnv_MBCSGetName
ucnv_MBCSGetNextUChar
ucnv_MBCSGetStarters
ucnv_MBCSGetType_52
ucnv_MBCSGetUnicodeSet
ucnv_MBCSGetUnicodeSetForUnicode_52
ucnv_MBCSIsLeadByte_52
ucnv_MBCSLoad
ucnv_MBCSOpen
ucnv_MBCSSimpleGetNextUChar_52
ucnv_MBCSToUnicodeWithOffsets_52
ucnv_MBCSUnload
ucnv_MBCSWriteSub
ucnv_SBCSFromUTF8
ucnv_UTF8FromUTF8
ucnv_bld.cpp
ucnv_bld_countAvailableConverters_52
ucnv_bld_getAvailableConverter_52
ucnv_canCreateConverter_52
ucnv_cb.c
ucnv_cbFromUWriteBytes_52
ucnv_cbFromUWriteSub_52
ucnv_cbFromUWriteUChars_52
ucnv_cbToUWriteSub_52
ucnv_cbToUWriteUChars_52
ucnv_cleanup()
ucnv_clone
ucnv_close
ucnv_close_52
ucnv_cnv.c
ucnv_compareNames_52
ucnv_convertAlgorithmic.part.3
ucnv_convertEx_52
ucnv_convertEx_52.part.2
ucnv_convert_52
ucnv_countAliases_52
ucnv_countAvailable_52
ucnv_countStandards_52
ucnv_createAlgorithmicConverter_52
ucnv_createConverterFromPackage_52
ucnv_createConverterFromSharedData_52
ucnv_createConverter_52
ucnv_ct.c
ucnv_data_unFlattenClone(UConverterLoadArgs*, UDataMemory*, UErrorCode*)
ucnv_detectUnicodeSignature_52
ucnv_err.c
ucnv_ext.cpp
ucnv_extContinueMatchFromU_52
ucnv_extContinueMatchToU_52
ucnv_extGetUnicodeSetString(UConverterSharedData const*, int const*, USetAdder const*, UConverterUnicodeSet, int, int, unsigned short*, int, int, UErrorCode*)
ucnv_extGetUnicodeSet_52
ucnv_extInitialMatchFromU_52
ucnv_extInitialMatchToU_52
ucnv_extMatchFromU(int const*, int, unsigned short const*, int, unsigned short const*, int, unsigned int*, signed char, signed char)
ucnv_extMatchToU(int const*, signed char, char const*, int, char const*, int, unsigned int*, signed char, signed char) [clone .isra.0]
ucnv_extSimpleMatchFromU_52
ucnv_extSimpleMatchToU_52
ucnv_fixFileSeparator_52
ucnv_flushCache
ucnv_flushCache_52
ucnv_fromAlgorithmic_52
ucnv_fromUChars_52
ucnv_fromUCountPending_52
ucnv_fromUWriteBytes_52
ucnv_fromUnicode_52
ucnv_fromUnicode_UTF8_52
ucnv_fromUnicode_UTF8_OFFSETS_LOGIC_52
ucnv_getAlias_52
ucnv_getAliases_52
ucnv_getAvailableName_52
ucnv_getCCSID_52
ucnv_getCanonicalName_52
ucnv_getCompleteUnicodeSet_52
ucnv_getDefaultName_52
ucnv_getDisplayName_52
ucnv_getFromUCallBack_52
ucnv_getInvalidChars_52
ucnv_getInvalidUChars_52
ucnv_getMaxCharSize_52
ucnv_getMinCharSize_52
ucnv_getName_52
ucnv_getNextUChar_52
ucnv_getNextUChar_UTF8
ucnv_getNonSurrogateUnicodeSet_52
ucnv_getPlatform_52
ucnv_getStandardName_52
ucnv_getStandard_52
ucnv_getStarters_52
ucnv_getSubstChars_52
ucnv_getToUCallBack_52
ucnv_getType_52
ucnv_getUnicodeSet_52
ucnv_incrementRefCount_52
ucnv_internalConvert
ucnv_io.cpp
ucnv_io_cleanup()
ucnv_io_closeUEnumeration(UEnumeration*)
ucnv_io_countAllConverters(UEnumeration*, UErrorCode*)
ucnv_io_countKnownConverters_52
ucnv_io_countStandardAliases(UEnumeration*, UErrorCode*)
ucnv_io_getConverterName_52
ucnv_io_nextAllConverters(UEnumeration*, int*, UErrorCode*)
ucnv_io_nextStandardAliases(UEnumeration*, int*, UErrorCode*)
ucnv_io_resetAllConverters(UEnumeration*, UErrorCode*)
ucnv_io_resetStandardAliases(UEnumeration*, UErrorCode*)
ucnv_io_stripASCIIForCompare_52
ucnv_io_stripEBCDICForCompare_52
ucnv_isAmbiguous_52
ucnv_isFixedWidth_52
ucnv_lmb.c
ucnv_load
ucnv_loadSharedData_52
ucnv_load_52
ucnv_open
ucnv_openAlgorithmic
ucnv_openAllNames_52
ucnv_openCCSID_52
ucnv_openPackage
ucnv_openPackage_52
ucnv_openStandardNames_52
ucnv_openU_52
ucnv_open_52
ucnv_outputOverflowFromUnicode
ucnv_resetFromUnicode_52
ucnv_resetToUnicode_52
ucnv_reset_52
ucnv_safeClone_52
ucnv_set.c
ucnv_setDefaultName_52
ucnv_setFallback_52
ucnv_setFromUCallBack_52
ucnv_setSubstChars_52
ucnv_setSubstString_52
ucnv_setToUCallBack_52
ucnv_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not recognized as an ICU .cnv conversion table
ucnv_swap(): error swapping converter name
ucnv_swap(): too few bytes (%d after header) for an ICU .cnv conversion table
ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table
ucnv_swap(): too few bytes (%d after headers) for an ICU MBCS .cnv conversion table with extension data
ucnv_swap(): unknown conversionType=%d!=UCNV_MBCS
ucnv_swap(): unsupported MBCS output type 0x%x
ucnv_swap(): unsupported _MBCSHeader.version %d.%d
ucnv_swap(): unsupported combination of makeconv --small with SBCS
ucnv_swapAliases().swapInvChars(charset names) failed
ucnv_swapAliases().uprv_sortArray(%u items) failed
ucnv_swapAliases(): data format %02x.%02x.%02x.%02x (format version %02x) is not an alias table
ucnv_swapAliases(): table of contents contains unsupported number of sections (%u sections)
ucnv_swapAliases(): too few bytes (%d after header) for an alias table
ucnv_swapAliases(): unable to allocate memory for sorting tables (max length: %u)
ucnv_swapAliases_52
ucnv_swap_52
ucnv_toAlgorithmic_52
ucnv_toUChars_52
ucnv_toUCountPending_52
ucnv_toUWriteCodePoint_52
ucnv_toUWriteUChars_52
ucnv_toUnicode_52
ucnv_toUnicode_UTF8
ucnv_toUnicode_UTF8_OFFSETS_LOGIC
ucnv_u16.c
ucnv_u32.c
ucnv_u7.c
ucnv_u8.c
ucnv_unload
ucnv_unloadSharedDataIfReady_52
ucnv_unload_52
ucnv_usesFallback_52
ucnvbocu.cpp
ucnvdisp.c
ucnvhz.c
ucnvisci.c
ucnvlat1.c
ucnvmbcs.c
ucnvscsu.c
ucnvsel.cpp
ucnvsel_close_52
ucnvsel_close_selector_iterator
ucnvsel_count_encodings
ucnvsel_next_encoding
ucnvsel_openFromSerialized_52
ucnvsel_open_52
ucnvsel_reset_iterator
ucnvsel_selectForString_52
ucnvsel_selectForUTF8_52
ucnvsel_serialize_52
ucnvsel_swap(): data format %02x.%02x.%02x.%02x is not recognized as UConverterSelector data
ucnvsel_swap(): format version %02x is not supported
ucnvsel_swap(): too few bytes (%d after header) for UConverterSelector data
ucnvsel_swap(): too few bytes (%d after header) for all of UConverterSelector data
ucnvsel_swap(UDataSwapper const*, void const*, int, void*, UErrorCode*)
ucol_close
ucol_getLocale
ucol_getSortKey
ucol_looksLikeCollationBinary_52
ucol_nextSortKeyPart
ucol_open
ucol_strcoll
ucol_strcollIter
ucol_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not a collation file
ucol_swapBinary(): endianness %d or charset %d does not match the swapper
ucol_swapBinary(): magic 0x%08x or format version %02x.%02x is not a collation binary
ucol_swapBinary(): too few bytes (%d after header) for collation data
ucol_swapBinary_52
ucol_swapInverseUCA(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not an inverse UCA collation file
ucol_swapInverseUCA(): too few bytes (%d after header) for inverse UCA collation data
ucol_swapInverseUCA_52
ucol_swap_52
ucol_swp.cpp
ucs-2
ucs-4
ucs2
ucs4
ucstrFuncs
ucstrTextAccess
ucstrTextClone
ucstrTextClose
ucstrTextExtract
ucstrTextLength
udata.cpp
udata_cacheDataItem(char const*, UDataMemory*, UErrorCode*) [clone .constprop.8]
udata_checkCommonData_52
udata_cleanup()
udata_closeSwapper_52
udata_close_52
udata_getHeaderSize_52
udata_getInfoSize_52
udata_getInfo_52
udata_getLength_52
udata_getMemory_52
udata_getRawMemory_52
udata_openChoice_52
udata_openSwapperForInputData_52
udata_openSwapper_52
udata_open_52
udata_printError_52
udata_readInt16_52
udata_readInt32_52
udata_setAppData_52
udata_setCommonData_52
udata_setFileAccess_52
udata_swapDataHeader(): header size mismatch - headerSize %d infoSize %d length %d
udata_swapDataHeader(): initial bytes do not look like ICU data
udata_swapDataHeader_52
udata_swapInvStringBlock_52
udatamem.c
udataswp.c
ude
udict_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as dictionary data
udict_swap(): too few bytes (%d after header) for all of dictionary data
udict_swap(): too few bytes (%d after header) for dictionary data
udict_swap(): unknown trie type!
udict_swap_52
udm
ue
ue#
ue0
uenum.c
uenum_close_52
uenum_count_52
uenum_nextDefault_52
uenum_next_52
uenum_openCharStringsEnumeration_52
uenum_openFromStringEnumeration_52
uenum_openUCharStringsEnumeration_52
uenum_reset_52
uenum_unextDefault_52
uenum_unext_52
uf
ug
ug/
ug_Arab
ug_Arab_CN
ug_CN
ug_Cyrl
ug_KZ
ug_MN
uga
uh
uhash.c
uhash_close_52
uhash_compareCaselessUnicodeString_52
uhash_compareChars_52
uhash_compareIChars_52
uhash_compareLong_52
uhash_compareUChars_52
uhash_compareUnicodeString_52
uhash_count_52
uhash_deleteHashtable_52
uhash_equals_52
uhash_find_52
uhash_get_52
uhash_geti_52
uhash_hashCaselessUnicodeString_52
uhash_hashChars_52
uhash_hashIChars_52
uhash_hashLong_52
uhash_hashUChars_52
uhash_hashUnicodeString_52
uhash_iget_52
uhash_igeti_52
uhash_init_52
uhash_iput_52
uhash_iputi_52
uhash_iremove_52
uhash_iremovei_52
uhash_nextElement_52
uhash_openSize_52
uhash_open_52
uhash_put_52
uhash_puti_52
uhash_removeAll_52
uhash_removeElement_52
uhash_remove_52
uhash_removei_52
uhash_setKeyComparator_52
uhash_setKeyDeleter_52
uhash_setKeyHasher_52
uhash_setResizePolicy_52
uhash_setValueComparator_52
uhash_setValueDeleter_52
uhash_us.cpp
ui
ui0
ui1
uidna.cpp
uidna_IDNToASCII_52
uidna_IDNToUnicode_52
uidna_close_52
uidna_compare_52
uidna_labelToASCII_52
uidna_labelToASCII_UTF8_52
uidna_labelToUnicodeUTF8_52
uidna_labelToUnicode_52
uidna_nameToASCII_52
uidna_nameToASCII_UTF8_52
uidna_nameToUnicodeUTF8_52
uidna_nameToUnicode_52
uidna_openUTS46_52
uidna_toASCII_52
uidna_toUnicode_52
uig
uik
uinit.cpp
uinvchar.c
uiter.cpp
uiter_current32_52
uiter_getState_52
uiter_next32_52
uiter_previous32_52
uiter_setCharacterIterator_52
uiter_setReplaceable_52
uiter_setState_52
uiter_setString_52
uiter_setUTF16BE_52
uiter_setUTF8_52
ujis
uk
uk_UA
ukr
uli
ulist.c
ulist_addItemBeginList_52
ulist_addItemEndList_52
ulist_close_keyword_values_iterator_52
ulist_containsString_52
ulist_count_keyword_values_52
ulist_createEmptyList_52
ulist_deleteList_52
ulist_getListFromEnum_52
ulist_getListSize_52
ulist_getNext_52
ulist_next_keyword_value_52
ulist_resetList_52
ulist_reset_keyword_values_iterator_52
uloc.cpp
uloc_acceptLanguageCompare(void const*, void const*, void const*)
uloc_acceptLanguageFromHTTP_52
uloc_acceptLanguage_52
uloc_addLikelySubtags_52
uloc_canonicalize_52
uloc_cleanup()
uloc_countAvailable_52
uloc_forLanguageTag_52
uloc_getAvailable_52
uloc_getBaseName_52
uloc_getCharacterOrientation_52
uloc_getCountry_52
uloc_getCurrentCountryID_52
uloc_getCurrentLanguageID_52
uloc_getDefault_52
uloc_getDisplayCountry_52
uloc_getDisplayKeywordValue_52
uloc_getDisplayKeyword_52
uloc_getDisplayLanguage_52
uloc_getDisplayName_52
uloc_getDisplayName_52::defaultPattern
uloc_getDisplayName_52::defaultSeparator
uloc_getDisplayName_52::sub0
uloc_getDisplayName_52::sub1
uloc_getDisplayScriptInContext_52
uloc_getDisplayScript_52
uloc_getDisplayVariant_52
uloc_getISO3Country_52
uloc_getISO3Language_52
uloc_getISOCountries_52
uloc_getISOLanguages_52
uloc_getKeywordValue_52
uloc_getLCID_52
uloc_getLanguage_52
uloc_getLineOrientation_52
uloc_getLocaleForLCID_52
uloc_getName_52
uloc_getParent_52
uloc_getScript_52
uloc_getTableStringWithFallback_52
uloc_getVariant_52
uloc_kw_closeKeywords(UEnumeration*)
uloc_kw_countKeywords(UEnumeration*, UErrorCode*)
uloc_kw_nextKeyword(UEnumeration*, int*, UErrorCode*)
uloc_kw_resetKeywords(UEnumeration*, UErrorCode*)
uloc_minimizeSubtags_52
uloc_openKeywordList_52
uloc_openKeywords_52
uloc_setDefault_52
uloc_setKeywordValue_52
uloc_tag.c
uloc_toLanguageTag_52
ulocimp_getCountry_52
ulocimp_getLanguage_52
ulocimp_getScript_52
umapfile.c
umath.c
umb
umtx_lock_52
umtx_unlock_52
umu
umutex.cpp
unames
unames.cpp
unassigned
und
und-x-i-enochian
und_AD
und_AE
und_AF
und_AL
und_AM
und_AO
und_AQ
und_AR
und_AS
und_AT
und_AW
und_AX
und_AZ
und_Arab
und_Arab_CC
und_Arab_CN
und_Arab_GB
und_Arab_ID
und_Arab_IN
und_Arab_KH
und_Arab_MN
und_Arab_MU
und_Arab_NG
und_Arab_PK
und_Arab_TJ
und_Arab_TR
und_Arab_YT
und_Armi
und_Armn
und_Avst
und_BA
und_BD
und_BE
und_BF
und_BG
und_BH
und_BI
und_BJ
und_BL
und_BN
und_BO
und_BQ
und_BR
und_BT
und_BV
und_BY
und_Bali
und_Bamu
und_Batk
und_Beng
und_Bopo
und_Brah
und_Brai
und_Bugi
und_Buhd
und_CD
und_CF
und_CG
und_CH
und_CI
und_CL
und_CM
und_CN
und_CO
und_CP
und_CR
und_CU
und_CV
und_CW
und_CY
und_CZ
und_Cakm
und_Cans
und_Cari
und_Cham
und_Cher
und_Copt
und_Cprt
und_Cyrl
und_Cyrl_AL
und_Cyrl_BA
und_Cyrl_GE
und_Cyrl_GR
und_Cyrl_MD
und_Cyrl_PL
und_Cyrl_RO
und_Cyrl_SK
und_Cyrl_TR
und_Cyrl_XK
und_DE
und_DJ
und_DK
und_DO
und_DZ
und_Deva
und_Deva_BT
und_Deva_MU
und_Deva_PK
und_EA
und_EC
und_EE
und_EG
und_EH
und_ER
und_ES
und_ET
und_Egyp
und_Ethi
und_FI
und_FM
und_FO
und_FR
und_GA
und_GE
und_GF
und_GH
und_GL
und_GN
und_GP
und_GQ
und_GR
und_GS
und_GT
und_GW
und_Geor
und_Glag
und_Goth
und_Grek
und_Gujr
und_Guru
und_HK
und_HM
und_HN
und_HR
und_HT
und_HU
und_Hang
und_Hani
und_Hano
und_Hans
und_Hant
und_Hebr
und_Hebr_CA
und_Hebr_GB
und_Hebr_SE
und_Hebr_UA
und_Hebr_US
und_Hira
und_IC
und_ID
und_IL
und_IN
und_IQ
und_IR
und_IS
und_IT
und_Ital
und_JO
und_JP
und_Java
und_Jpan
und_KG
und_KH
und_KM
und_KP
und_KR
und_KW
und_KZ
und_Kali
und_Kana
und_Khar
und_Khmr
und_Knda
und_Kore
und_Kthi
und_LA
und_LB
und_LI
und_LK
und_LS
und_LT
und_LU
und_LV
und_LY
und_Lana
und_Laoo
und_Latn_AF
und_Latn_AM
und_Latn_BG
und_Latn_CN
und_Latn_CY
und_Latn_DZ
und_Latn_ET
und_Latn_GE
und_Latn_GR
und_Latn_IL
und_Latn_IR
und_Latn_KM
und_Latn_KZ
und_Latn_LB
und_Latn_MA
und_Latn_MK
und_Latn_MO
und_Latn_MR
und_Latn_RU
und_Latn_SY
und_Latn_TN
und_Latn_TW
und_Latn_UA
und_Lepc
und_Limb
und_Linb
und_Lisu
und_Lyci
und_Lydi
und_MA
und_MC
und_MD
und_ME
und_MF
und_MG
und_MK
und_ML
und_MM
und_MN
und_MO
und_MQ
und_MR
und_MT
und_MU
und_MV
und_MX
und_MY
und_MZ
und_Mand
und_Merc
und_Mero
und_Mlym
und_Mong
und_Mtei
und_Mymr
und_Mymr_IN
und_Mymr_TH
und_NA
und_NC
und_NE
und_NI
und_NL
und_NO
und_NP
und_Nkoo
und_OM
und_Ogam
und_Olck
und_Orkh
und_Orya
und_Osma
und_PA
und_PE
und_PF
und_PG
und_PH
und_PK
und_PL
und_PM
und_PR
und_PS
und_PT
und_PW
und_PY
und_Phag
und_Phli
und_Phnx
und_Plrd
und_Prti
und_QA
und_RE
und_RO
und_RS
und_RU
und_RW
und_Rjng
und_Runr
und_SA
und_SC
und_SD
und_SE
und_SI
und_SJ
und_SK
und_SM
und_SN
und_SO
und_SR
und_ST
und_SV
und_SY
und_Samr
und_Sarb
und_Saur
und_Shaw
und_Shrd
und_Sinh
und_Sora
und_Sund
und_Sylo
und_Syrc
und_TD
und_TF
und_TG
und_TH
und_TJ
und_TK
und_TL
und_TM
und_TN
und_TO
und_TR
und_TV
und_TW
und_TZ
und_Tagb
und_Takr
und_Tale
und_Talu
und_Taml
und_Tavt
und_Telu
und_Tfng
und_Tglg
und_Thaa
und_Thai
und_Thai_CN
und_Thai_KH
und_Thai_LA
und_Tibt
und_UA
und_UG
und_UY
und_UZ
und_Ugar
und_VA
und_VE
und_VN
und_VU
und_Vaii
und_WF
und_WS
und_XK
und_Xpeo
und_Xsux
und_YE
und_YT
und_Yiii
uni32InitOnce
uni32Singleton
unicode
unicode-1-1-utf-8
unicode-2-0-utf-8
unicode11utf8
unicode20utf8
unicodebig
unicodebigunmarked
unicodelittle
unicodelittleunmarked
unifilt.cpp
unifunct.cpp
unihan
uniset.cpp
uniset_closure.cpp
uniset_getUnicode32Instance_52
uniset_props.cpp
unisetspan.cpp
unistr.cpp
unistrFuncs
unistrTextAccess
unistrTextClone
unistrTextClose
unistrTextCopy
unistrTextExtract
unistrTextLength
unistrTextReplace
unistr_case.cpp
unistr_case_internalToTitle(UCaseMap const*, unsigned short*, int, unsigned short const*, int, UErrorCode*)
unistr_case_locale.cpp
unistr_cnv.cpp
unistr_props.cpp
unistr_titlecase_brkiter.cpp
unit
unit-narrow
unit-short
units
unitsNarrow
unitsShort
unknown
unorm.cpp
unorm2_append_52
unorm2_close_52
unorm2_composePair_52
unorm2_getCombiningClass_52
unorm2_getDecomposition_52
unorm2_getInstance_52
unorm2_getNFCInstance_52
unorm2_getNFDInstance_52
unorm2_getNFKCCasefoldInstance_52
unorm2_getNFKCInstance_52
unorm2_getNFKDInstance_52
unorm2_getRawDecomposition_52
unorm2_hasBoundaryAfter_52
unorm2_hasBoundaryBefore_52
unorm2_isInert_52
unorm2_isNormalized_52
unorm2_normalizeSecondAndAppend_52
unorm2_normalize_52
unorm2_openFiltered_52
unorm2_quickCheck_52
unorm2_spanQuickCheckYes_52
unorm2_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as Normalizer2 data
unorm2_swap(): too few bytes (%d after header) for Normalizer2 data
unorm2_swap(): too few bytes (%d after header) for all of Normalizer2 data
unorm2_swap_52
unormIterator
unormIteratorCurrent
unormIteratorGetIndex
unormIteratorGetState
unormIteratorHasNext
unormIteratorHasPrevious
unormIteratorMove
unormIteratorNext
unormIteratorPrevious
unormIteratorSetState
unorm_closeIter_52
unorm_compare_52
unorm_concatenate_52
unorm_getFCD16_52
unorm_getQuickCheck_52
unorm_isNormalizedWithOptions_52
unorm_isNormalized_52
unorm_it.c
unorm_iterate(UCharIterator*, signed char, unsigned short*, int, UNormalizationMode, int, signed char, signed char*, UErrorCode*)
unorm_next_52
unorm_normalize_52
unorm_openIter_52
unorm_previous_52
unorm_quickCheckWithOptions_52
unorm_quickCheck_52
unorm_setIter_52
unormcmp.cpp
unr
unr_Beng
unr_Deva
unr_NP
unx
unx_Beng
uo
uobject.cpp
up
up7
uplug_cleanup
uplug_getConfiguration_52
uplug_getContext_52
uplug_getCurrentLevel_52
uplug_getLibraryName_52
uplug_getLibrary_52
uplug_getPlugInternal_52
uplug_getPlugLevel_52
uplug_getPlugLoadStatus_52
uplug_getPlugName_52
uplug_getPluginFile_52
uplug_getSymbolName_52
uplug_init_52
uplug_loadPlugFromEntrypoint_52
uplug_nextPlug_52
uplug_removePlug_52
uplug_setContext_52
uplug_setPlugLevel_52
uplug_setPlugName_52
uplug_setPlugNoUnload_52
upper
uppercase letter
uprops.cpp
uprops_getSource_52
upropsvec_addPropertyStarts_52
uprv_aestrncpy_52
uprv_asciiFromEbcdic() string[%d] contains a variant character in position %d
uprv_asciiFromEbcdic_52
uprv_asciitolower_52
uprv_calloc_52
uprv_ceil_52
uprv_compareASCIIPropertyNames_52
uprv_compareEBCDICPropertyNames_52
uprv_compareInvAscii_52
uprv_compareInvEbcdicAsAscii_52
uprv_compareInvEbcdic_52
uprv_convertToLCID_52
uprv_convertToPosix_52
uprv_copyArray16
uprv_copyArray32
uprv_copyAscii_52
uprv_copyEbcdic() string[%] contains a variant character in position %d
uprv_copyEbcdic_52
uprv_copyFromAscii() string[%d] contains a variant character in position %d
uprv_deleteListFormatData
uprv_deleteUObject_52
uprv_dl_close_52
uprv_dl_open_52
uprv_dlsym_func_52
uprv_eastrncpy_52
uprv_ebcdicFromAscii() string[%d] contains a variant character in position %d
uprv_ebcdicFromAscii_52
uprv_ebcdicToLowercaseAscii_52
uprv_ebcdictolower_52
uprv_fabs_52
uprv_floor_52
uprv_fmax_52
uprv_fmin_52
uprv_fmod_52
uprv_free_52
uprv_getCharNameCharacters_52
uprv_getDefaultCodepage_52
uprv_getDefaultCodepage_52::name
uprv_getDefaultLocaleID_52
uprv_getInfinity_52
uprv_getMaxCharNameLength_52
uprv_getMaxValues_52
uprv_getNaN_52
uprv_getPOSIXIDForCategory(int)
uprv_getPOSIXIDForDefaultCodepage()::posixID
uprv_getPOSIXIDForDefaultLocale()::posixID
uprv_getRawUTCtime_52
uprv_getUTCtime_52
uprv_haveProperties_52
uprv_int32Comparator_52
uprv_isASCIILetter_52
uprv_isInfinite_52
uprv_isInvariantString_52
uprv_isInvariantUString_52
uprv_isNaN_52
uprv_isNegativeInfinity_52
uprv_isPositiveInfinity_52
uprv_itou_52
uprv_listformatter_cleanup
uprv_log_52
uprv_malloc_52
uprv_mapFile_52
uprv_maxMantissa_52
uprv_max_52
uprv_maximumPtr_52
uprv_min_52
uprv_modf_52
uprv_normalizer2_cleanup
uprv_pathIsAbsolute_52
uprv_pow10_52
uprv_pow_52
uprv_readDirectUInt16
uprv_readDirectUInt32
uprv_readSwapUInt16
uprv_readSwapUInt32
uprv_realloc_52
uprv_round_52
uprv_sortArray_52
uprv_stableBinarySearch_52
uprv_strCompare_52
uprv_strdup_52
uprv_stricmp_52
uprv_strndup_52
uprv_strnicmp_52
uprv_swapArray16
uprv_swapArray32
uprv_syntaxError_52
uprv_timezone_52
uprv_toupper_52
uprv_trunc_52
uprv_tzname_52
uprv_tzname_52::decemberSolstice
uprv_tzname_52::juneSolstice
uprv_tzset_52
uprv_uint16Comparator_52
uprv_uint32Comparator_52
uprv_unmapFile_52
uprv_writeDirectUInt16
uprv_writeDirectUInt32
uprv_writeSwapUInt16
uprv_writeSwapUInt32
upvec_cloneArray_52
upvec_close_52
upvec_compactToUTrie2Handler_52
upvec_compactToUTrie2WithRowIndexes_52
upvec_compact_52
upvec_compareRows
upvec_getArray_52
upvec_getRow_52
upvec_getValue_52
upvec_open_52
upvec_setValue_52
ur
ur_IN
ur_PK
urd
ures_appendResPath(UResourceBundle*, char const*, int, UErrorCode*)
ures_cleanup()
ures_closeBundle(UResourceBundle*, signed char)
ures_close_52
ures_cnv.c
ures_compareRows
ures_copyResb_52
ures_countArrayItems_52
ures_findResource_52
ures_findSubResource_52
ures_getBinary_52
ures_getByIndex_52
ures_getByKeyWithFallback_52
ures_getByKey_52
ures_getFunctionalEquivalent_52
ures_getIntVector_52
ures_getInt_52
ures_getKey_52
ures_getKeywordValues_52
ures_getLocaleByType_52
ures_getLocaleInternal_52
ures_getLocale_52
ures_getName_52
ures_getNextResource_52
ures_getNextString_52
ures_getSize_52
ures_getStringByIndex_52
ures_getStringByKeyWithFallback_52
ures_getStringByKey_52
ures_getString_52
ures_getType_52
ures_getUInt_52
ures_getUTF8StringByIndex_52
ures_getUTF8StringByKey_52
ures_getUTF8String_52
ures_getVersionByKey_52
ures_getVersionNumberInternal_52
ures_getVersionNumber_52
ures_getVersion_52
ures_hasNext_52
ures_initStackObject_52
ures_loc_closeLocales(UEnumeration*)
ures_loc_countLocales(UEnumeration*, UErrorCode*)
ures_loc_nextLocale(UEnumeration*, int*, UErrorCode*)
ures_loc_resetLocales(UEnumeration*, UErrorCode*)
ures_openAvailableLocales_52
ures_openDirect_52
ures_openFillIn_52
ures_openU_52
ures_open_52
ures_resetIterator_52
ures_swap().swapArray16(16-bit units[%d]) failed
ures_swap().udata_swapInvStringBlock(keys[%d]) failed
ures_swap(): data format %02x.%02x.%02x.%02x (format version %02x.%02x) is not a resource bundle
ures_swap(): resource top %d exceeds bundle length %d
ures_swap(): too few bytes (%d after header) for a resource bundle
ures_swap(): too few indexes for a 1.1+ resource bundle
ures_swap(): unable to allocate memory for sorting tables (max length: %d)
ures_swap(): unable to allocate memory for tracking resources
ures_swapResource
ures_swapResource(array res=%08x)[%d].recurse(%08x) failed
ures_swapResource(root res=%08x) failed
ures_swapResource(table res=%08x).uprv_sortArray(%d items) failed
ures_swapResource(table res=%08x)[%d].recurse(%08x) failed
ures_swap_52
ures_toUTF8String(unsigned short const*, int, char*, int*, signed char, UErrorCode*)
uresbund.cpp
uresdata.c
us
us-
usascii
usc_impl.c
uscript.c
uscript_breaksBetweenLetters_52
uscript_closeRun_52
uscript_getCode_52
uscript_getName_52
uscript_getSampleString_52
uscript_getSampleUnicodeString_52(UScriptCode)
uscript_getScriptExtensions_52
uscript_getScript_52
uscript_getShortName_52
uscript_getUsage_52
uscript_hasScript_52
uscript_isCased_52
uscript_isRightToLeft_52
uscript_nextRun_52
uscript_openRun_52
uscript_props.cpp
uscript_resetRun_52
uscript_setRunText_52
useDynamicWindow
userv_deleteStringPair
uset.cpp
uset_addAllCodePoints_52
uset_addAll_52
uset_addRange_52
uset_addString_52
uset_add_52
uset_applyIntPropertyValue_52
uset_applyPattern_52
uset_applyPropertyAlias_52
uset_charAt_52
uset_cleanup
uset_clear_52
uset_cloneAsThawed_52
uset_clone_52
uset_closeOver_52
uset_close_52
uset_compact_52
uset_complementAll_52
uset_complement_52
uset_containsAllCodePoints_52
uset_containsAll_52
uset_containsNone_52
uset_containsRange_52
uset_containsSome_52
uset_containsString_52
uset_contains_52
uset_equals_52
uset_freeze_52
uset_getItemCount_52
uset_getItem_52
uset_getSerializedRangeCount_52
uset_getSerializedRange_52
uset_getSerializedSet_52
uset_indexOf_52
uset_isEmpty_52
uset_isFrozen_52
uset_openEmpty_52
uset_openPatternOptions_52
uset_openPattern_52
uset_open_52
uset_props.cpp
uset_removeAllStrings_52
uset_removeAll_52
uset_removeRange_52
uset_removeString_52
uset_remove_52
uset_resemblesPattern_52
uset_retainAll_52
uset_retain_52
uset_serialize_52
uset_serializedContains_52
uset_setSerializedToOne_52
uset_set_52
uset_size_52
uset_spanBackUTF8_52
uset_spanBack_52
uset_spanUTF8_52
uset_span_52
uset_toPattern_52
usetiter.cpp
ushape.cpp
usprep.cpp
usprepMutex
usprep_cleanup
usprep_close_52
usprep_map(UStringPrepProfile const*, unsigned short const*, int, unsigned short*, int, int, UParseError*, UErrorCode*)
usprep_openByType_52
usprep_open_52
usprep_prepare_52
usprep_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as StringPrep .spp data
usprep_swap(): too few bytes (%d after header) for StringPrep .spp data
usprep_swap(): too few bytes (%d after header) for all of StringPrep .spp data
usprep_swap_52
ustack.cpp
ustr_cnv.c
ustr_hashCharsN_52
ustr_hashICharsN_52
ustr_hashUCharsN_52
ustr_titlecase_brkiter.cpp
ustr_wcs.cpp
ustrcase.cpp
ustrcase_internalFold_52
ustrcase_internalToLower_52
ustrcase_internalToTitle_52
ustrcase_internalToUpper_52
ustrcase_locale.cpp
ustrcase_map_52
ustrcase_setTempCaseMapLocale_52
ustrenum.cpp
ustrenum_close
ustrenum_count
ustrenum_next
ustrenum_reset
ustrenum_unext
ustrfmt.c
ustring.cpp
ustrtrns.cpp
ut
utext.cpp
utext_char32At_52
utext_clone_52
utext_close_52
utext_copy_52
utext_current32_52
utext_equals_52
utext_extract_52
utext_freeze_52
utext_getNativeIndex_52
utext_getPreviousNativeIndex_52
utext_hasMetaData_52
utext_isLengthExpensive_52
utext_isWritable_52
utext_moveIndex32_52
utext_nativeLength_52
utext_next32From_52
utext_next32_52
utext_openCharacterIterator_52
utext_openConstUnicodeString_52
utext_openReplaceable_52
utext_openUChars_52
utext_openUTF8_52
utext_openUnicodeString_52
utext_previous32From_52
utext_previous32_52
utext_replace_52
utext_setNativeIndex_52
utext_setup_52
utf16
utf16BEIteratorCurrent
utf16BEIteratorNext
utf16BEIteratorPrevious
utf16_caseContextIterator(void*, signed char)
utf16be
utf16beversion1
utf16bigendian
utf16le
utf16leversion1
utf16littleendian
utf16oppositeendian
utf16platformendian
utf16version1
utf16version2
utf32
utf32BOM
utf32be
utf32bigendian
utf32le
utf32littleendian
utf32oppositeendian
utf32platformendian
utf7
utf8
utf8Funcs
utf8IteratorCurrent
utf8IteratorGetIndex
utf8IteratorGetState
utf8IteratorHasNext
utf8IteratorHasPrevious
utf8IteratorMove
utf8IteratorNext
utf8IteratorPrevious
utf8IteratorSetState
utf8TextAccess
utf8TextClone
utf8TextClose
utf8TextExtract
utf8TextLength
utf8TextMapIndexToUTF16
utf8TextMapOffsetToNative
utf8_appendCharSafeBody_52
utf8_back1SafeBody_52
utf8_caseContextIterator(void*, signed char)
utf8_countTrailBytes_52
utf8_errorValue
utf8_minChar32
utf8_minLegal
utf8_nextCharSafeBodyPointer(unsigned char const**, unsigned char const*, int)
utf8_nextCharSafeBodyTerminated(unsigned char const**, int)
utf8_nextCharSafeBody_52
utf8_offsets
utf8_prevCharSafeBody_52
utf_impl.c
util.cpp
util_props.cpp
utr22
utrace.c
utrace_cleanup_52
utrace_data_52
utrace_entry_52
utrace_exit_52
utrace_format_52
utrace_functionName_52
utrace_getFunctions_52
utrace_getLevel_52
utrace_level_52
utrace_setFunctions_52
utrace_setLevel_52
utrace_vformat_52
utrie.cpp
utrie2.cpp
utrie2_builder.cpp
utrie2_cloneAsThawed_52
utrie2_clone_52
utrie2_close_52
utrie2_enumForLeadSurrogate_52
utrie2_enum_52
utrie2_freeze_52
utrie2_fromUTrie_52
utrie2_get32FromLeadSurrogateCodeUnit_52
utrie2_get32_52
utrie2_getVersion_52
utrie2_internalU8NextIndex_52
utrie2_internalU8PrevIndex_52
utrie2_isFrozen_52
utrie2_openDummy_52
utrie2_openFromSerialized_52
utrie2_open_52
utrie2_serialize_52
utrie2_set32ForLeadSurrogateCodeUnit_52
utrie2_set32_52
utrie2_setRange32_52
utrie2_swapAnyVersion_52
utrie2_swap_52
utrie_clone_52
utrie_close_52
utrie_compact(UNewTrie*, signed char, UErrorCode*)
utrie_defaultGetFoldingOffset_52
utrie_enum_52
utrie_get32_52
utrie_getData_52
utrie_open_52
utrie_serialize_52
utrie_set32_52
utrie_setRange32_52
utrie_swap_52
utrie_unserializeDummy_52
utrie_unserialize_52
uts46
uts46.cpp
utypes.c
uv
uvector.cpp
uvectr32.cpp
uvectr64.cpp
uz
uz_AF
uz_Arab
uz_CN
uz_Cyrl
uz_Cyrl_UZ
uz_Latn
uz_Latn_UZ
uz_UZ
uz_UZ_CYRILLIC
uz_UZ_CYRL
uz_UZ_LATN
uzb
uzn
u{
u|
u}
u}$
u})
u}-
u}6
u}D
u
u&
u-
u5
uA
uV
v
v"
v#
v#~#
v%
v&
v)
v*
v+
v,
v-
v0
v0!
v0#
v0$
v0)
v0,
v00
v01
v02
v06
v07
v0;
v0>
v0B
v0C
v0D
v0K
v0Z
v0_
v0e
v0h
v0
v3
v9
v;
v<
vL
vN
vO
vP
vP*
vQ
vQ0
vQ1
vT4
vV
vV-
vX
vY
vY-
vY0
vZ0
v\
v]
v^
v^0
v_
v_-
v`0
va
va-
va/
va0
va\
vai
vai_Vaii
vaii
validityTable
variableTop
variabletop
variantAlias
vb
vb-
vb0
vc-
vd
ve
ve_ZA
ven
ven_ZA
version=
vert
vf
vf%
vf-
vf0
vg
vgt
vh
vh-
vh0
vhm
vi
vi_VN
vic
vie
vj
vk
vk-
vl
vmw
vn
vo
vo-
vol
volume
vot
vp
vpj
vr-
vt
vt0
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vtable for icu_52::Appendable
vtable for icu_52::BMPSet
vtable for icu_52::BreakIterator
vtable for icu_52::ByteSink
vtable for icu_52::BytesDictionaryMatcher
vtable for icu_52::BytesTrieBuilder
vtable for icu_52::BytesTrieBuilder::BTLinearMatchNode
vtable for icu_52::CanonicalIterator
vtable for icu_52::CharacterIterator
vtable for icu_52::CheckedArrayByteSink
vtable for icu_52::CjkBreakEngine
vtable for icu_52::ComposeNormalizer2
vtable for icu_52::DateInterval
vtable for icu_52::DecomposeNormalizer2
vtable for icu_52::DictionaryBreakEngine
vtable for icu_52::DictionaryMatcher
vtable for icu_52::ErrorCode
vtable for icu_52::EventListener
vtable for icu_52::FCDNormalizer2
vtable for icu_52::FilteredNormalizer2
vtable for icu_52::ForwardCharacterIterator
vtable for icu_52::ICUBreakIteratorFactory
vtable for icu_52::ICUBreakIteratorService
vtable for icu_52::ICULanguageBreakFactory
vtable for icu_52::ICULocaleService
vtable for icu_52::ICUNotifier
vtable for icu_52::ICUResourceBundleFactory
vtable for icu_52::ICUService
vtable for icu_52::ICUServiceFactory
vtable for icu_52::ICUServiceKey
vtable for icu_52::IDNA
vtable for icu_52::KeywordEnumeration
vtable for icu_52::KhmerBreakEngine
vtable for icu_52::LanguageBreakEngine
vtable for icu_52::LanguageBreakFactory
vtable for icu_52::LaoBreakEngine
vtable for icu_52::ListFormatter
vtable for icu_52::Locale
vtable for icu_52::LocaleKey
vtable for icu_52::LocaleKeyFactory
vtable for icu_52::MessagePattern
vtable for icu_52::NoopNormalizer2
vtable for icu_52::Normalizer
vtable for icu_52::Normalizer2
vtable for icu_52::Normalizer2WithImpl
vtable for icu_52::ParsePosition
vtable for icu_52::RBBIRuleBuilder
vtable for icu_52::RBBIRuleScanner
vtable for icu_52::RBBISymbolTable
vtable for icu_52::Replaceable
vtable for icu_52::ResourceBundle
vtable for icu_52::RuleBasedBreakIterator
vtable for icu_52::ServiceEnumeration
vtable for icu_52::ServiceListener
vtable for icu_52::SimpleFactory
vtable for icu_52::SimpleLocaleKeyFactory
vtable for icu_52::StringCharacterIterator
vtable for icu_52::StringEnumeration
vtable for icu_52::StringTrieBuilder
vtable for icu_52::StringTrieBuilder::BranchHeadNode
vtable for icu_52::StringTrieBuilder::BranchNode
vtable for icu_52::StringTrieBuilder::FinalValueNode
vtable for icu_52::StringTrieBuilder::IntermediateValueNode
vtable for icu_52::StringTrieBuilder::LinearMatchNode
vtable for icu_52::StringTrieBuilder::ListBranchNode
vtable for icu_52::StringTrieBuilder::Node
vtable for icu_52::StringTrieBuilder::SplitBranchNode
vtable for icu_52::StringTrieBuilder::ValueNode
vtable for icu_52::SymbolTable
vtable for icu_52::ThaiBreakEngine
vtable for icu_52::UCharCharacterIterator
vtable for icu_52::UCharsDictionaryMatcher
vtable for icu_52::UCharsTrieBuilder
vtable for icu_52::UCharsTrieBuilder::UCTLinearMatchNode
vtable for icu_52::UObject
vtable for icu_52::UStack
vtable for icu_52::UStringEnumeration
vtable for icu_52::UTS46
vtable for icu_52::UVector
vtable for icu_52::UVector32
vtable for icu_52::UVector64
vtable for icu_52::UnhandledEngine
vtable for icu_52::UnicodeFilter
vtable for icu_52::UnicodeFunctor
vtable for icu_52::UnicodeMatcher
vtable for icu_52::UnicodeSet
vtable for icu_52::UnicodeSetIterator
vtable for icu_52::UnicodeString
vtable for icu_52::UnicodeStringAppendable
vu
vu)
vu-
vu0
vu1
vu1&
vun
vv
vyo
vz
vz%
vz-
v}
v}0
v}1
w
w!
w"
w#
w$
w%
w&
w(
w,
w0
w0#
w00
w04
w5
w:
w>
wE
wF
wI
wL
wO
wP
wQ
wQ0
wQ;
wR
wR-
wS
wS-
wT
wT7
wU
wW
wX
wZ
wZ-
w[-
w]
w_
w_0
w`
wa
wae
wak
wal
war
was
wb
wbq
wbr
wc
wc0
we
we%
we+
we-
we0
weV
wed
weeHours
week
weekData
weekday
wen
wen_DE
wf
wf6
wg
wh
wi-
wide
windows
windows-10000
windows-10007
windows-1200
windows-1201
windows-1250
windows-1251
windows-1252
windows-1253
windows-1254
windows-1255
windows-1256
windows-1257
windows-1258
windows-20127
windows-20866
windows-21866
windows-28592
windows-28593
windows-28594
windows-28595
windows-28596
windows-28597
windows-28598
windows-28599
windows-28603
windows-28605
windows-31j
windows-51932
windows-54936
windows-65001
windows-874
windows-874-2000
windows-932
windows-936
windows-936-2000
windows-949
windows-949-2000
windows-950
windows-950-2000
windows10000
windows10007
windows1200
windows1201
windows1250
windows1251
windows1252
windows1253
windows1254
windows1255
windows1256
windows1257
windows1258
windows20127
windows20866
windows21866
windows28592
windows28593
windows28594
windows28595
windows28596
windows28597
windows28598
windows28599
windows28603
windows28605
windows31j
windows51932
windows54936
windows65001
windows874
windows8742000
windows932
windows936
windows9362000
windows949
windows9492000
windows950
windows9502000
wintz.c
wk
wk0
wln
wls
wm
wm!
wm"
wm)
wm-
wm/
wm0
wm0W
wm1
wm8
wmI
wmL
wm_
wmy
wn-
wo_SN
wol
word
word-final
word-initial
word-medial
wr
writeStage3Roundtrip
writingShareF
written
ws
wtm
wuL
wuu
wy
wyu
w{
w
w-
w0
w1
wS
x
x!
x"
x#
x$
x%
x&
x'
x(
x*
x+
x,
x-
x-Accents
x-Fullwidth
x-Halfwidth
x-IBM921
x-ISO-2022-CN-GB
x-ISO-8859-6S
x-JISAutoDetect
x-Jamo
x-MS932_0213
x-MS950-HKSCS
x-MacCyrillic
x-MacUkraine
x-Pinyin
x-Publishing
x-UTF-16LE-BOM
x-UTF_8J
x-big5
x-iso-8859-11
x-mac-cyrillic
x-macroman
x-ms-cp932
x-sjis
x-utf-16be
x-utf-16le
x-windows-1256S
x-windows-50220
x-windows-874
x-windows-950
x-windows-iso2022jp
x0
x0#
x00
x0a
x11compoundtext
x3
x5
x6
x7
x8
x:
x;
x=
x@
xD
xJ
xO
xP
xQ
xQ&
xQ0
xR
xS
xS0
xT
xU
xV
xX
xY
xZ
x[
x[-
x[0
x[5
x^
x^"
x^,
x^-
x^.
x^0
x^3
x^?
x^\
x^g
x_
xa
xal
xav
xbig5
xc
xcr
xd
xd0
xdigit
xe
xe0
xe6
xe<P
xeW[
xeucjp
xf
xh
xh_ZA
xho
xi
xibm921
xiso2022cngb
xiso885911
xiso88596s
xj
xjisautodetect
xk
xk%
xk-
xk0
xk1
xl
xlc
xld
xm0
xmaccyrillic
xmacroman
xmacukraine
xmr
xms932213
xms950hkscs
xmscp932
xnr
xo
xog
xp
xpe
xpr
xp~
xq
xr
xs
xs0
xsa
xsjis
xsl
xsr
xtg-x-cel-gaulish
xu
xum
xutf16be
xutf16le
xutf16lebom
xutf8j
xv
xv*g
xv-
xvoS
xwindows1256s
xwindows50220
xwindows874
xwindows950
xwindowsiso2022jp
xx
xy#
xz
xz-
x{
x|-
x}
x~
y
y!
y#
y$
y%
y'
y(
y)
y0
y0(
y00
y01
y03
y0=
y0O
y0`
y0e
y1
y2
y37
y5
y9
y:
yE
yH
yI
yLLLL
yMMMMEEEEd
yN
yO
yQ
yR
yS
yV
yW
yX
yX-
yY
y\
y\-
y\0
y]
y]-
y^
y^0
y_
y_!
y_0
y_C
ya-
yao
yap
yard
yav
yb
yb-
ybb
ydd
years
yehHamzaToYeh
yes
yf
yh
yi
yi2
yid
yk
yl
ym
yn
yo
yo_NG
yor
ypk
yq
yr
yr)
yr0
yr1
yrb
yrk
ys
yt
yu
yua
yue
yv
yw
yx
yy
yy-
yyyy
yyyyM
yyyyMEEEEd
yyyyMEd
yyyyMM
yyyyMMM
yyyyMMMEEEEd
yyyyMMMEd
yyyyMMMM
yyyyMMMMEd
yyyyMMMMccccd
yyyyMMMMd
yyyyMMMd
yyyyMMdd
yyyyMd
yyyyQQQ
yyyyQQQQ
yz
yz-
y|
y}
y}-
y}D
y~
y
y-
yJ
z
z!
z"
z&
z'
z+
z-
z.
z/
z0
z1
z5
z8
z<
zA
zD
zJ
zO
zP
zR-
zT-
zV
zW
zX!
zZ
zZ-
z[
z[-
z\
z]
z_
za
zai
zap
zb
zbl
zc
zc-
zd
zdj
ze
zea
zen
zero
zeroMem
zf
zf&
zf)R
zf0
zfC
zfd
zgh
zh
zh-guoyu
zh-hakka
zh-min-nan
zh-xiang
zh@collation=stroke
zhTW
zh_AU
zh_BN
zh_CHS
zh_CHT
zh_CN
zh_CN@collation=stroke
zh_GAN
zh_GB
zh_GF
zh_GUOYU
zh_HAKKA
zh_HK
zh_Hans
zh_Hans@collation=stroke
zh_Hans_CN
zh_Hans_CN@collation=stroke
zh_Hans_SG
zh_Hant
zh_Hant@collation=stroke
zh_Hant_HK
zh_Hant_MO
zh_Hant_TW
zh_Hant_TW@collation=stroke
zh_ID
zh_MIN_NAN
zh_MO
zh_MY
zh_PA
zh_PF
zh_PH
zh_SG
zh_SR
zh_TH
zh_TW
zh_TW@collation=stroke
zh_US
zh_VN
zh_WUU
zh_XIANG
zh_YUE
zh_guoyu
zh_hakka
zh_min_nan
zh_xiang
zha
zho
zhuyin
zi
zl
zl-
zl0
zmi
znd
zo
zo-
zodiacs
zoneStrings
zp
zr0
zs'
zs-
zsm
zu
zu_ZA
zul
zun
zv
zv-
zv0
zv1
zw
zx
zxx
zy
zyb
zz
zz0
zz1
zz4
zza
z{
z|
z}
z~$
z~\
{
{"
{#
{$
{%
{&
{'
{(
{)
{-
{0
{0!
{0$
{0)
{00
{01
{02
{0?
{0J
{0K0"
{0e
{0m
{7
{8
{:
{;
{>
{@
{ABCDEFGHI
{C
{F
{H
{M
{O-
{Q
{Q1
{S
{S-
{T-
{U!
{U-
{W
{W-
{Y
{Y-
{Z
{[
{\
{^-
{_
{a
{abcdefghi
{c
{d
{f
{g
{h
{h-
{i
{k
{k$
{k(
{k0
{k1
{kJ
{k\
{ko
{l
{n
{q
{r
{r-
{s
{s#
{s0
{s6
{u
{v
{v&
{v*
{v-
{v.
{v0
{v1
{v<
{vB
{vE
{x-
{y
{z
{|)
{}
{~-
{~0
|
|!
|"{
|#
|$
|%
|&
|+
|-G<
|-G=
|-GX
|0
|0!
|0$
|0/
|00
|01
|02
|06
|09
|0k
|0l
|0m
|0t
|0z
|4
|6
|7
|8
|9
|:
|;
|B
|O
|Q
|Q0
|Q1
|Q5
|QG
|S
|T
|T)
|T1
|U
|W
|X
|Y
|[
|\
|]-
|^0
|_
|_-
|_0
|_9
|`
|a
|b
|c
|e
|f
|g
|g0
|h
|i
|i-
|i3
|j
|m
|o
|p-
|r
|s
|t-
|u
|v
|v&
|v'
|v0
|v1
|v7
|w-
|x
|y
|y-
|{
||
|~
}
}!
}"
}"$
}$
}%
}'
}(
})
}+
},
}-
}.
}0
}0'
}00
}01
}02
}1
}3
}:
}A
}B
}C
}CQ
}CQMR
}E
}F
}H
}JKLMNOPQR
}M
}O
}P
}Q
}R
}T
}T"
}T$
}T5
}U
}W
}Y
}Y$
}Y0
}Y1
}Y2
}Z
}[
}\
}_
}a
}b
}c
}d
}e
}i
}i"
}i0
}jklmnopqr
}k
}l
}l-
}ln
}n
}o
}p
}p'
}p)
}pg
}q
}r
}r-
}u
}u-
}v
}v'
}v0
}v1
}v4
}v7
}v{
}w
}w0
}y
}z
}|
}|2
}}
}}!
}~
}
~
~!
~#
~$
~)
~*
~*{
~+
~,
~.
~0
~0"
~0$
~0)
~0-
~00
~01
~02
~09
~0:
~0?
~0C
~0E
~0F
~0J
~0Y0
~0]
~0j
~0w
~2
~4
~5
~7
~8
~<
~=
~?
~@
~F
~N
~N-
~N1
~NCQ
~O
~Q
~S
~U
~V-
~W
~X
~Z
~[
~\
~]
~^
~^0
~^[
~_
~`
~a
~a#
~a1
~b-
~b0
~b9
~f
~g
~g+
~g-
~g0
~g1
~gM
~gi
~gm
~gu
~h-
~i
~j
~j-
~k
~k-
~l
~lt
~n
~n-
~n1
~o
~p
~pL
~r
~stuvwxyz
~t
~u
~v
~v&
~v)
~v.
~v0
~v1
~v2
~v4
~vUa'Y
~vUa'YCQ
~w
~w-
~x
~x-
~y
~z
~z-
~|
~~
~

 
!
#
$
$)%
%
'
(
,
.
0
0"
0#
0%
0,
0-
0/
00
01
02
03
0<
0A
0T
0Y
0\
0q
0w
0
1
3
6
:
H
J
N
O
R
R-
S
S1
SJ
T
U
W
X
Z
[
\
]
^
_-
`
`-
a
b$
bCQ
bEN
b[
bl
bs^
c
d
e-
f
g
g(
g0
g3
g8
gL
gS
gi
h
h#
h/
h0
i
j-
k-
n
o
r
u
v
w
x
y
y-
y0
z
z0
zU
|-
}
}-
~

